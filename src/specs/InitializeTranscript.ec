pragma Goals:printall.

require import AllCore.
require        Constants.
require import GetTranscriptChallenge.
require import Field.
require import Modexp.
require import Utils.
require import PurePrimops.
require import UInt256.
require import UpdateTranscript.
require import Verifier.
require import VerifierConsts.
require import YulPrimops.
require import Keccak.

abbrev (-) = FieldR.(-).
abbrev ( * ) = FieldR.( * ).
abbrev ( + ) = FieldR.( + ).

module InitializeTranscript = {
  proc low(): unit = {
    var _2, _4, _6, _8, _10, _12, _14, _16, _18, _20, _23, _25, _27, _30, _33, _35, _37, _40, _43, _45, _47, _50, _52, _54, _56, _58, _60, _62, _64, z, _68, _71, _73, _75, _77, _79, _81, _83, _85, _87, _89, _91, _93, _95, _97, _99, _101, _103, _105, _107, _110, _112, _114, _116, _118;
    _2 <@ Primops.mload(PROOF_PUBLIC_INPUT);
    UpdateTranscript.low(_2);
    _4 <@ Primops.mload(PROOF_STATE_POLYS_0_X_SLOT);
    UpdateTranscript.low(_4);
    _6 <@ Primops.mload(PROOF_STATE_POLYS_0_Y_SLOT);
    UpdateTranscript.low(_6);
    _8 <@ Primops.mload(PROOF_STATE_POLYS_1_X_SLOT);
    UpdateTranscript.low(_8);
    _10 <@ Primops.mload(PROOF_STATE_POLYS_1_Y_SLOT);
    UpdateTranscript.low(_10);
    _12 <@ Primops.mload(PROOF_STATE_POLYS_2_X_SLOT);
    UpdateTranscript.low(_12);
    _14 <@ Primops.mload(PROOF_STATE_POLYS_2_Y_SLOT);
    UpdateTranscript.low(_14);
    _16 <@ Primops.mload(PROOF_STATE_POLYS_3_X_SLOT);
    UpdateTranscript.low(_16);
    _18 <@ Primops.mload(PROOF_STATE_POLYS_3_Y_SLOT);
    UpdateTranscript.low(_18);
    _20 <@ GetTranscriptChallenge.low(W256.zero);
    Primops.mstore(STATE_ETA_SLOT, _20);
    _23 <@ Primops.mload(PROOF_LOOKUP_S_POLY_X_SLOT);
    UpdateTranscript.low(_23);
    _25 <@ Primops.mload(PROOF_LOOKUP_S_POLY_Y_SLOT);
    UpdateTranscript.low(_25);
    _27 <@ GetTranscriptChallenge.low(W256.one);
    Primops.mstore(STATE_BETA_SLOT, _27);
    _30 <@ GetTranscriptChallenge.low(W256.of_int 2);
    Primops.mstore(STATE_GAMMA_SLOT, _30);
    _33 <@ Primops.mload(PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT);
    UpdateTranscript.low(_33);
    _35 <@ Primops.mload(PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT);
    UpdateTranscript.low(_35);
    _37 <@ GetTranscriptChallenge.low(W256.of_int 3);
    Primops.mstore(STATE_BETA_LOOKUP_SLOT, _37);
    _40 <@ GetTranscriptChallenge.low(W256.of_int 4);
    Primops.mstore(STATE_GAMMA_LOOKUP_SLOT, _40);
    _43 <@ Primops.mload(PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT);
    UpdateTranscript.low(_43);
    _45 <@ Primops.mload(PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT);
    UpdateTranscript.low(_45);
    _47 <@ GetTranscriptChallenge.low(W256.of_int 5);
    Primops.mstore(STATE_ALPHA_SLOT, _47);
    _50 <@ Primops.mload(PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT);
    UpdateTranscript.low(_50);
    _52 <@ Primops.mload(PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT);
    UpdateTranscript.low(_52);
    _54 <@ Primops.mload(PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT);
    UpdateTranscript.low(_54);
    _56 <@ Primops.mload(PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT);
    UpdateTranscript.low(_56);
    _58 <@ Primops.mload(PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT);
    UpdateTranscript.low(_58);
    _60 <@ Primops.mload(PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT);
    UpdateTranscript.low(_60);
    _62 <@ Primops.mload(PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT);
    UpdateTranscript.low(_62);
    _64 <@ Primops.mload(PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT);
    UpdateTranscript.low(_64);
    z <@ GetTranscriptChallenge.low(W256.of_int 6);
    Primops.mstore(STATE_Z_SLOT, z);
    _68 <@ Modexp.low(z, DOMAIN_SIZE);
    Primops.mstore(STATE_Z_IN_DOMAIN_SIZE, _68);
    _71 <@ Primops.mload(PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT);
    UpdateTranscript.low(_71);
    _73 <@ Primops.mload(PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT);
    UpdateTranscript.low(_73);
    _75 <@ Primops.mload(PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT);
    UpdateTranscript.low(_75);
    _77 <@ Primops.mload(PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT);
    UpdateTranscript.low(_77);
    _79 <@ Primops.mload(PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT);
    UpdateTranscript.low(_79);
    _81 <@ Primops.mload(PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT);
    UpdateTranscript.low(_81);
    _83 <@ Primops.mload(PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT);
    UpdateTranscript.low(_83);
    _85 <@ Primops.mload(PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT);
    UpdateTranscript.low(_85);
    _87 <@ Primops.mload(PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT);
    UpdateTranscript.low(_87);
    _89 <@ Primops.mload(PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT);
    UpdateTranscript.low(_89);
    _91 <@ Primops.mload(PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT);
    UpdateTranscript.low(_91);
    _93 <@ Primops.mload(PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT);
    UpdateTranscript.low(_93);
    _95 <@ Primops.mload(PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT);
    UpdateTranscript.low(_95);
    _97 <@ Primops.mload(PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT);
    UpdateTranscript.low(_97);
    _99 <@ Primops.mload(PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT);
    UpdateTranscript.low(_99);
    _101 <@ Primops.mload(PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT);
    UpdateTranscript.low(_101);
    _103 <@ Primops.mload(PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT);
    UpdateTranscript.low(_103);
    _105 <@ Primops.mload(PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT);
    UpdateTranscript.low(_105);
    _107 <@ GetTranscriptChallenge.low(W256.of_int 7);
    Primops.mstore(STATE_V_SLOT, _107);
    _110 <@ Primops.mload(PROOF_OPENING_PROOF_AT_Z_X_SLOT);
    UpdateTranscript.low(_110);
    _112 <@ Primops.mload(PROOF_OPENING_PROOF_AT_Z_Y_SLOT);
    UpdateTranscript.low(_112);
    _114 <@ Primops.mload(PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT);
    UpdateTranscript.low(_114);
    _116 <@ Primops.mload(PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT);
    UpdateTranscript.low(_116);
    _118 <@ GetTranscriptChallenge.low(W256.of_int 8);
    Primops.mstore(STATE_U_SLOT, _118);
  }

  proc mid(
      initialS0 initialS1
      publicInput
      proofStatePolys0X proofStatePolys0Y
      proofStatePolys1X proofStatePolys1Y
      proofStatePolys2X proofStatePolys2Y
      proofStatePolys3X proofStatePolys3Y
      proofLookupSPolyX proofLookupSPolyY
      proofCopyPermutationGrandProductX proofCopyPermutationGrandProductY
      proofLookupGrandProductX proofLookupGrandProductY
      proofQuotientPolyParts0X proofQuotientPolyParts0Y
      proofQuotientPolyParts1X proofQuotientPolyParts1Y
      proofQuotientPolyParts2X proofQuotientPolyParts2Y
      proofQuotientPolyParts3X proofQuotientPolyParts3Y
      proofQuotientPolyOpeningAtZ
      proofStatePolys0OpeningAtZ proofStatePolys1OpeningAtZ
      proofStatePolys2OpeningAtZ proofStatePolys3OpeningAtZ
      proofStatePolys3OpeningAtZOmega
      proofGateSelectors0OpeningAtZ
      proofCopyPermutationPolys0OpeningAtZ proofCopyPermutationPolys1OpeningAtZ proofCopyPermutationPolys2OpeningAtZ
      proofCopyPermutationGrandProductOpeningAtZOmega
      proofLookupTPolyOpeningAtZ
      proofLookupSelectorPolyOpeningAtZ
      proofLookupTableTypePolyOpeningAtZ
      proofLookupSPolyOpeningAtZOmega
      proofLookupGrandProductOpeningAtZOmega
      proofLookupTPolyOpeningAtZOmega
      proofLinearisationPolyOpeningAtZ
      proofOpeningProofAtZX proofOpeningProofAtZY
      proofOpeningProofAtZOmegaX proofOpeningProofAtZOmegaY: int) :
      int * int * int * int * int * int * int * int * int * int = {

    var stateAlpha, stateBeta, stateBetaLookup, stateGamma, stateGammaLookup, stateEta : int;
    var stateZ, stateZInDomain, stateV, stateU : int;
    var state0_0, state1_0, state0_1, state1_1, state0_2, state1_2, state0_3, state1_3, 
        state0_4, state1_4, state0_5, state1_5, state0_6, state1_6, state0_7, state1_7,
        state0_8, state1_8, state0_9, state1_9, state0_10, state1_10, state0_11, state1_11,
        state0_12, state1_12, state0_13, state1_13, state0_14, state1_14, state0_15, state1_15,
        state0_16, state1_16, state0_17, state1_17, state0_18, state1_18, state0_19, state1_19,
        state0_20, state1_20, state0_21, state1_21, state0_22, state1_22, state0_23, state1_23, 
        state0_24, state1_24, state0_25, state1_25, state0_26, state1_26, state0_27, state1_27,
        state0_28, state1_28, state0_29, state1_29, state0_30, state1_30, state0_31, state1_31,
        state0_32, state1_32, state0_33, state1_33, state0_34, state1_34, state0_35, state1_35,
        state0_36, state1_36, state0_37, state1_37, state0_38, state1_38, state0_39, state1_39,
        state0_40, state1_40, state0_41, state1_41, state0_42, state1_42, state0_43, state1_43, 
        state0_44, state1_44 : int;

    (state0_0, state1_0) <@ UpdateTranscript.mid(initialS0, initialS1, publicInput);
    (state0_1, state1_1) <@ UpdateTranscript.mid(state0_0, state1_0, proofStatePolys0X);
    (state0_2, state1_2) <@ UpdateTranscript.mid(state0_1, state1_1, proofStatePolys0Y);
    (state0_3, state1_3) <@ UpdateTranscript.mid(state0_2, state1_2, proofStatePolys1X);
    (state0_4, state1_4) <@ UpdateTranscript.mid(state0_3, state1_3, proofStatePolys1Y);
    (state0_5, state1_5) <@ UpdateTranscript.mid(state0_4, state1_4, proofStatePolys2X);
    (state0_6, state1_6) <@ UpdateTranscript.mid(state0_5, state1_5, proofStatePolys2Y);
    (state0_7, state1_7) <@ UpdateTranscript.mid(state0_6, state1_6, proofStatePolys3X);
    (state0_8, state1_8) <@ UpdateTranscript.mid(state0_7, state1_7, proofStatePolys3Y);
    
    stateEta <@ GetTranscriptChallenge.mid(state0_8, state1_8, 0);

    (state0_9,   state1_9) <@ UpdateTranscript.mid(state0_8, state1_8, proofLookupSPolyX);
    (state0_10, state1_10) <@ UpdateTranscript.mid(state0_9, state1_9, proofLookupSPolyY);
    
    stateBeta  <@ GetTranscriptChallenge.mid(state0_10, state1_10, 1);
    stateGamma <@ GetTranscriptChallenge.mid(state0_10, state1_10, 2);                                   

    (state0_11, state1_11) <@ UpdateTranscript.mid(state0_10, state1_10, proofCopyPermutationGrandProductX);
    (state0_12, state1_12) <@ UpdateTranscript.mid(state0_11, state1_11, proofCopyPermutationGrandProductY);    

    stateBetaLookup  <@ GetTranscriptChallenge.mid(state0_12, state1_12, 3);
    stateGammaLookup <@ GetTranscriptChallenge.mid(state0_12, state1_12, 4);

    (state0_13, state1_13) <@ UpdateTranscript.mid(state0_12, state1_12, proofLookupGrandProductX);
    (state0_14, state1_14) <@ UpdateTranscript.mid(state0_13, state1_13, proofLookupGrandProductY);

    stateAlpha <@ GetTranscriptChallenge.mid(state0_14, state1_14, 5);
    
    (state0_15, state1_15) <@ UpdateTranscript.mid(state0_14, state1_14, proofQuotientPolyParts0X);
    (state0_16, state1_16) <@ UpdateTranscript.mid(state0_15, state1_15, proofQuotientPolyParts0Y);
    (state0_17, state1_17) <@ UpdateTranscript.mid(state0_16, state1_16, proofQuotientPolyParts1X);
    (state0_18, state1_18) <@ UpdateTranscript.mid(state0_17, state1_17, proofQuotientPolyParts1Y);
    (state0_19, state1_19) <@ UpdateTranscript.mid(state0_18, state1_18, proofQuotientPolyParts2X);
    (state0_20, state1_20) <@ UpdateTranscript.mid(state0_19, state1_19, proofQuotientPolyParts2Y);
    (state0_21, state1_21) <@ UpdateTranscript.mid(state0_20, state1_20, proofQuotientPolyParts3X);
    (state0_22, state1_22) <@ UpdateTranscript.mid(state0_21, state1_21, proofQuotientPolyParts3Y);

    stateZ <@ GetTranscriptChallenge.mid(state0_22, state1_22, 6);
    stateZInDomain <@ Modexp.mid(stateZ, Constants.DOMAIN_SIZE);

    (state0_23, state1_23) <@ UpdateTranscript.mid(state0_22, state1_22, proofQuotientPolyOpeningAtZ);
    (state0_24, state1_24) <@ UpdateTranscript.mid(state0_23, state1_23, proofStatePolys0OpeningAtZ);
    (state0_25, state1_25) <@ UpdateTranscript.mid(state0_24, state1_24, proofStatePolys1OpeningAtZ);
    (state0_26, state1_26) <@ UpdateTranscript.mid(state0_25, state1_25, proofStatePolys2OpeningAtZ);
    (state0_27, state1_27) <@ UpdateTranscript.mid(state0_26, state1_26, proofStatePolys3OpeningAtZ);
    (state0_28, state1_28) <@ UpdateTranscript.mid(state0_27, state1_27, proofStatePolys3OpeningAtZOmega);
    (state0_29, state1_29) <@ UpdateTranscript.mid(state0_28, state1_28, proofGateSelectors0OpeningAtZ);
    (state0_30, state1_30) <@ UpdateTranscript.mid(state0_29, state1_29, proofCopyPermutationPolys0OpeningAtZ);
    (state0_31, state1_31) <@ UpdateTranscript.mid(state0_30, state1_30, proofCopyPermutationPolys1OpeningAtZ);
    (state0_32, state1_32) <@ UpdateTranscript.mid(state0_31, state1_31, proofCopyPermutationPolys2OpeningAtZ);
    (state0_33, state1_33) <@ UpdateTranscript.mid(state0_32, state1_32, proofCopyPermutationGrandProductOpeningAtZOmega);
    (state0_34, state1_34) <@ UpdateTranscript.mid(state0_33, state1_33, proofLookupTPolyOpeningAtZ);
    (state0_35, state1_35) <@ UpdateTranscript.mid(state0_34, state1_34, proofLookupSelectorPolyOpeningAtZ);
    (state0_36, state1_36) <@ UpdateTranscript.mid(state0_35, state1_35, proofLookupTableTypePolyOpeningAtZ);
    (state0_37, state1_37) <@ UpdateTranscript.mid(state0_36, state1_36, proofLookupSPolyOpeningAtZOmega);
    (state0_38, state1_38) <@ UpdateTranscript.mid(state0_37, state1_37, proofLookupGrandProductOpeningAtZOmega);
    (state0_39, state1_39) <@ UpdateTranscript.mid(state0_38, state1_38, proofLookupTPolyOpeningAtZOmega);
    (state0_40, state1_40) <@ UpdateTranscript.mid(state0_39, state1_39, proofLinearisationPolyOpeningAtZ);

    stateV <@ GetTranscriptChallenge.mid(state0_40, state1_40, 7);

    (state0_41, state1_41) <@ UpdateTranscript.mid(state0_40, state1_40, proofOpeningProofAtZX);
    (state0_42, state1_42) <@ UpdateTranscript.mid(state0_41, state1_41, proofOpeningProofAtZY);
    (state0_43, state1_43) <@ UpdateTranscript.mid(state0_42, state1_42, proofOpeningProofAtZOmegaX);
    (state0_44, state1_44) <@ UpdateTranscript.mid(state0_43, state1_43, proofOpeningProofAtZOmegaY);

    stateU <@ GetTranscriptChallenge.mid(state0_44, state1_44, 8);

    return (stateAlpha, stateBeta, stateBetaLookup, stateGamma,
            stateGammaLookup, stateEta, stateZ, stateZInDomain, stateV, stateU);
  }

  proc high_encapsulated(
      initialS0 initialS1 : int,
       publicInput: FieldR.F,
       proofStatePolys0: g,
       proofStatePolys1: g,
       proofStatePolys2: g,
       proofStatePolys3: g,
       proofLookupSPoly: g,
       proofCopyPermutationGrandProduct: g,
       proofLookupGrandProduct: g,
       proofQuotientPolyParts0: g,
       proofQuotientPolyParts1: g,
       proofQuotientPolyParts2: g,
       proofQuotientPolyParts3: g,
       proofQuotientPolyOpeningAtZ: FieldR.F,
       proofStatePolys0OpeningAtZ proofStatePolys1OpeningAtZ: FieldR.F,
       proofStatePolys2OpeningAtZ proofStatePolys3OpeningAtZ: FieldR.F,
       proofStatePolys3OpeningAtZOmega: FieldR.F,
       proofGateSelectors0OpeningAtZ: FieldR.F,
       proofCopyPermutationPolys0OpeningAtZ proofCopyPermutationPolys1OpeningAtZ proofCopyPermutationPolys2OpeningAtZ: FieldR.F,
       proofCopyPermutationGrandProductOpeningAtZOmega: FieldR.F,
       proofLookupTPolyOpeningAtZ: FieldR.F,
       proofLookupSelectorPolyOpeningAtZ: FieldR.F,
       proofLookupTableTypePolyOpeningAtZ: FieldR.F,
       proofLookupSPolyOpeningAtZOmega: FieldR.F,
       proofLookupGrandProductOpeningAtZOmega: FieldR.F,
       proofLookupTPolyOpeningAtZOmega: FieldR.F,
       proofLinearisationPolyOpeningAtZ: FieldR.F,
       proofOpeningProofAtZ: g,
       proofOpeningProofAtZOmega: g) :
      FieldR.F * FieldR.F * FieldR.F * FieldR.F * FieldR.F * FieldR.F * FieldR.F * FieldR.F * FieldR.F * FieldR.F = {

    var stateAlpha, stateBeta, stateBetaLookup, stateGamma, stateGammaLookup, stateEta : FieldR.F;
    var stateZ, stateZInDomain, stateV, stateU : FieldR.F;
    var state0_0, state1_0, state0_1, state1_1, state0_2, state1_2, state0_3, state1_3,
        state0_4, state1_4, state0_5, state1_5, state0_6, state1_6, state0_7, state1_7,
        state0_8, state1_8, state0_9, state1_9, state0_10, state1_10, state0_11, state1_11,
        state0_12, state1_12, state0_13, state1_13, state0_14, state1_14, state0_15, state1_15,
        state0_16, state1_16, state0_17, state1_17, state0_18, state1_18, state0_19, state1_19,
        state0_20, state1_20, state0_21, state1_21, state0_22, state1_22, state0_23, state1_23,
        state0_24, state1_24, state0_25, state1_25, state0_26, state1_26, state0_27, state1_27,
        state0_28, state1_28, state0_29, state1_29, state0_30, state1_30, state0_31, state1_31,
        state0_32, state1_32, state0_33, state1_33, state0_34, state1_34, state0_35, state1_35,
        state0_36, state1_36, state0_37, state1_37, state0_38, state1_38, state0_39, state1_39,
        state0_40, state1_40, state0_41, state1_41, state0_42, state1_42, state0_43, state1_43,
        state0_44, state1_44 : int;

    (state0_0, state1_0) <@ UpdateTranscript.mid(initialS0, initialS1, FieldR.asint publicInput);
    (state0_1, state1_1) <@ UpdateTranscript.mid(state0_0, state1_0, (F_to_int_point (aspoint_G1 proofStatePolys0)).`1);
    (state0_2, state1_2) <@ UpdateTranscript.mid(state0_1, state1_1, (F_to_int_point (aspoint_G1 proofStatePolys0)).`2);
    (state0_3, state1_3) <@ UpdateTranscript.mid(state0_2, state1_2, (F_to_int_point (aspoint_G1 proofStatePolys1)).`1);
    (state0_4, state1_4) <@ UpdateTranscript.mid(state0_3, state1_3, (F_to_int_point (aspoint_G1 proofStatePolys1)).`2);
    (state0_5, state1_5) <@ UpdateTranscript.mid(state0_4, state1_4, (F_to_int_point (aspoint_G1 proofStatePolys2)).`1);
    (state0_6, state1_6) <@ UpdateTranscript.mid(state0_5, state1_5, (F_to_int_point (aspoint_G1 proofStatePolys2)).`2);
    (state0_7, state1_7) <@ UpdateTranscript.mid(state0_6, state1_6, (F_to_int_point (aspoint_G1 proofStatePolys3)).`1);
    (state0_8, state1_8) <@ UpdateTranscript.mid(state0_7, state1_7, (F_to_int_point (aspoint_G1 proofStatePolys3)).`2);
    
    stateEta <- FieldR.inF ((keccakC 2 state0_8 state1_8 0) %% 2^253);

    (state0_9,   state1_9) <@ UpdateTranscript.mid(state0_8, state1_8, (F_to_int_point (aspoint_G1 proofLookupSPoly)).`1);
    (state0_10, state1_10) <@ UpdateTranscript.mid(state0_9, state1_9, (F_to_int_point (aspoint_G1 proofLookupSPoly)).`2);
    
    stateBeta  <- FieldR.inF ((keccakC 2 state0_10 state1_10 1) %% 2^253);
    stateGamma <- FieldR.inF ((keccakC 2 state0_10 state1_10 2) %% 2^253);

    (state0_11, state1_11) <@ UpdateTranscript.mid(state0_10, state1_10, (F_to_int_point (aspoint_G1 proofCopyPermutationGrandProduct)).`1);
    (state0_12, state1_12) <@ UpdateTranscript.mid(state0_11, state1_11, (F_to_int_point (aspoint_G1 proofCopyPermutationGrandProduct)).`2);

    stateBetaLookup  <- FieldR.inF ((keccakC 2 state0_12 state1_12 3) %% 2^253);
    stateGammaLookup <- FieldR.inF ((keccakC 2 state0_12 state1_12 4) %% 2^253);

    (state0_13, state1_13) <@ UpdateTranscript.mid(state0_12, state1_12, (F_to_int_point (aspoint_G1 proofLookupGrandProduct)).`1);
    (state0_14, state1_14) <@ UpdateTranscript.mid(state0_13, state1_13, (F_to_int_point (aspoint_G1 proofLookupGrandProduct)).`2);

    stateAlpha <- FieldR.inF ((keccakC 2 state0_14 state1_14 5) %% 2^253);
    
    (state0_15, state1_15) <@ UpdateTranscript.mid(state0_14, state1_14, (F_to_int_point (aspoint_G1 proofQuotientPolyParts0)).`1);
    (state0_16, state1_16) <@ UpdateTranscript.mid(state0_15, state1_15, (F_to_int_point (aspoint_G1 proofQuotientPolyParts0)).`2);
    (state0_17, state1_17) <@ UpdateTranscript.mid(state0_16, state1_16, (F_to_int_point (aspoint_G1 proofQuotientPolyParts1)).`1);
    (state0_18, state1_18) <@ UpdateTranscript.mid(state0_17, state1_17, (F_to_int_point (aspoint_G1 proofQuotientPolyParts1)).`2);
    (state0_19, state1_19) <@ UpdateTranscript.mid(state0_18, state1_18, (F_to_int_point (aspoint_G1 proofQuotientPolyParts2)).`1);
    (state0_20, state1_20) <@ UpdateTranscript.mid(state0_19, state1_19, (F_to_int_point (aspoint_G1 proofQuotientPolyParts2)).`2);
    (state0_21, state1_21) <@ UpdateTranscript.mid(state0_20, state1_20, (F_to_int_point (aspoint_G1 proofQuotientPolyParts3)).`1);
    (state0_22, state1_22) <@ UpdateTranscript.mid(state0_21, state1_21, (F_to_int_point (aspoint_G1 proofQuotientPolyParts3)).`2);

    stateZ <- FieldR.inF ((keccakC 2 state0_22 state1_22 6) %% 2^253);
    stateZInDomain <- stateZ^Constants.DOMAIN_SIZE;

    (state0_23, state1_23) <@ UpdateTranscript.mid(state0_22, state1_22, FieldR.asint proofQuotientPolyOpeningAtZ);
    (state0_24, state1_24) <@ UpdateTranscript.mid(state0_23, state1_23, FieldR.asint proofStatePolys0OpeningAtZ);
    (state0_25, state1_25) <@ UpdateTranscript.mid(state0_24, state1_24, FieldR.asint proofStatePolys1OpeningAtZ);
    (state0_26, state1_26) <@ UpdateTranscript.mid(state0_25, state1_25, FieldR.asint proofStatePolys2OpeningAtZ);
    (state0_27, state1_27) <@ UpdateTranscript.mid(state0_26, state1_26, FieldR.asint proofStatePolys3OpeningAtZ);
    (state0_28, state1_28) <@ UpdateTranscript.mid(state0_27, state1_27, FieldR.asint proofStatePolys3OpeningAtZOmega);
    (state0_29, state1_29) <@ UpdateTranscript.mid(state0_28, state1_28, FieldR.asint proofGateSelectors0OpeningAtZ);
    (state0_30, state1_30) <@ UpdateTranscript.mid(state0_29, state1_29, FieldR.asint proofCopyPermutationPolys0OpeningAtZ);
    (state0_31, state1_31) <@ UpdateTranscript.mid(state0_30, state1_30, FieldR.asint proofCopyPermutationPolys1OpeningAtZ);
    (state0_32, state1_32) <@ UpdateTranscript.mid(state0_31, state1_31, FieldR.asint proofCopyPermutationPolys2OpeningAtZ);
    (state0_33, state1_33) <@ UpdateTranscript.mid(state0_32, state1_32, FieldR.asint proofCopyPermutationGrandProductOpeningAtZOmega);
    (state0_34, state1_34) <@ UpdateTranscript.mid(state0_33, state1_33, FieldR.asint proofLookupTPolyOpeningAtZ);
    (state0_35, state1_35) <@ UpdateTranscript.mid(state0_34, state1_34, FieldR.asint proofLookupSelectorPolyOpeningAtZ);
    (state0_36, state1_36) <@ UpdateTranscript.mid(state0_35, state1_35, FieldR.asint proofLookupTableTypePolyOpeningAtZ);
    (state0_37, state1_37) <@ UpdateTranscript.mid(state0_36, state1_36, FieldR.asint proofLookupSPolyOpeningAtZOmega);
    (state0_38, state1_38) <@ UpdateTranscript.mid(state0_37, state1_37, FieldR.asint proofLookupGrandProductOpeningAtZOmega);
    (state0_39, state1_39) <@ UpdateTranscript.mid(state0_38, state1_38, FieldR.asint proofLookupTPolyOpeningAtZOmega);
    (state0_40, state1_40) <@ UpdateTranscript.mid(state0_39, state1_39, FieldR.asint proofLinearisationPolyOpeningAtZ);

    stateV <- FieldR.inF ((keccakC 2 state0_40 state1_40 7) %% 2^253);

    (state0_41, state1_41) <@ UpdateTranscript.mid(state0_40, state1_40, (F_to_int_point (aspoint_G1 proofOpeningProofAtZ)).`1);
    (state0_42, state1_42) <@ UpdateTranscript.mid(state0_41, state1_41, (F_to_int_point (aspoint_G1 proofOpeningProofAtZ)).`2);
    (state0_43, state1_43) <@ UpdateTranscript.mid(state0_42, state1_42, (F_to_int_point (aspoint_G1 proofOpeningProofAtZOmega)).`1);
    (state0_44, state1_44) <@ UpdateTranscript.mid(state0_43, state1_43, (F_to_int_point (aspoint_G1 proofOpeningProofAtZOmega)).`2);

    stateU <- FieldR.inF ((keccakC 2 state0_44 state1_44 8) %% 2^253);

    return (stateAlpha, stateBeta, stateBetaLookup, stateGamma,
            stateGammaLookup, stateEta, stateZ, stateZInDomain, stateV, stateU);
  }

    proc high(
      initialS0 initialS1 : int,
       publicInput: FieldR.F,
       proofStatePolys0: g,
       proofStatePolys1: g,
       proofStatePolys2: g,
       proofStatePolys3: g,
       proofLookupSPoly: g,
       proofCopyPermutationGrandProduct: g,
       proofLookupGrandProduct: g,
       proofQuotientPolyParts0: g,
       proofQuotientPolyParts1: g,
       proofQuotientPolyParts2: g,
       proofQuotientPolyParts3: g,
       proofQuotientPolyOpeningAtZ: FieldR.F,
       proofStatePolys0OpeningAtZ proofStatePolys1OpeningAtZ: FieldR.F,
       proofStatePolys2OpeningAtZ proofStatePolys3OpeningAtZ: FieldR.F,
       proofStatePolys3OpeningAtZOmega: FieldR.F,
       proofGateSelectors0OpeningAtZ: FieldR.F,
       proofCopyPermutationPolys0OpeningAtZ proofCopyPermutationPolys1OpeningAtZ proofCopyPermutationPolys2OpeningAtZ: FieldR.F,
       proofCopyPermutationGrandProductOpeningAtZOmega: FieldR.F,
       proofLookupTPolyOpeningAtZ: FieldR.F,
       proofLookupSelectorPolyOpeningAtZ: FieldR.F,
       proofLookupTableTypePolyOpeningAtZ: FieldR.F,
       proofLookupSPolyOpeningAtZOmega: FieldR.F,
       proofLookupGrandProductOpeningAtZOmega: FieldR.F,
       proofLookupTPolyOpeningAtZOmega: FieldR.F,
       proofLinearisationPolyOpeningAtZ: FieldR.F,
       proofOpeningProofAtZ: g,
       proofOpeningProofAtZOmega: g) :
      FieldR.F * FieldR.F * FieldR.F * FieldR.F * FieldR.F * FieldR.F * FieldR.F * FieldR.F * FieldR.F * FieldR.F = {

    var stateAlpha, stateBeta, stateBetaLookup, stateGamma, stateGammaLookup, stateEta : FieldR.F;
    var stateZ, stateZInDomain, stateV, stateU : FieldR.F;
    var state0_0, state1_0, state0_1, state1_1, state0_2, state1_2, state0_3, state1_3,
        state0_4, state1_4, state0_5, state1_5, state0_6, state1_6, state0_7, state1_7,
        state0_8, state1_8, state0_9, state1_9, state0_10, state1_10, state0_11, state1_11,
        state0_12, state1_12, state0_13, state1_13, state0_14, state1_14, state0_15, state1_15,
        state0_16, state1_16, state0_17, state1_17, state0_18, state1_18, state0_19, state1_19,
        state0_20, state1_20, state0_21, state1_21, state0_22, state1_22, state0_23, state1_23,
        state0_24, state1_24, state0_25, state1_25, state0_26, state1_26, state0_27, state1_27,
        state0_28, state1_28, state0_29, state1_29, state0_30, state1_30, state0_31, state1_31,
        state0_32, state1_32, state0_33, state1_33, state0_34, state1_34, state0_35, state1_35,
        state0_36, state1_36, state0_37, state1_37, state0_38, state1_38, state0_39, state1_39,
        state0_40, state1_40, state0_41, state1_41, state0_42, state1_42, state0_43, state1_43,
        state0_44, state1_44 : int;

      state0_0 <- keccakT 0 initialS0 initialS1 (FieldR.asint publicInput);
      state1_0 <- keccakT 1 initialS0 initialS1 (FieldR.asint publicInput);
      state0_1 <- keccakT 0 state0_0 state1_0 (F_to_int_point (aspoint_G1 proofStatePolys0)).`1;
      state1_1 <- keccakT 1 state0_0 state1_0 (F_to_int_point (aspoint_G1 proofStatePolys0)).`1;
      state0_2 <- keccakT 0 state0_1 state1_1 (F_to_int_point (aspoint_G1 proofStatePolys0)).`2;
      state1_2 <- keccakT 1 state0_1 state1_1 (F_to_int_point (aspoint_G1 proofStatePolys0)).`2;
      state0_3 <- keccakT 0 state0_2 state1_2 (F_to_int_point (aspoint_G1 proofStatePolys1)).`1;
      state1_3 <- keccakT 1 state0_2 state1_2 (F_to_int_point (aspoint_G1 proofStatePolys1)).`1;
      state0_4 <- keccakT 0 state0_3 state1_3 (F_to_int_point (aspoint_G1 proofStatePolys1)).`2;
      state1_4 <- keccakT 1 state0_3 state1_3 (F_to_int_point (aspoint_G1 proofStatePolys1)).`2;
      state0_5 <- keccakT 0 state0_4 state1_4 (F_to_int_point (aspoint_G1 proofStatePolys2)).`1;
      state1_5 <- keccakT 1 state0_4 state1_4 (F_to_int_point (aspoint_G1 proofStatePolys2)).`1;
      state0_6 <- keccakT 0 state0_5 state1_5 (F_to_int_point (aspoint_G1 proofStatePolys2)).`2;
      state1_6 <- keccakT 1 state0_5 state1_5 (F_to_int_point (aspoint_G1 proofStatePolys2)).`2;
      state0_7 <- keccakT 0 state0_6 state1_6 (F_to_int_point (aspoint_G1 proofStatePolys3)).`1;
      state1_7 <- keccakT 1 state0_6 state1_6 (F_to_int_point (aspoint_G1 proofStatePolys3)).`1;
      state0_8 <- keccakT 0 state0_7 state1_7 (F_to_int_point (aspoint_G1 proofStatePolys3)).`2;
      state1_8 <- keccakT 1 state0_7 state1_7 (F_to_int_point (aspoint_G1 proofStatePolys3)).`2;
    
      stateEta <- FieldR.inF ((keccakC 2 state0_8 state1_8 0) %% 2^253);

      state0_9 <- keccakT 0 state0_8 state1_8 (F_to_int_point (aspoint_G1 proofLookupSPoly)).`1;
      state1_9 <- keccakT 1 state0_8 state1_8 (F_to_int_point (aspoint_G1 proofLookupSPoly)).`1;
      state0_10 <- keccakT 0 state0_9 state1_9 (F_to_int_point (aspoint_G1 proofLookupSPoly)).`2;
      state1_10 <- keccakT 1 state0_9 state1_9 (F_to_int_point (aspoint_G1 proofLookupSPoly)).`2;
    
      stateBeta  <- FieldR.inF ((keccakC 2 state0_10 state1_10 1) %% 2^253);
      stateGamma <- FieldR.inF ((keccakC 2 state0_10 state1_10 2) %% 2^253);

      state0_11 <- keccakT 0 state0_10 state1_10 (F_to_int_point (aspoint_G1 proofCopyPermutationGrandProduct)).`1;
      state1_11 <- keccakT 1 state0_10 state1_10 (F_to_int_point (aspoint_G1 proofCopyPermutationGrandProduct)).`1;
      state0_12 <- keccakT 0 state0_11 state1_11 (F_to_int_point (aspoint_G1 proofCopyPermutationGrandProduct)).`2;
      state1_12 <- keccakT 1 state0_11 state1_11 (F_to_int_point (aspoint_G1 proofCopyPermutationGrandProduct)).`2;

      stateBetaLookup  <- FieldR.inF ((keccakC 2 state0_12 state1_12 3) %% 2^253);
      stateGammaLookup <- FieldR.inF ((keccakC 2 state0_12 state1_12 4) %% 2^253);

      state0_13 <- keccakT 0 state0_12 state1_12 (F_to_int_point (aspoint_G1 proofLookupGrandProduct)).`1;
      state1_13 <- keccakT 1 state0_12 state1_12 (F_to_int_point (aspoint_G1 proofLookupGrandProduct)).`1;
      state0_14 <- keccakT 0 state0_13 state1_13 (F_to_int_point (aspoint_G1 proofLookupGrandProduct)).`2;
      state1_14 <- keccakT 1 state0_13 state1_13 (F_to_int_point (aspoint_G1 proofLookupGrandProduct)).`2;

      stateAlpha <- FieldR.inF ((keccakC 2 state0_14 state1_14 5) %% 2^253);

      state0_15 <- keccakT 0 state0_14 state1_14 (F_to_int_point (aspoint_G1 proofQuotientPolyParts0)).`1;
      state1_15 <- keccakT 1 state0_14 state1_14 (F_to_int_point (aspoint_G1 proofQuotientPolyParts0)).`1;
      state0_16 <- keccakT 0 state0_15 state1_15 (F_to_int_point (aspoint_G1 proofQuotientPolyParts0)).`2;
      state1_16 <- keccakT 1 state0_15 state1_15 (F_to_int_point (aspoint_G1 proofQuotientPolyParts0)).`2;
      state0_17 <- keccakT 0 state0_16 state1_16 (F_to_int_point (aspoint_G1 proofQuotientPolyParts1)).`1;
      state1_17 <- keccakT 1 state0_16 state1_16 (F_to_int_point (aspoint_G1 proofQuotientPolyParts1)).`1;
      state0_18 <- keccakT 0 state0_17 state1_17 (F_to_int_point (aspoint_G1 proofQuotientPolyParts1)).`2;
      state1_18 <- keccakT 1 state0_17 state1_17 (F_to_int_point (aspoint_G1 proofQuotientPolyParts1)).`2;
      state0_19 <- keccakT 0 state0_18 state1_18 (F_to_int_point (aspoint_G1 proofQuotientPolyParts2)).`1;
      state1_19 <- keccakT 1 state0_18 state1_18 (F_to_int_point (aspoint_G1 proofQuotientPolyParts2)).`1;
      state0_20 <- keccakT 0 state0_19 state1_19 (F_to_int_point (aspoint_G1 proofQuotientPolyParts2)).`2;
      state1_20 <- keccakT 1 state0_19 state1_19 (F_to_int_point (aspoint_G1 proofQuotientPolyParts2)).`2;
      state0_21 <- keccakT 0 state0_20 state1_20 (F_to_int_point (aspoint_G1 proofQuotientPolyParts3)).`1;
      state1_21 <- keccakT 1 state0_20 state1_20 (F_to_int_point (aspoint_G1 proofQuotientPolyParts3)).`1;
      state0_22 <- keccakT 0 state0_21 state1_21 (F_to_int_point (aspoint_G1 proofQuotientPolyParts3)).`2;
      state1_22 <- keccakT 1 state0_21 state1_21 (F_to_int_point (aspoint_G1 proofQuotientPolyParts3)).`2;

      stateZ <- FieldR.inF ((keccakC 2 state0_22 state1_22 6) %% 2^253);
      stateZInDomain <- stateZ^Constants.DOMAIN_SIZE;

      state0_23 <- keccakT 0 state0_22 state1_22 (FieldR.asint proofQuotientPolyOpeningAtZ);
      state1_23 <- keccakT 1 state0_22 state1_22 (FieldR.asint proofQuotientPolyOpeningAtZ);
      state0_24 <- keccakT 0 state0_23 state1_23 (FieldR.asint proofStatePolys0OpeningAtZ);
      state1_24 <- keccakT 1 state0_23 state1_23 (FieldR.asint proofStatePolys0OpeningAtZ);
      state0_25 <- keccakT 0 state0_24 state1_24 (FieldR.asint proofStatePolys1OpeningAtZ);
      state1_25 <- keccakT 1 state0_24 state1_24 (FieldR.asint proofStatePolys1OpeningAtZ);
      state0_26 <- keccakT 0 state0_25 state1_25 (FieldR.asint proofStatePolys2OpeningAtZ);
      state1_26 <- keccakT 1 state0_25 state1_25 (FieldR.asint proofStatePolys2OpeningAtZ);
      state0_27 <- keccakT 0 state0_26 state1_26 (FieldR.asint proofStatePolys3OpeningAtZ);
      state1_27 <- keccakT 1 state0_26 state1_26 (FieldR.asint proofStatePolys3OpeningAtZ);
      state0_28 <- keccakT 0 state0_27 state1_27 (FieldR.asint proofStatePolys3OpeningAtZOmega);
      state1_28 <- keccakT 1 state0_27 state1_27 (FieldR.asint proofStatePolys3OpeningAtZOmega);
      state0_29 <- keccakT 0 state0_28 state1_28 (FieldR.asint proofGateSelectors0OpeningAtZ);
      state1_29 <- keccakT 1 state0_28 state1_28 (FieldR.asint proofGateSelectors0OpeningAtZ);
      state0_30 <- keccakT 0 state0_29 state1_29 (FieldR.asint proofCopyPermutationPolys0OpeningAtZ);
      state1_30 <- keccakT 1 state0_29 state1_29 (FieldR.asint proofCopyPermutationPolys0OpeningAtZ);
      state0_31 <- keccakT 0 state0_30 state1_30 (FieldR.asint proofCopyPermutationPolys1OpeningAtZ);
      state1_31 <- keccakT 1 state0_30 state1_30 (FieldR.asint proofCopyPermutationPolys1OpeningAtZ);
      state0_32 <- keccakT 0 state0_31 state1_31 (FieldR.asint proofCopyPermutationPolys2OpeningAtZ);
      state1_32 <- keccakT 1 state0_31 state1_31 (FieldR.asint proofCopyPermutationPolys2OpeningAtZ);
      state0_33 <- keccakT 0 state0_32 state1_32 (FieldR.asint proofCopyPermutationGrandProductOpeningAtZOmega);
      state1_33 <- keccakT 1 state0_32 state1_32 (FieldR.asint proofCopyPermutationGrandProductOpeningAtZOmega);
      state0_34 <- keccakT 0 state0_33 state1_33 (FieldR.asint proofLookupTPolyOpeningAtZ);
      state1_34 <- keccakT 1 state0_33 state1_33 (FieldR.asint proofLookupTPolyOpeningAtZ);
      state0_35 <- keccakT 0 state0_34 state1_34 (FieldR.asint proofLookupSelectorPolyOpeningAtZ);
      state1_35 <- keccakT 1 state0_34 state1_34 (FieldR.asint proofLookupSelectorPolyOpeningAtZ);
      state0_36 <- keccakT 0 state0_35 state1_35 (FieldR.asint proofLookupTableTypePolyOpeningAtZ);
      state1_36 <- keccakT 1 state0_35 state1_35 (FieldR.asint proofLookupTableTypePolyOpeningAtZ);
      state0_37 <- keccakT 0 state0_36 state1_36 (FieldR.asint proofLookupSPolyOpeningAtZOmega);
      state1_37 <- keccakT 1 state0_36 state1_36 (FieldR.asint proofLookupSPolyOpeningAtZOmega);
      state0_38 <- keccakT 0 state0_37 state1_37 (FieldR.asint proofLookupGrandProductOpeningAtZOmega);
      state1_38 <- keccakT 1 state0_37 state1_37 (FieldR.asint proofLookupGrandProductOpeningAtZOmega);
      state0_39 <- keccakT 0 state0_38 state1_38 (FieldR.asint proofLookupTPolyOpeningAtZOmega);
      state1_39 <- keccakT 1 state0_38 state1_38 (FieldR.asint proofLookupTPolyOpeningAtZOmega);
      state0_40 <- keccakT 0 state0_39 state1_39 (FieldR.asint proofLinearisationPolyOpeningAtZ);
      state1_40 <- keccakT 1 state0_39 state1_39 (FieldR.asint proofLinearisationPolyOpeningAtZ);

      stateV <- FieldR.inF ((keccakC 2 state0_40 state1_40 7) %% 2^253);

      state0_41 <- keccakT 0 state0_40 state1_40 (F_to_int_point (aspoint_G1 proofOpeningProofAtZ)).`1;
      state1_41 <- keccakT 1 state0_40 state1_40 (F_to_int_point (aspoint_G1 proofOpeningProofAtZ)).`1;
      state0_42 <- keccakT 0 state0_41 state1_41 (F_to_int_point (aspoint_G1 proofOpeningProofAtZ)).`2;
      state1_42 <- keccakT 1 state0_41 state1_41 (F_to_int_point (aspoint_G1 proofOpeningProofAtZ)).`2;
      state0_43 <- keccakT 0 state0_42 state1_42 (F_to_int_point (aspoint_G1 proofOpeningProofAtZOmega)).`1;
      state1_43 <- keccakT 1 state0_42 state1_42 (F_to_int_point (aspoint_G1 proofOpeningProofAtZOmega)).`1;
      state0_44 <- keccakT 0 state0_43 state1_43 (F_to_int_point (aspoint_G1 proofOpeningProofAtZOmega)).`2;
      state1_44 <- keccakT 1 state0_43 state1_43 (F_to_int_point (aspoint_G1 proofOpeningProofAtZOmega)).`2;

      stateU <- FieldR.inF ((keccakC 2 state0_44 state1_44 8) %% 2^253);
    
      return (stateAlpha, stateBeta, stateBetaLookup, stateGamma,
      stateGammaLookup, stateEta, stateZ, stateZInDomain, stateV, stateU);
  }
}.

lemma initializeTranscript_extracted_equiv_low :
    equiv [
      Verifier_1261.usr_initializeTranscript ~ InitializeTranscript.low :
      ={arg, glob InitializeTranscript} ==>
      ={res, glob InitializeTranscript}
    ].
proof.
  proc.
  inline Primops.mload Primops.mstore.
  do 9! (seq 5 3: #pre; first call updateTranscript_extracted_equiv_low; first wp; first skip; first by progress).
  seq 7 4: #pre. wp. call getTranscriptChallenge_extracted_equiv_low. wp. skip. by progress.
  do 2! (seq 5 3: #pre; first call updateTranscript_extracted_equiv_low; first wp; first skip; first by progress).
  do 2! (seq 7 4: #pre; first wp; first call getTranscriptChallenge_extracted_equiv_low; first wp; first skip; first by progress).
  do 2! (seq 5 3: #pre; first call updateTranscript_extracted_equiv_low; first wp; first skip; first by progress).
  do 2! (seq 7 4: #pre; first wp; first call getTranscriptChallenge_extracted_equiv_low; first wp; first skip; first by progress).
  do 2! (seq 5 3: #pre; first call updateTranscript_extracted_equiv_low; first wp; first skip; first by progress).
  do 1! (seq 7 4: #pre; first wp; first call getTranscriptChallenge_extracted_equiv_low; first wp; first skip; first by progress).
  do 8! (seq 5 3: #pre; first call updateTranscript_extracted_equiv_low; first wp; first skip; first by progress).
  seq 14 8: #pre. wp. call modexp_extracted_equiv_low. wp. call getTranscriptChallenge_extracted_equiv_low. wp. skip. by progress.
  do 18! (seq 5 3: #pre; first call updateTranscript_extracted_equiv_low; first wp; first skip; first by progress).
  do 1! (seq 7 4: #pre; first wp; first call getTranscriptChallenge_extracted_equiv_low; first wp; first skip; first by progress).
  do 4! (seq 5 3: #pre; first call updateTranscript_extracted_equiv_low; first wp; first skip; first by progress).
  wp. call getTranscriptChallenge_extracted_equiv_low. wp. skip. by progress.
qed.

import MemoryMap PurePrimops.

lemma initializeTranscript_low_pspec_revert:
    phoare [
      InitializeTranscript.low:
      Primops.reverted ==> Primops.reverted
    ] = 1%r.
    proof.
      proc.
      call ConcretePrimops.mstore_pspec_revert; call getTranscriptChallenge_pspec_revert.
      do 4! (call updateTranscript_pspec_revert; call ConcretePrimops.mload_pspec_revert).
      call ConcretePrimops.mstore_pspec_revert; call getTranscriptChallenge_pspec_revert.
      do 18! (call updateTranscript_pspec_revert; call ConcretePrimops.mload_pspec_revert).
      call ConcretePrimops.mstore_pspec_revert; call modexp_low_pspec_revert.
      call ConcretePrimops.mstore_pspec_revert; call getTranscriptChallenge_pspec_revert.
      do 8! (call updateTranscript_pspec_revert; call ConcretePrimops.mload_pspec_revert).
      call ConcretePrimops.mstore_pspec_revert; call getTranscriptChallenge_pspec_revert.
      do 2! (call updateTranscript_pspec_revert; call ConcretePrimops.mload_pspec_revert).
      do 2! (call ConcretePrimops.mstore_pspec_revert; call getTranscriptChallenge_pspec_revert).
      do 2! (call updateTranscript_pspec_revert; call ConcretePrimops.mload_pspec_revert).
      do 2! (call ConcretePrimops.mstore_pspec_revert; call getTranscriptChallenge_pspec_revert).
      do 2! (call updateTranscript_pspec_revert; call ConcretePrimops.mload_pspec_revert).
      call ConcretePrimops.mstore_pspec_revert; call getTranscriptChallenge_pspec_revert.
      do 9! (call updateTranscript_pspec_revert; call ConcretePrimops.mload_pspec_revert).
      skip.
      by trivial.
    qed.



op initializeTranscript_memory_footprint (m: mem)
(sEta sBeta sGamma sBetaLookup sGammaLookup sAlpha sZ sZInDomainSize sV sU : uint256)   
(s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 : uint256) : mem =
let m1  = updateTranscript_memory_footprint m s1 s2 s3 in
let m2  = getTranscriptChallenge_memory_footprint m1 0 in
let m3  = mstore m2 STATE_ETA_SLOT sEta in
let m4  = updateTranscript_memory_footprint m3 s4 s5 s6 in
let m5  = getTranscriptChallenge_memory_footprint m4 1 in
let m6  = mstore m5 STATE_BETA_SLOT sBeta in
let m7  = getTranscriptChallenge_memory_footprint m6 2 in
let m8  = mstore m7 STATE_GAMMA_SLOT sGamma in
let m9  = updateTranscript_memory_footprint m8 s7 s8 s9 in
let m10 = getTranscriptChallenge_memory_footprint m9 3 in
let m11 = mstore m10 STATE_BETA_LOOKUP_SLOT sBetaLookup in
let m12 = getTranscriptChallenge_memory_footprint m11 4 in
let m13 = mstore m12 STATE_GAMMA_LOOKUP_SLOT sGammaLookup in
let m14 = updateTranscript_memory_footprint m13 s10 s11 s12 in
let m15 = getTranscriptChallenge_memory_footprint m14 5 in
let m16 = mstore m15 STATE_ALPHA_SLOT sAlpha in
let m17 = updateTranscript_memory_footprint m16 s13 s14 s15 in
let m18 = getTranscriptChallenge_memory_footprint m17 6 in
let m19 = mstore m18 STATE_Z_SLOT sZ in
let m20 = modexp_memory_footprint m19 sZ (of_int Constants.DOMAIN_SIZE)%W256 sZInDomainSize in
let m21 = mstore m20 STATE_Z_IN_DOMAIN_SIZE sZInDomainSize in
let m22 = updateTranscript_memory_footprint m21 s16 s17 s18 in
let m23 = getTranscriptChallenge_memory_footprint m22 7 in
let m24 = mstore m23 STATE_V_SLOT sV in
let m25 = updateTranscript_memory_footprint m24 s19 s20 s21 in
let m26 = getTranscriptChallenge_memory_footprint m25 8 in
let m27 = mstore m26 STATE_U_SLOT sU in
m27.

lemma initializeTranscript_low_equiv_mid (m : mem) (
      initialS0G initialS1G
      publicInputG
      proofStatePolys0XG proofStatePolys0YG
      proofStatePolys1XG proofStatePolys1YG
      proofStatePolys2XG proofStatePolys2YG
      proofStatePolys3XG proofStatePolys3YG
      proofLookupSPolyXG proofLookupSPolyYG
      proofCopyPermutationGrandProductXG proofCopyPermutationGrandProductYG
      proofLookupGrandProductXG proofLookupGrandProductYG
      proofQuotientPolyParts0XG proofQuotientPolyParts0YG
      proofQuotientPolyParts1XG proofQuotientPolyParts1YG
      proofQuotientPolyParts2XG proofQuotientPolyParts2YG
      proofQuotientPolyParts3XG proofQuotientPolyParts3YG
      proofQuotientPolyOpeningAtZG
      proofStatePolys0OpeningAtZG proofStatePolys1OpeningAtZG
      proofStatePolys2OpeningAtZG proofStatePolys3OpeningAtZG
      proofStatePolys3OpeningAtZOmegaG
      proofGateSelectors0OpeningAtZG
      proofCopyPermutationPolys0OpeningAtZG
      proofCopyPermutationPolys1OpeningAtZG
      proofCopyPermutationPolys2OpeningAtZG
      proofCopyPermutationGrandProductOpeningAtZOmegaG
      proofLookupTPolyOpeningAtZG
      proofLookupSelectorPolyOpeningAtZG
      proofLookupTableTypePolyOpeningAtZG
      proofLookupSPolyOpeningAtZOmegaG
      proofLookupGrandProductOpeningAtZOmegaG
      proofLookupTPolyOpeningAtZOmegaG
      proofLinearisationPolyOpeningAtZG
      proofOpeningProofAtZXG proofOpeningProofAtZYG
      proofOpeningProofAtZOmegaXG proofOpeningProofAtZOmegaYG : int
) :
equiv [InitializeTranscript.low ~ InitializeTranscript.mid :
arg{2} = (
initialS0G, initialS1G,
publicInputG,
proofStatePolys0XG, proofStatePolys0YG,
proofStatePolys1XG, proofStatePolys1YG,
proofStatePolys2XG, proofStatePolys2YG,
proofStatePolys3XG, proofStatePolys3YG,
proofLookupSPolyXG, proofLookupSPolyYG,
proofCopyPermutationGrandProductXG, proofCopyPermutationGrandProductYG,
proofLookupGrandProductXG, proofLookupGrandProductYG,
proofQuotientPolyParts0XG, proofQuotientPolyParts0YG,
proofQuotientPolyParts1XG, proofQuotientPolyParts1YG,
proofQuotientPolyParts2XG, proofQuotientPolyParts2YG,
proofQuotientPolyParts3XG, proofQuotientPolyParts3YG,
proofQuotientPolyOpeningAtZG,
proofStatePolys0OpeningAtZG, proofStatePolys1OpeningAtZG,
proofStatePolys2OpeningAtZG, proofStatePolys3OpeningAtZG,
proofStatePolys3OpeningAtZOmegaG,
proofGateSelectors0OpeningAtZG,
proofCopyPermutationPolys0OpeningAtZG, proofCopyPermutationPolys1OpeningAtZG, proofCopyPermutationPolys2OpeningAtZG,
proofCopyPermutationGrandProductOpeningAtZOmegaG,
proofLookupTPolyOpeningAtZG,
proofLookupSelectorPolyOpeningAtZG,
proofLookupTableTypePolyOpeningAtZG,
proofLookupSPolyOpeningAtZOmegaG,
proofLookupGrandProductOpeningAtZOmegaG,
proofLookupTPolyOpeningAtZOmegaG,
proofLinearisationPolyOpeningAtZG,
proofOpeningProofAtZXG, proofOpeningProofAtZYG,
proofOpeningProofAtZOmegaXG, proofOpeningProofAtZOmegaYG) /\
to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) = proofCopyPermutationGrandProductXG /\
to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) = proofCopyPermutationGrandProductYG /\
to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) = proofLookupGrandProductXG /\
to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) = proofLookupGrandProductYG /\
to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) = proofQuotientPolyParts0XG /\
to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) = proofQuotientPolyParts0YG /\
to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) = proofQuotientPolyParts1XG /\
to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) = proofQuotientPolyParts1YG /\
to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) = proofQuotientPolyParts2XG /\
to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) = proofQuotientPolyParts2YG /\
to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) = proofQuotientPolyParts3XG /\
to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) = proofQuotientPolyParts3YG /\
to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) = proofQuotientPolyOpeningAtZG /\
to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) = proofStatePolys0OpeningAtZG /\
to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) = proofStatePolys1OpeningAtZG /\
to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) = proofStatePolys2OpeningAtZG /\
to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =  proofStatePolys3OpeningAtZG /\
to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) = proofStatePolys3OpeningAtZOmegaG /\
to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) = proofGateSelectors0OpeningAtZG /\
to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) = proofCopyPermutationPolys0OpeningAtZG /\
to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) = proofCopyPermutationPolys1OpeningAtZG /\
to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) = proofCopyPermutationPolys2OpeningAtZG /\
to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) = proofCopyPermutationGrandProductOpeningAtZOmegaG /\
to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) = proofLookupTPolyOpeningAtZG /\
to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) = proofLookupSelectorPolyOpeningAtZG /\
to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) = proofLookupTableTypePolyOpeningAtZG /\
to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) = proofLookupSPolyOpeningAtZOmegaG /\
to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) = proofLookupGrandProductOpeningAtZOmegaG /\
to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) = proofLookupTPolyOpeningAtZOmegaG /\
to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) = proofLinearisationPolyOpeningAtZG /\
to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) = proofOpeningProofAtZOmegaXG /\
to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) = proofOpeningProofAtZOmegaYG /\
!Primops.reverted{1} /\
Primops.memory{1} = m
==>
!Primops.reverted{1} /\
(exists (s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21: uint256), 
  Primops.memory{1} = 
  initializeTranscript_memory_footprint m
  (W256.of_int res{2}.`6) (W256.of_int res{2}.`2) (W256.of_int res{2}.`4) (W256.of_int res{2}.`3)
  (W256.of_int res{2}.`5) (W256.of_int res{2}.`1) (W256.of_int res{2}.`7) (W256.of_int res{2}.`8)
  (W256.of_int res{2}.`9) (W256.of_int res{2}.`10)
  s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21)
/\
0 <= res{2}.`1 < 2^253 /\ 0 <= res{2}.`2 < 2^253 /\
0 <= res{2}.`3 < 2^253 /\ 0 <= res{2}.`4 < 2^253 /\
0 <= res{2}.`5 < 2^253 /\ 0 <= res{2}.`6 < 2^253 /\
0 <= res{2}.`7 < 2^253 /\ 0 <= res{2}.`8 < Constants.R /\
0 <= res{2}.`9 < 2^253 /\ 0 <= res{2}.`10 < 2^253
].
proof. proc.
seq 1 0: (#pre /\ _2{1} = (of_int publicInputG)%W256).
call{1} (ConcretePrimops.mload_pspec m PROOF_PUBLIC_INPUT). skip. by progress. 
progress.
 
seq 1 1: (
  ( initialS0{2} = initialS0G /\ initialS1{2} = initialS1G /\
    publicInput{2} = publicInputG /\
    proofStatePolys0X{2} = proofStatePolys0XG /\
    proofStatePolys0Y{2} = proofStatePolys0YG /\
    proofStatePolys1X{2} = proofStatePolys1XG /\
    proofStatePolys1Y{2} = proofStatePolys1YG /\
    proofStatePolys2X{2} = proofStatePolys2XG /\
    proofStatePolys2Y{2} = proofStatePolys2YG /\
    proofStatePolys3X{2} = proofStatePolys3XG /\
    proofStatePolys3Y{2} = proofStatePolys3YG /\
    proofLookupSPolyX{2} = proofLookupSPolyXG /\
    proofLookupSPolyY{2} = proofLookupSPolyYG /\
    proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
    proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
    proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
    proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
    proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
    proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
    proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
    proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
    proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
    proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
    proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
    proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
    proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
    proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
    proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
    proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
    proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
    proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
    proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
    proofCopyPermutationPolys0OpeningAtZ{2} =
    proofCopyPermutationPolys0OpeningAtZG /\
    proofCopyPermutationPolys1OpeningAtZ{2} =
    proofCopyPermutationPolys1OpeningAtZG /\
    proofCopyPermutationPolys2OpeningAtZ{2} =
    proofCopyPermutationPolys2OpeningAtZG /\
    proofCopyPermutationGrandProductOpeningAtZOmega{2} =
    proofCopyPermutationGrandProductOpeningAtZOmegaG /\
    proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
    proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
    proofLookupTableTypePolyOpeningAtZ{2} =
    proofLookupTableTypePolyOpeningAtZG /\
    proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
    proofLookupGrandProductOpeningAtZOmega{2} =
    proofLookupGrandProductOpeningAtZOmegaG /\
    proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
    proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
    proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
    proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
    proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
    proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
   to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
   to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
   to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
   to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
   to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
   to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
   to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
   to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
   to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
   to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
   to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
   proofCopyPermutationGrandProductXG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
   proofCopyPermutationGrandProductYG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
   proofLookupGrandProductXG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
   proofLookupGrandProductYG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
   proofQuotientPolyParts0XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
   proofQuotientPolyParts0YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
   proofQuotientPolyParts1XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
   proofQuotientPolyParts1YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
   proofQuotientPolyParts2XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
   proofQuotientPolyParts2YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
   proofQuotientPolyParts3XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
   proofQuotientPolyParts3YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
   proofQuotientPolyOpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
   proofStatePolys0OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
   proofStatePolys1OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
   proofStatePolys2OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
   proofStatePolys3OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
   proofStatePolys3OpeningAtZOmegaG /\
   to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
   proofGateSelectors0OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys0OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys1OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys2OpeningAtZG /\
   to_uint
     (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
   proofLookupTPolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
   proofLookupSelectorPolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
   proofLookupTableTypePolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupSPolyOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupGrandProductOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupTPolyOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
   proofLinearisationPolyOpeningAtZG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
   proofOpeningProofAtZOmegaXG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
   proofOpeningProofAtZOmegaYG /\
   !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
    0 <= state0_0{2} < W256.modulus /\ 0 <= state1_0{2} < W256.modulus /\
    Primops.memory{1} = updateTranscript_memory_footprint m _2{1} (W256.of_int state0_0{2}) (W256.of_int state1_0{2})
).
call (updateTranscript_low_equiv_mid m initialS0G initialS1G publicInputG).
skip. by progress.

exists* state0_0{2}, state1_0{2}. elim*=> s0_0 s1_0.
pose m1 := updateTranscript_memory_footprint m (of_int publicInputG)%W256 (W256.of_int s0_0) (W256.of_int s1_0).
seq 1 0: (
  s0_0 = state0_0{2} /\ s1_0 = state1_0{2} /\  
  (initialS0{2} = initialS0G /\ initialS1{2} = initialS1G /\
    publicInput{2} = publicInputG /\
    proofStatePolys0X{2} = proofStatePolys0XG /\
    proofStatePolys0Y{2} = proofStatePolys0YG /\
    proofStatePolys1X{2} = proofStatePolys1XG /\
    proofStatePolys1Y{2} = proofStatePolys1YG /\
    proofStatePolys2X{2} = proofStatePolys2XG /\
    proofStatePolys2Y{2} = proofStatePolys2YG /\
    proofStatePolys3X{2} = proofStatePolys3XG /\
    proofStatePolys3Y{2} = proofStatePolys3YG /\
    proofLookupSPolyX{2} = proofLookupSPolyXG /\
    proofLookupSPolyY{2} = proofLookupSPolyYG /\
    proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
    proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
    proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
    proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
    proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
    proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
    proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
    proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
    proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
    proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
    proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
    proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
    proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
    proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
    proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
    proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
    proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
    proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
    proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
    proofCopyPermutationPolys0OpeningAtZ{2} =
    proofCopyPermutationPolys0OpeningAtZG /\
    proofCopyPermutationPolys1OpeningAtZ{2} =
    proofCopyPermutationPolys1OpeningAtZG /\
    proofCopyPermutationPolys2OpeningAtZ{2} =
    proofCopyPermutationPolys2OpeningAtZG /\
    proofCopyPermutationGrandProductOpeningAtZOmega{2} =
    proofCopyPermutationGrandProductOpeningAtZOmegaG /\
    proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
    proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
    proofLookupTableTypePolyOpeningAtZ{2} =
    proofLookupTableTypePolyOpeningAtZG /\
    proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
    proofLookupGrandProductOpeningAtZOmega{2} =
    proofLookupGrandProductOpeningAtZOmegaG /\
    proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
    proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
    proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
    proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
    proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
    proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
   to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
   to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
   to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
   to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
   to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
   to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
   to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
   to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
   to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
   to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
   to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
   proofCopyPermutationGrandProductXG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
   proofCopyPermutationGrandProductYG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
   proofLookupGrandProductXG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
   proofLookupGrandProductYG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
   proofQuotientPolyParts0XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
   proofQuotientPolyParts0YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
   proofQuotientPolyParts1XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
   proofQuotientPolyParts1YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
   proofQuotientPolyParts2XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
   proofQuotientPolyParts2YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
   proofQuotientPolyParts3XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
   proofQuotientPolyParts3YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
   proofQuotientPolyOpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
   proofStatePolys0OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
   proofStatePolys1OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
   proofStatePolys2OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
   proofStatePolys3OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
   proofStatePolys3OpeningAtZOmegaG /\
   to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
   proofGateSelectors0OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys0OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys1OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys2OpeningAtZG /\
   to_uint
     (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
   proofLookupTPolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
   proofLookupSelectorPolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
   proofLookupTableTypePolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupSPolyOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupGrandProductOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupTPolyOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
   proofLinearisationPolyOpeningAtZG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
   proofOpeningProofAtZOmegaXG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
   proofOpeningProofAtZOmegaYG /\
   !Primops.reverted{1} /\
   _2{1} = (of_int publicInputG)%W256 /\
   _4{1} = (of_int proofStatePolys0XG)%W256 /\
   Primops.memory{1} = m1 /\
   0 <= state0_0{2} < W256.modulus /\ 0 <= state1_0{2} < W256.modulus /\
   to_uint (mload m1 TRANSCRIPT_STATE_0_SLOT) = state0_0{2} /\
   to_uint (mload m1 TRANSCRIPT_STATE_1_SLOT) = state1_0{2}  
).
call{1} (ConcretePrimops.mload_pspec m1 PROOF_STATE_POLYS_0_X_SLOT).
skip. progress;
rewrite /m1 /updateTranscript_memory_footprint; progress;
rewrite /PROOF_STATE_POLYS_0_X_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_STATE_1_SLOT /TRANSCRIPT_DST_BYTE_SLOT
        /TRANSCRIPT_CHALLENGE_SLOT /PROOF_PUBLIC_INPUT.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.
rewrite load_store_diff; try by simplify. 
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.

seq 1 1:(
   s0_0 = state0_0{2} /\ s1_0 = state1_0{2} /\
   (initialS0{2} = initialS0G /\
    initialS1{2} = initialS1G /\
    publicInput{2} = publicInputG /\
    proofStatePolys0X{2} = proofStatePolys0XG /\
    proofStatePolys0Y{2} = proofStatePolys0YG /\
    proofStatePolys1X{2} = proofStatePolys1XG /\
    proofStatePolys1Y{2} = proofStatePolys1YG /\
    proofStatePolys2X{2} = proofStatePolys2XG /\
    proofStatePolys2Y{2} = proofStatePolys2YG /\
    proofStatePolys3X{2} = proofStatePolys3XG /\
    proofStatePolys3Y{2} = proofStatePolys3YG /\
    proofLookupSPolyX{2} = proofLookupSPolyXG /\
    proofLookupSPolyY{2} = proofLookupSPolyYG /\
    proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
    proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
    proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
    proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
    proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
    proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
    proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
    proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
    proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
    proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
    proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
    proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
    proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
    proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
    proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
    proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
    proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
    proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
    proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
    proofCopyPermutationPolys0OpeningAtZ{2} =
    proofCopyPermutationPolys0OpeningAtZG /\
    proofCopyPermutationPolys1OpeningAtZ{2} =
    proofCopyPermutationPolys1OpeningAtZG /\
    proofCopyPermutationPolys2OpeningAtZ{2} =
    proofCopyPermutationPolys2OpeningAtZG /\
    proofCopyPermutationGrandProductOpeningAtZOmega{2} =
    proofCopyPermutationGrandProductOpeningAtZOmegaG /\
    proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
    proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
    proofLookupTableTypePolyOpeningAtZ{2} =
    proofLookupTableTypePolyOpeningAtZG /\
    proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
    proofLookupGrandProductOpeningAtZOmega{2} =
    proofLookupGrandProductOpeningAtZOmegaG /\
    proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
    proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
    proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
    proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
    proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
    proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
   to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
   to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
   to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
   to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
   to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
   to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
   to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
   to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
   to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
   to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
   to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
   proofCopyPermutationGrandProductXG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
   proofCopyPermutationGrandProductYG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
   proofLookupGrandProductXG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
   proofLookupGrandProductYG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
   proofQuotientPolyParts0XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
   proofQuotientPolyParts0YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
   proofQuotientPolyParts1XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
   proofQuotientPolyParts1YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
   proofQuotientPolyParts2XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
   proofQuotientPolyParts2YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
   proofQuotientPolyParts3XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
   proofQuotientPolyParts3YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
   proofQuotientPolyOpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
   proofStatePolys0OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
   proofStatePolys1OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
   proofStatePolys2OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
   proofStatePolys3OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
   proofStatePolys3OpeningAtZOmegaG /\
   to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
   proofGateSelectors0OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys0OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys1OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys2OpeningAtZG /\
   to_uint
     (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
   proofLookupTPolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
   proofLookupSelectorPolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
   proofLookupTableTypePolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupSPolyOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupGrandProductOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupTPolyOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
   proofLinearisationPolyOpeningAtZG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
   proofOpeningProofAtZOmegaXG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
   proofOpeningProofAtZOmegaYG /\
   !Primops.reverted{1} /\
   _2{1} = (of_int publicInputG)%W256 /\
   _4{1} = (of_int proofStatePolys0XG)%W256 /\
   (0 <= state0_0{2} < W256.modulus) /\ (0 <= state1_0{2} < W256.modulus) /\
   (0 <= state0_1{2} < W256.modulus) /\ (0 <= state1_1{2} < W256.modulus) /\  
   Primops.memory{1} = updateTranscript_memory_footprint m1 (of_int proofStatePolys0XG)%W256 (W256.of_int state0_1{2}) (W256.of_int state1_1{2})
).
call (updateTranscript_low_equiv_mid m1 s0_0 s1_0 proofStatePolys0XG).
skip. progress.

exists* state0_1{2}, state1_1{2}. elim*=> s0_1 s1_1.
pose m2 := updateTranscript_memory_footprint m1 (of_int proofStatePolys0XG)%W256 (W256.of_int s0_1) (W256.of_int s1_1).
seq 1 0: (
  s0_0 = state0_0{2} /\ s1_0 = state1_0{2} /\
  s0_1 = state0_1{2} /\ s1_1 = state1_1{2} /\
  (initialS0{2} = initialS0G /\ initialS1{2} = initialS1G /\
    publicInput{2} = publicInputG /\
    proofStatePolys0X{2} = proofStatePolys0XG /\
    proofStatePolys0Y{2} = proofStatePolys0YG /\
    proofStatePolys1X{2} = proofStatePolys1XG /\
    proofStatePolys1Y{2} = proofStatePolys1YG /\
    proofStatePolys2X{2} = proofStatePolys2XG /\
    proofStatePolys2Y{2} = proofStatePolys2YG /\
    proofStatePolys3X{2} = proofStatePolys3XG /\
    proofStatePolys3Y{2} = proofStatePolys3YG /\
    proofLookupSPolyX{2} = proofLookupSPolyXG /\
    proofLookupSPolyY{2} = proofLookupSPolyYG /\
    proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
    proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
    proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
    proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
    proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
    proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
    proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
    proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
    proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
    proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
    proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
    proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
    proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
    proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
    proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
    proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
    proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
    proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
    proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
    proofCopyPermutationPolys0OpeningAtZ{2} =
    proofCopyPermutationPolys0OpeningAtZG /\
    proofCopyPermutationPolys1OpeningAtZ{2} =
    proofCopyPermutationPolys1OpeningAtZG /\
    proofCopyPermutationPolys2OpeningAtZ{2} =
    proofCopyPermutationPolys2OpeningAtZG /\
    proofCopyPermutationGrandProductOpeningAtZOmega{2} =
    proofCopyPermutationGrandProductOpeningAtZOmegaG /\
    proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
    proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
    proofLookupTableTypePolyOpeningAtZ{2} =
    proofLookupTableTypePolyOpeningAtZG /\
    proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
    proofLookupGrandProductOpeningAtZOmega{2} =
    proofLookupGrandProductOpeningAtZOmegaG /\
    proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
    proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
    proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
    proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
    proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
    proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
   to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
   to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
   to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
   to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
   to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
   to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
   to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
   to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
   to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
   to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
   to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
   proofCopyPermutationGrandProductXG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
   proofCopyPermutationGrandProductYG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
   proofLookupGrandProductXG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
   proofLookupGrandProductYG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
   proofQuotientPolyParts0XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
   proofQuotientPolyParts0YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
   proofQuotientPolyParts1XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
   proofQuotientPolyParts1YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
   proofQuotientPolyParts2XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
   proofQuotientPolyParts2YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
   proofQuotientPolyParts3XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
   proofQuotientPolyParts3YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
   proofQuotientPolyOpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
   proofStatePolys0OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
   proofStatePolys1OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
   proofStatePolys2OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
   proofStatePolys3OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
   proofStatePolys3OpeningAtZOmegaG /\
   to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
   proofGateSelectors0OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys0OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys1OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys2OpeningAtZG /\
   to_uint
     (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
   proofLookupTPolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
   proofLookupSelectorPolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
   proofLookupTableTypePolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupSPolyOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupGrandProductOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupTPolyOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
   proofLinearisationPolyOpeningAtZG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
   proofOpeningProofAtZOmegaXG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
   proofOpeningProofAtZOmegaYG /\
   !Primops.reverted{1} /\
   _2{1} = (of_int publicInputG)%W256 /\
   _4{1} = (of_int proofStatePolys0XG)%W256 /\
   _6{1} = (of_int proofStatePolys0YG)%W256 /\
   Primops.memory{1} = m2 /\
   0 <= state0_0{2} < W256.modulus /\ 0 <= state1_0{2} < W256.modulus /\
   0 <= state0_1{2} < W256.modulus /\ 0 <= state1_1{2} < W256.modulus /\
   W256.to_uint (mload m2 TRANSCRIPT_STATE_0_SLOT) = state0_1{2} /\
   W256.to_uint (mload m2 TRANSCRIPT_STATE_1_SLOT) = state1_1{2}  
).
call{1} (ConcretePrimops.mload_pspec m2 PROOF_STATE_POLYS_0_Y_SLOT).
skip. progress;
rewrite /m2 /m1 /updateTranscript_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.

seq 1 1: (
  s0_0 = state0_0{2} /\
  s1_0 = state1_0{2} /\
  s0_1 = state0_1{2} /\
  s1_1 = state1_1{2} /\
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  (0 <= state0_0{2} && state0_0{2} < W256.modulus) /\
  (0 <= state1_0{2} && state1_0{2} < W256.modulus) /\
  (0 <= state0_1{2} && state0_1{2} < W256.modulus) /\
  (0 <= state1_1{2} && state1_1{2} < W256.modulus) /\
  (0 <= state0_2{2} && state0_2{2} < W256.modulus) /\
  (0 <= state1_2{2} && state1_2{2} < W256.modulus) /\
  Primops.memory{1} = updateTranscript_memory_footprint m2 _6{1} (W256.of_int state0_2{2}) (W256.of_int state1_2{2})
).
call (updateTranscript_low_equiv_mid m2 s0_1 s1_1 proofStatePolys0YG).
skip. progress.

exists* state0_2{2}, state1_2{2}. elim*=> s0_2 s1_2.
pose m3 := updateTranscript_memory_footprint m2 (of_int proofStatePolys0YG)%W256 (W256.of_int s0_2) (W256.of_int s1_2).
seq 1 0: (
  s0_0 = state0_0{2} /\ s1_0 = state1_0{2} /\
  s0_1 = state0_1{2} /\ s1_1 = state1_1{2} /\
  s0_2 = state0_2{2} /\ s1_2 = state1_2{2} /\
  (initialS0{2} = initialS0G /\ initialS1{2} = initialS1G /\
    publicInput{2} = publicInputG /\
    proofStatePolys0X{2} = proofStatePolys0XG /\
    proofStatePolys0Y{2} = proofStatePolys0YG /\
    proofStatePolys1X{2} = proofStatePolys1XG /\
    proofStatePolys1Y{2} = proofStatePolys1YG /\
    proofStatePolys2X{2} = proofStatePolys2XG /\
    proofStatePolys2Y{2} = proofStatePolys2YG /\
    proofStatePolys3X{2} = proofStatePolys3XG /\
    proofStatePolys3Y{2} = proofStatePolys3YG /\
    proofLookupSPolyX{2} = proofLookupSPolyXG /\
    proofLookupSPolyY{2} = proofLookupSPolyYG /\
    proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
    proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
    proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
    proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
    proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
    proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
    proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
    proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
    proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
    proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
    proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
    proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
    proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
    proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
    proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
    proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
    proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
    proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
    proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
    proofCopyPermutationPolys0OpeningAtZ{2} =
    proofCopyPermutationPolys0OpeningAtZG /\
    proofCopyPermutationPolys1OpeningAtZ{2} =
    proofCopyPermutationPolys1OpeningAtZG /\
    proofCopyPermutationPolys2OpeningAtZ{2} =
    proofCopyPermutationPolys2OpeningAtZG /\
    proofCopyPermutationGrandProductOpeningAtZOmega{2} =
    proofCopyPermutationGrandProductOpeningAtZOmegaG /\
    proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
    proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
    proofLookupTableTypePolyOpeningAtZ{2} =
    proofLookupTableTypePolyOpeningAtZG /\
    proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
    proofLookupGrandProductOpeningAtZOmega{2} =
    proofLookupGrandProductOpeningAtZOmegaG /\
    proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
    proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
    proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
    proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
    proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
    proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
   to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
   to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
   to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
   to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
   to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
   to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
   to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
   to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
   to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
   to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
   to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
   proofCopyPermutationGrandProductXG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
   proofCopyPermutationGrandProductYG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
   proofLookupGrandProductXG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
   proofLookupGrandProductYG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
   proofQuotientPolyParts0XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
   proofQuotientPolyParts0YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
   proofQuotientPolyParts1XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
   proofQuotientPolyParts1YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
   proofQuotientPolyParts2XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
   proofQuotientPolyParts2YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
   proofQuotientPolyParts3XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
   proofQuotientPolyParts3YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
   proofQuotientPolyOpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
   proofStatePolys0OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
   proofStatePolys1OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
   proofStatePolys2OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
   proofStatePolys3OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
   proofStatePolys3OpeningAtZOmegaG /\
   to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
   proofGateSelectors0OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys0OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys1OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys2OpeningAtZG /\
   to_uint
     (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
   proofLookupTPolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
   proofLookupSelectorPolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
   proofLookupTableTypePolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupSPolyOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupGrandProductOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupTPolyOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
   proofLinearisationPolyOpeningAtZG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
   proofOpeningProofAtZOmegaXG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
   proofOpeningProofAtZOmegaYG /\
   !Primops.reverted{1} /\
   _2{1} = (of_int publicInputG)%W256 /\
   _4{1} = (of_int proofStatePolys0XG)%W256 /\
   _6{1} = (of_int proofStatePolys0YG)%W256 /\
   _8{1} = (of_int proofStatePolys1XG)%W256 /\
   Primops.memory{1} = m3 /\
   0 <= state0_2{2} < W256.modulus /\ 0 <= state1_2{2} < W256.modulus /\
   W256.to_uint (mload m3 TRANSCRIPT_STATE_0_SLOT) = state0_2{2} /\
   W256.to_uint (mload m3 TRANSCRIPT_STATE_1_SLOT) = state1_2{2}  
).
call{1} (ConcretePrimops.mload_pspec m3 PROOF_STATE_POLYS_1_X_SLOT).
skip. progress;
rewrite /m3 /m2 /m1 /updateTranscript_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT /PROOF_STATE_POLYS_1_X_SLOT.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.

seq 1 1:(
  s0_0 = state0_0{2} /\
  s1_0 = state1_0{2} /\
  s0_1 = state0_1{2} /\
  s1_1 = state1_1{2} /\
  s0_2 = state0_2{2} /\
  s1_2 = state1_2{2} /\
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  (0 <= state0_3{2} && state0_3{2} < W256.modulus) /\
  (0 <= state1_3{2} && state1_3{2} < W256.modulus) /\
  Primops.memory{1} = updateTranscript_memory_footprint m3 _8{1} (W256.of_int state0_3{2}) (W256.of_int state1_3{2})
).
call (updateTranscript_low_equiv_mid m3 s0_2 s1_2 proofStatePolys1XG).
skip. progress.

exists* state0_3{2}, state1_3{2}. elim*=> s0_3 s1_3.
pose m4 := updateTranscript_memory_footprint m3 (of_int proofStatePolys1XG)%W256 (W256.of_int s0_3) (W256.of_int s1_3).
seq 1 0: (
  s0_3 = state0_3{2} /\ s1_3 = state1_3{2} /\
  (initialS0{2} = initialS0G /\ initialS1{2} = initialS1G /\
    publicInput{2} = publicInputG /\
    proofStatePolys0X{2} = proofStatePolys0XG /\
    proofStatePolys0Y{2} = proofStatePolys0YG /\
    proofStatePolys1X{2} = proofStatePolys1XG /\
    proofStatePolys1Y{2} = proofStatePolys1YG /\
    proofStatePolys2X{2} = proofStatePolys2XG /\
    proofStatePolys2Y{2} = proofStatePolys2YG /\
    proofStatePolys3X{2} = proofStatePolys3XG /\
    proofStatePolys3Y{2} = proofStatePolys3YG /\
    proofLookupSPolyX{2} = proofLookupSPolyXG /\
    proofLookupSPolyY{2} = proofLookupSPolyYG /\
    proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
    proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
    proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
    proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
    proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
    proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
    proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
    proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
    proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
    proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
    proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
    proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
    proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
    proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
    proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
    proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
    proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
    proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
    proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
    proofCopyPermutationPolys0OpeningAtZ{2} =
    proofCopyPermutationPolys0OpeningAtZG /\
    proofCopyPermutationPolys1OpeningAtZ{2} =
    proofCopyPermutationPolys1OpeningAtZG /\
    proofCopyPermutationPolys2OpeningAtZ{2} =
    proofCopyPermutationPolys2OpeningAtZG /\
    proofCopyPermutationGrandProductOpeningAtZOmega{2} =
    proofCopyPermutationGrandProductOpeningAtZOmegaG /\
    proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
    proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
    proofLookupTableTypePolyOpeningAtZ{2} =
    proofLookupTableTypePolyOpeningAtZG /\
    proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
    proofLookupGrandProductOpeningAtZOmega{2} =
    proofLookupGrandProductOpeningAtZOmegaG /\
    proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
    proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
    proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
    proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
    proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
    proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
   to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
   to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
   to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
   to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
   to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
   to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
   to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
   to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
   to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
   to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
   to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
   proofCopyPermutationGrandProductXG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
   proofCopyPermutationGrandProductYG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
   proofLookupGrandProductXG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
   proofLookupGrandProductYG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
   proofQuotientPolyParts0XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
   proofQuotientPolyParts0YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
   proofQuotientPolyParts1XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
   proofQuotientPolyParts1YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
   proofQuotientPolyParts2XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
   proofQuotientPolyParts2YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
   proofQuotientPolyParts3XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
   proofQuotientPolyParts3YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
   proofQuotientPolyOpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
   proofStatePolys0OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
   proofStatePolys1OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
   proofStatePolys2OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
   proofStatePolys3OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
   proofStatePolys3OpeningAtZOmegaG /\
   to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
   proofGateSelectors0OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys0OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys1OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys2OpeningAtZG /\
   to_uint
     (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
   proofLookupTPolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
   proofLookupSelectorPolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
   proofLookupTableTypePolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupSPolyOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupGrandProductOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupTPolyOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
   proofLinearisationPolyOpeningAtZG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
   proofOpeningProofAtZOmegaXG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
   proofOpeningProofAtZOmegaYG /\
   !Primops.reverted{1} /\
   _2{1} = (of_int publicInputG)%W256 /\
   _4{1} = (of_int proofStatePolys0XG)%W256 /\
   _6{1} = (of_int proofStatePolys0YG)%W256 /\
   _8{1} = (of_int proofStatePolys1XG)%W256 /\
   _10{1} = (of_int proofStatePolys1YG)%W256 /\  
   Primops.memory{1} = m4 /\
   0 <= state0_3{2} < W256.modulus /\ 0 <= state1_3{2} < W256.modulus /\
   W256.to_uint (mload m4 TRANSCRIPT_STATE_0_SLOT) = state0_3{2} /\
   W256.to_uint (mload m4 TRANSCRIPT_STATE_1_SLOT) = state1_3{2}  
).
call{1} (ConcretePrimops.mload_pspec m4 PROOF_STATE_POLYS_1_Y_SLOT).
skip. progress;
rewrite /m4 /m3 /m2 /m1 /updateTranscript_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT /PROOF_STATE_POLYS_1_X_SLOT
        /PROOF_STATE_POLYS_1_Y_SLOT.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.

seq 1 1:(
  s0_3 = state0_3{2} /\ s1_3 = state1_3{2} /\
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  (0 <= state0_4{2} && state0_4{2} < W256.modulus) /\
  (0 <= state1_4{2} && state1_4{2} < W256.modulus) /\
  Primops.memory{1} = updateTranscript_memory_footprint m4 _10{1} (W256.of_int state0_4{2}) (W256.of_int state1_4{2})
).
call (updateTranscript_low_equiv_mid m4 s0_3 s1_3 proofStatePolys1YG).
skip. progress.

exists* state0_4{2}, state1_4{2}. elim*=> s0_4 s1_4.
pose m5 := updateTranscript_memory_footprint m4 (of_int proofStatePolys1YG)%W256 (W256.of_int s0_4) (W256.of_int s1_4).
seq 1 0: (
  s0_4 = state0_4{2} /\ s1_4 = state1_4{2} /\
  (initialS0{2} = initialS0G /\ initialS1{2} = initialS1G /\
    publicInput{2} = publicInputG /\
    proofStatePolys0X{2} = proofStatePolys0XG /\
    proofStatePolys0Y{2} = proofStatePolys0YG /\
    proofStatePolys1X{2} = proofStatePolys1XG /\
    proofStatePolys1Y{2} = proofStatePolys1YG /\
    proofStatePolys2X{2} = proofStatePolys2XG /\
    proofStatePolys2Y{2} = proofStatePolys2YG /\
    proofStatePolys3X{2} = proofStatePolys3XG /\
    proofStatePolys3Y{2} = proofStatePolys3YG /\
    proofLookupSPolyX{2} = proofLookupSPolyXG /\
    proofLookupSPolyY{2} = proofLookupSPolyYG /\
    proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
    proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
    proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
    proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
    proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
    proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
    proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
    proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
    proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
    proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
    proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
    proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
    proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
    proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
    proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
    proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
    proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
    proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
    proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
    proofCopyPermutationPolys0OpeningAtZ{2} =
    proofCopyPermutationPolys0OpeningAtZG /\
    proofCopyPermutationPolys1OpeningAtZ{2} =
    proofCopyPermutationPolys1OpeningAtZG /\
    proofCopyPermutationPolys2OpeningAtZ{2} =
    proofCopyPermutationPolys2OpeningAtZG /\
    proofCopyPermutationGrandProductOpeningAtZOmega{2} =
    proofCopyPermutationGrandProductOpeningAtZOmegaG /\
    proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
    proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
    proofLookupTableTypePolyOpeningAtZ{2} =
    proofLookupTableTypePolyOpeningAtZG /\
    proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
    proofLookupGrandProductOpeningAtZOmega{2} =
    proofLookupGrandProductOpeningAtZOmegaG /\
    proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
    proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
    proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
    proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
    proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
    proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
   to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
   to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
   to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
   to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
   to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
   to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
   to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
   to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
   to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
   to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
   to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
   proofCopyPermutationGrandProductXG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
   proofCopyPermutationGrandProductYG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
   proofLookupGrandProductXG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
   proofLookupGrandProductYG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
   proofQuotientPolyParts0XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
   proofQuotientPolyParts0YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
   proofQuotientPolyParts1XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
   proofQuotientPolyParts1YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
   proofQuotientPolyParts2XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
   proofQuotientPolyParts2YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
   proofQuotientPolyParts3XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
   proofQuotientPolyParts3YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
   proofQuotientPolyOpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
   proofStatePolys0OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
   proofStatePolys1OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
   proofStatePolys2OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
   proofStatePolys3OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
   proofStatePolys3OpeningAtZOmegaG /\
   to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
   proofGateSelectors0OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys0OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys1OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys2OpeningAtZG /\
   to_uint
     (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
   proofLookupTPolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
   proofLookupSelectorPolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
   proofLookupTableTypePolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupSPolyOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupGrandProductOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupTPolyOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
   proofLinearisationPolyOpeningAtZG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
   proofOpeningProofAtZOmegaXG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
   proofOpeningProofAtZOmegaYG /\
   !Primops.reverted{1} /\
   _2{1} = (of_int publicInputG)%W256 /\
   _4{1} = (of_int proofStatePolys0XG)%W256 /\
   _6{1} = (of_int proofStatePolys0YG)%W256 /\
   _8{1} = (of_int proofStatePolys1XG)%W256 /\
   _10{1} = (of_int proofStatePolys1YG)%W256 /\
   _12{1} = (of_int proofStatePolys2XG)%W256 /\
   Primops.memory{1} = m5 /\
   0 <= state0_4{2} < W256.modulus /\ 0 <= state1_4{2} < W256.modulus /\
   W256.to_uint (mload m5 TRANSCRIPT_STATE_0_SLOT) = state0_4{2} /\
   W256.to_uint (mload m5 TRANSCRIPT_STATE_1_SLOT) = state1_4{2}  
).
call{1} (ConcretePrimops.mload_pspec m5 PROOF_STATE_POLYS_2_X_SLOT).
skip. progress;
rewrite /m5 /m4 /m3 /m2 /m1 /updateTranscript_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT /PROOF_STATE_POLYS_1_X_SLOT
        /PROOF_STATE_POLYS_1_Y_SLOT /PROOF_STATE_POLYS_2_X_SLOT /PROOF_STATE_POLYS_2_Y_SLOT.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.

seq 1 1:(
  s0_4 = state0_4{2} /\ s1_4 = state1_4{2} /\
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  (0 <= state0_5{2} && state0_5{2} < W256.modulus) /\
  (0 <= state1_5{2} && state1_5{2} < W256.modulus) /\
  Primops.memory{1} = updateTranscript_memory_footprint m5 _12{1} (W256.of_int state0_5{2}) (W256.of_int state1_5{2})
).
call (updateTranscript_low_equiv_mid m5 s0_4 s1_4 proofStatePolys2XG).
skip. progress.

exists* state0_5{2}, state1_5{2}. elim*=> s0_5 s1_5.
pose m6 := updateTranscript_memory_footprint m5 (of_int proofStatePolys2XG)%W256 (W256.of_int s0_5) (W256.of_int s1_5).
seq 1 0: (
  s0_5 = state0_5{2} /\ s1_5 = state1_5{2} /\
  (initialS0{2} = initialS0G /\ initialS1{2} = initialS1G /\
    publicInput{2} = publicInputG /\
    proofStatePolys0X{2} = proofStatePolys0XG /\
    proofStatePolys0Y{2} = proofStatePolys0YG /\
    proofStatePolys1X{2} = proofStatePolys1XG /\
    proofStatePolys1Y{2} = proofStatePolys1YG /\
    proofStatePolys2X{2} = proofStatePolys2XG /\
    proofStatePolys2Y{2} = proofStatePolys2YG /\
    proofStatePolys3X{2} = proofStatePolys3XG /\
    proofStatePolys3Y{2} = proofStatePolys3YG /\
    proofLookupSPolyX{2} = proofLookupSPolyXG /\
    proofLookupSPolyY{2} = proofLookupSPolyYG /\
    proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
    proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
    proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
    proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
    proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
    proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
    proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
    proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
    proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
    proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
    proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
    proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
    proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
    proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
    proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
    proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
    proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
    proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
    proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
    proofCopyPermutationPolys0OpeningAtZ{2} =
    proofCopyPermutationPolys0OpeningAtZG /\
    proofCopyPermutationPolys1OpeningAtZ{2} =
    proofCopyPermutationPolys1OpeningAtZG /\
    proofCopyPermutationPolys2OpeningAtZ{2} =
    proofCopyPermutationPolys2OpeningAtZG /\
    proofCopyPermutationGrandProductOpeningAtZOmega{2} =
    proofCopyPermutationGrandProductOpeningAtZOmegaG /\
    proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
    proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
    proofLookupTableTypePolyOpeningAtZ{2} =
    proofLookupTableTypePolyOpeningAtZG /\
    proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
    proofLookupGrandProductOpeningAtZOmega{2} =
    proofLookupGrandProductOpeningAtZOmegaG /\
    proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
    proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
    proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
    proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
    proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
    proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
   to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
   to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
   to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
   to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
   to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
   to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
   to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
   to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
   to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
   to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
   to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
   proofCopyPermutationGrandProductXG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
   proofCopyPermutationGrandProductYG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
   proofLookupGrandProductXG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
   proofLookupGrandProductYG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
   proofQuotientPolyParts0XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
   proofQuotientPolyParts0YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
   proofQuotientPolyParts1XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
   proofQuotientPolyParts1YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
   proofQuotientPolyParts2XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
   proofQuotientPolyParts2YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
   proofQuotientPolyParts3XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
   proofQuotientPolyParts3YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
   proofQuotientPolyOpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
   proofStatePolys0OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
   proofStatePolys1OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
   proofStatePolys2OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
   proofStatePolys3OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
   proofStatePolys3OpeningAtZOmegaG /\
   to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
   proofGateSelectors0OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys0OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys1OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys2OpeningAtZG /\
   to_uint
     (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
   proofLookupTPolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
   proofLookupSelectorPolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
   proofLookupTableTypePolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupSPolyOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupGrandProductOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupTPolyOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
   proofLinearisationPolyOpeningAtZG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
   proofOpeningProofAtZOmegaXG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
   proofOpeningProofAtZOmegaYG /\
   !Primops.reverted{1} /\
   _2{1} = (of_int publicInputG)%W256 /\
   _4{1} = (of_int proofStatePolys0XG)%W256 /\
   _6{1} = (of_int proofStatePolys0YG)%W256 /\
   _8{1} = (of_int proofStatePolys1XG)%W256 /\
   _10{1} = (of_int proofStatePolys1YG)%W256 /\
   _12{1} = (of_int proofStatePolys2XG)%W256 /\
   _14{1} = (of_int proofStatePolys2YG)%W256 /\
   Primops.memory{1} = m6 /\
   0 <= state0_5{2} < W256.modulus /\ 0 <= state1_5{2} < W256.modulus /\
   W256.to_uint (mload m6 TRANSCRIPT_STATE_0_SLOT) = state0_5{2} /\
   W256.to_uint (mload m6 TRANSCRIPT_STATE_1_SLOT) = state1_5{2}  
).
call{1} (ConcretePrimops.mload_pspec m6 PROOF_STATE_POLYS_2_Y_SLOT).
skip. progress;
rewrite /m6 /m5 /m4 /m3 /m2 /m1 /updateTranscript_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT /PROOF_STATE_POLYS_1_X_SLOT
        /PROOF_STATE_POLYS_1_Y_SLOT /PROOF_STATE_POLYS_2_X_SLOT /PROOF_STATE_POLYS_2_Y_SLOT.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.

seq 1 1:(
  s0_5 = state0_5{2} /\ s1_5 = state1_5{2} /\
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  (0 <= state0_6{2} && state0_6{2} < W256.modulus) /\
  (0 <= state1_6{2} && state1_6{2} < W256.modulus) /\
  Primops.memory{1} = updateTranscript_memory_footprint m6 _14{1} (W256.of_int state0_6{2}) (W256.of_int state1_6{2})
).
call (updateTranscript_low_equiv_mid m6 s0_5 s1_5 proofStatePolys2YG).
skip. progress.

exists* state0_6{2}, state1_6{2}. elim*=> s0_6 s1_6.
pose m7 := updateTranscript_memory_footprint m6 (of_int proofStatePolys2YG)%W256 (W256.of_int s0_6) (W256.of_int s1_6).
seq 1 0: (
  s0_6 = state0_6{2} /\ s1_6 = state1_6{2} /\
  (initialS0{2} = initialS0G /\ initialS1{2} = initialS1G /\
    publicInput{2} = publicInputG /\
    proofStatePolys0X{2} = proofStatePolys0XG /\
    proofStatePolys0Y{2} = proofStatePolys0YG /\
    proofStatePolys1X{2} = proofStatePolys1XG /\
    proofStatePolys1Y{2} = proofStatePolys1YG /\
    proofStatePolys2X{2} = proofStatePolys2XG /\
    proofStatePolys2Y{2} = proofStatePolys2YG /\
    proofStatePolys3X{2} = proofStatePolys3XG /\
    proofStatePolys3Y{2} = proofStatePolys3YG /\
    proofLookupSPolyX{2} = proofLookupSPolyXG /\
    proofLookupSPolyY{2} = proofLookupSPolyYG /\
    proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
    proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
    proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
    proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
    proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
    proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
    proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
    proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
    proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
    proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
    proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
    proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
    proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
    proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
    proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
    proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
    proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
    proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
    proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
    proofCopyPermutationPolys0OpeningAtZ{2} =
    proofCopyPermutationPolys0OpeningAtZG /\
    proofCopyPermutationPolys1OpeningAtZ{2} =
    proofCopyPermutationPolys1OpeningAtZG /\
    proofCopyPermutationPolys2OpeningAtZ{2} =
    proofCopyPermutationPolys2OpeningAtZG /\
    proofCopyPermutationGrandProductOpeningAtZOmega{2} =
    proofCopyPermutationGrandProductOpeningAtZOmegaG /\
    proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
    proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
    proofLookupTableTypePolyOpeningAtZ{2} =
    proofLookupTableTypePolyOpeningAtZG /\
    proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
    proofLookupGrandProductOpeningAtZOmega{2} =
    proofLookupGrandProductOpeningAtZOmegaG /\
    proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
    proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
    proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
    proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
    proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
    proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
   to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
   to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
   to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
   to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
   to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
   to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
   to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
   to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
   to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
   to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
   to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
   proofCopyPermutationGrandProductXG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
   proofCopyPermutationGrandProductYG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
   proofLookupGrandProductXG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
   proofLookupGrandProductYG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
   proofQuotientPolyParts0XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
   proofQuotientPolyParts0YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
   proofQuotientPolyParts1XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
   proofQuotientPolyParts1YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
   proofQuotientPolyParts2XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
   proofQuotientPolyParts2YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
   proofQuotientPolyParts3XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
   proofQuotientPolyParts3YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
   proofQuotientPolyOpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
   proofStatePolys0OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
   proofStatePolys1OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
   proofStatePolys2OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
   proofStatePolys3OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
   proofStatePolys3OpeningAtZOmegaG /\
   to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
   proofGateSelectors0OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys0OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys1OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys2OpeningAtZG /\
   to_uint
     (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
   proofLookupTPolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
   proofLookupSelectorPolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
   proofLookupTableTypePolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupSPolyOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupGrandProductOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupTPolyOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
   proofLinearisationPolyOpeningAtZG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
   proofOpeningProofAtZOmegaXG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
   proofOpeningProofAtZOmegaYG /\
   !Primops.reverted{1} /\
   _2{1} = (of_int publicInputG)%W256 /\
   _4{1} = (of_int proofStatePolys0XG)%W256 /\
   _6{1} = (of_int proofStatePolys0YG)%W256 /\
   _8{1} = (of_int proofStatePolys1XG)%W256 /\
   _10{1} = (of_int proofStatePolys1YG)%W256 /\
   _12{1} = (of_int proofStatePolys2XG)%W256 /\
   _14{1} = (of_int proofStatePolys2YG)%W256 /\
   _16{1} = (of_int proofStatePolys3XG)%W256 /\
   Primops.memory{1} = m7 /\
   0 <= state0_6{2} < W256.modulus /\ 0 <= state1_6{2} < W256.modulus /\
   W256.to_uint (mload m7 TRANSCRIPT_STATE_0_SLOT) = state0_6{2} /\
   W256.to_uint (mload m7 TRANSCRIPT_STATE_1_SLOT) = state1_6{2}  
).
call{1} (ConcretePrimops.mload_pspec m7 PROOF_STATE_POLYS_3_X_SLOT).
skip. progress;
rewrite /m7 /m6 /m5 /m4 /m3 /m2 /m1 /updateTranscript_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT /PROOF_STATE_POLYS_1_X_SLOT
        /PROOF_STATE_POLYS_1_Y_SLOT /PROOF_STATE_POLYS_2_X_SLOT /PROOF_STATE_POLYS_2_Y_SLOT
        /PROOF_STATE_POLYS_3_X_SLOT.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.

seq 1 1:(
  s0_6 = state0_6{2} /\ s1_6 = state1_6{2} /\
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  (0 <= state0_7{2} && state0_7{2} < W256.modulus) /\
  (0 <= state1_7{2} && state1_7{2} < W256.modulus) /\
  Primops.memory{1} = updateTranscript_memory_footprint m7 _16{1} (W256.of_int state0_7{2}) (W256.of_int state1_7{2})
).
call (updateTranscript_low_equiv_mid m7 s0_6 s1_6 proofStatePolys3XG).
skip. progress.

exists* state0_7{2}, state1_7{2}. elim*=> s0_7 s1_7.
pose m8 := updateTranscript_memory_footprint m7 (of_int proofStatePolys3XG)%W256 (W256.of_int s0_7) (W256.of_int s1_7).
seq 1 0: (
  s0_7 = state0_7{2} /\ s1_7 = state1_7{2} /\
  (initialS0{2} = initialS0G /\ initialS1{2} = initialS1G /\
    publicInput{2} = publicInputG /\
    proofStatePolys0X{2} = proofStatePolys0XG /\
    proofStatePolys0Y{2} = proofStatePolys0YG /\
    proofStatePolys1X{2} = proofStatePolys1XG /\
    proofStatePolys1Y{2} = proofStatePolys1YG /\
    proofStatePolys2X{2} = proofStatePolys2XG /\
    proofStatePolys2Y{2} = proofStatePolys2YG /\
    proofStatePolys3X{2} = proofStatePolys3XG /\
    proofStatePolys3Y{2} = proofStatePolys3YG /\
    proofLookupSPolyX{2} = proofLookupSPolyXG /\
    proofLookupSPolyY{2} = proofLookupSPolyYG /\
    proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
    proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
    proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
    proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
    proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
    proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
    proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
    proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
    proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
    proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
    proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
    proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
    proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
    proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
    proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
    proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
    proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
    proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
    proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
    proofCopyPermutationPolys0OpeningAtZ{2} =
    proofCopyPermutationPolys0OpeningAtZG /\
    proofCopyPermutationPolys1OpeningAtZ{2} =
    proofCopyPermutationPolys1OpeningAtZG /\
    proofCopyPermutationPolys2OpeningAtZ{2} =
    proofCopyPermutationPolys2OpeningAtZG /\
    proofCopyPermutationGrandProductOpeningAtZOmega{2} =
    proofCopyPermutationGrandProductOpeningAtZOmegaG /\
    proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
    proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
    proofLookupTableTypePolyOpeningAtZ{2} =
    proofLookupTableTypePolyOpeningAtZG /\
    proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
    proofLookupGrandProductOpeningAtZOmega{2} =
    proofLookupGrandProductOpeningAtZOmegaG /\
    proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
    proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
    proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
    proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
    proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
    proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
   to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
   to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
   to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
   to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
   to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
   to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
   to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
   to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
   to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
   to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
   to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
   proofCopyPermutationGrandProductXG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
   proofCopyPermutationGrandProductYG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
   proofLookupGrandProductXG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
   proofLookupGrandProductYG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
   proofQuotientPolyParts0XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
   proofQuotientPolyParts0YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
   proofQuotientPolyParts1XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
   proofQuotientPolyParts1YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
   proofQuotientPolyParts2XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
   proofQuotientPolyParts2YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
   proofQuotientPolyParts3XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
   proofQuotientPolyParts3YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
   proofQuotientPolyOpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
   proofStatePolys0OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
   proofStatePolys1OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
   proofStatePolys2OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
   proofStatePolys3OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
   proofStatePolys3OpeningAtZOmegaG /\
   to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
   proofGateSelectors0OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys0OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys1OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys2OpeningAtZG /\
   to_uint
     (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
   proofLookupTPolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
   proofLookupSelectorPolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
   proofLookupTableTypePolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupSPolyOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupGrandProductOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupTPolyOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
   proofLinearisationPolyOpeningAtZG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
   proofOpeningProofAtZOmegaXG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
   proofOpeningProofAtZOmegaYG /\
   !Primops.reverted{1} /\
   _2{1} = (of_int publicInputG)%W256 /\
   _4{1} = (of_int proofStatePolys0XG)%W256 /\
   _6{1} = (of_int proofStatePolys0YG)%W256 /\
   _8{1} = (of_int proofStatePolys1XG)%W256 /\
   _10{1} = (of_int proofStatePolys1YG)%W256 /\
   _12{1} = (of_int proofStatePolys2XG)%W256 /\
   _14{1} = (of_int proofStatePolys2YG)%W256 /\
   _16{1} = (of_int proofStatePolys3XG)%W256 /\
   _18{1} = (of_int proofStatePolys3YG)%W256 /\
   Primops.memory{1} = m8 /\
   0 <= state0_7{2} < W256.modulus /\ 0 <= state1_7{2} < W256.modulus /\
   W256.to_uint (mload m8 TRANSCRIPT_STATE_0_SLOT) = state0_7{2} /\
   W256.to_uint (mload m8 TRANSCRIPT_STATE_1_SLOT) = state1_7{2}  
).
call{1} (ConcretePrimops.mload_pspec m8 PROOF_STATE_POLYS_3_Y_SLOT).
skip. progress;
rewrite /m8 /m7 /m6 /m5 /m4 /m3 /m2 /m1 /updateTranscript_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT /PROOF_STATE_POLYS_1_X_SLOT
        /PROOF_STATE_POLYS_1_Y_SLOT /PROOF_STATE_POLYS_2_X_SLOT /PROOF_STATE_POLYS_2_Y_SLOT
        /PROOF_STATE_POLYS_3_X_SLOT /PROOF_STATE_POLYS_3_Y_SLOT.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.

seq 1 1:(
  s0_7 = state0_7{2} /\ s1_7 = state1_7{2} /\
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  (0 <= state0_8{2} && state0_8{2} < W256.modulus) /\
  (0 <= state1_8{2} && state1_8{2} < W256.modulus) /\
  Primops.memory{1} = updateTranscript_memory_footprint m8 _18{1} (W256.of_int state0_8{2}) (W256.of_int state1_8{2})
).
call (updateTranscript_low_equiv_mid m8 s0_7 s1_7 proofStatePolys3YG).
skip. progress.

exists* state0_8{2}, state1_8{2}. elim*=> s0_8 s1_8.
pose m9 := updateTranscript_memory_footprint m8 (of_int proofStatePolys3YG)%W256 (W256.of_int s0_8) (W256.of_int s1_8).
seq 0 0: (
  s0_8 = state0_8{2} /\ s1_8 = state1_8{2} /\
  (initialS0{2} = initialS0G /\ initialS1{2} = initialS1G /\
    publicInput{2} = publicInputG /\
    proofStatePolys0X{2} = proofStatePolys0XG /\
    proofStatePolys0Y{2} = proofStatePolys0YG /\
    proofStatePolys1X{2} = proofStatePolys1XG /\
    proofStatePolys1Y{2} = proofStatePolys1YG /\
    proofStatePolys2X{2} = proofStatePolys2XG /\
    proofStatePolys2Y{2} = proofStatePolys2YG /\
    proofStatePolys3X{2} = proofStatePolys3XG /\
    proofStatePolys3Y{2} = proofStatePolys3YG /\
    proofLookupSPolyX{2} = proofLookupSPolyXG /\
    proofLookupSPolyY{2} = proofLookupSPolyYG /\
    proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
    proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
    proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
    proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
    proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
    proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
    proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
    proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
    proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
    proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
    proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
    proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
    proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
    proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
    proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
    proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
    proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
    proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
    proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
    proofCopyPermutationPolys0OpeningAtZ{2} =
    proofCopyPermutationPolys0OpeningAtZG /\
    proofCopyPermutationPolys1OpeningAtZ{2} =
    proofCopyPermutationPolys1OpeningAtZG /\
    proofCopyPermutationPolys2OpeningAtZ{2} =
    proofCopyPermutationPolys2OpeningAtZG /\
    proofCopyPermutationGrandProductOpeningAtZOmega{2} =
    proofCopyPermutationGrandProductOpeningAtZOmegaG /\
    proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
    proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
    proofLookupTableTypePolyOpeningAtZ{2} =
    proofLookupTableTypePolyOpeningAtZG /\
    proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
    proofLookupGrandProductOpeningAtZOmega{2} =
    proofLookupGrandProductOpeningAtZOmegaG /\
    proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
    proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
    proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
    proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
    proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
    proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
   to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
   to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
   to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
   to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
   to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
   to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
   to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
   to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
   to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
   to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
   to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
   proofCopyPermutationGrandProductXG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
   proofCopyPermutationGrandProductYG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
   proofLookupGrandProductXG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
   proofLookupGrandProductYG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
   proofQuotientPolyParts0XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
   proofQuotientPolyParts0YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
   proofQuotientPolyParts1XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
   proofQuotientPolyParts1YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
   proofQuotientPolyParts2XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
   proofQuotientPolyParts2YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
   proofQuotientPolyParts3XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
   proofQuotientPolyParts3YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
   proofQuotientPolyOpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
   proofStatePolys0OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
   proofStatePolys1OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
   proofStatePolys2OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
   proofStatePolys3OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
   proofStatePolys3OpeningAtZOmegaG /\
   to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
   proofGateSelectors0OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys0OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys1OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys2OpeningAtZG /\
   to_uint
     (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
   proofLookupTPolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
   proofLookupSelectorPolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
   proofLookupTableTypePolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupSPolyOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupGrandProductOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupTPolyOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
   proofLinearisationPolyOpeningAtZG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
   proofOpeningProofAtZOmegaXG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
   proofOpeningProofAtZOmegaYG /\
   !Primops.reverted{1} /\
   _2{1} = (of_int publicInputG)%W256 /\
   _4{1} = (of_int proofStatePolys0XG)%W256 /\
   _6{1} = (of_int proofStatePolys0YG)%W256 /\
   _8{1} = (of_int proofStatePolys1XG)%W256 /\
   _10{1} = (of_int proofStatePolys1YG)%W256 /\
   _12{1} = (of_int proofStatePolys2XG)%W256 /\
   _14{1} = (of_int proofStatePolys2YG)%W256 /\
   _16{1} = (of_int proofStatePolys3XG)%W256 /\
   _18{1} = (of_int proofStatePolys3YG)%W256 /\
   Primops.memory{1} = m9 /\
   0 <= state0_8{2} < W256.modulus /\ 0 <= state1_8{2} < W256.modulus /\
   W256.to_uint (mload m9 TRANSCRIPT_STATE_0_SLOT) = state0_8{2} /\
   W256.to_uint (mload m9 TRANSCRIPT_STATE_1_SLOT) = state1_8{2}  
).
skip; progress;
rewrite /m9 /m8 /m7 /m6 /m5 /m4 /m3 /m2 /m1 /updateTranscript_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT /PROOF_STATE_POLYS_1_X_SLOT
        /PROOF_STATE_POLYS_1_Y_SLOT /PROOF_STATE_POLYS_2_X_SLOT /PROOF_STATE_POLYS_2_Y_SLOT
        /PROOF_STATE_POLYS_3_X_SLOT /PROOF_STATE_POLYS_3_Y_SLOT.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.

seq 1 1:(
  s0_8 = state0_8{2} /\ s1_8 = state1_8{2} /\
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  (0 <= state0_8{2} && state0_8{2} < W256.modulus) /\ (0 <= state1_8{2} && state1_8{2} < W256.modulus) /\
  (0 <= stateEta{2} < 2^253) /\
  Primops.memory{1} = getTranscriptChallenge_memory_footprint m9 0
).
call (getTranscriptChallenge_low_equiv_mid m9 s0_8 s1_8 0).
skip. progress.

exists* _20{1}; elim*=> sEta.
pose m10 := getTranscriptChallenge_memory_footprint m9 0.
pose m11 := mstore m10 STATE_ETA_SLOT sEta.
seq 1 0:(
  s0_8 = state0_8{2} /\ s1_8 = state1_8{2} /\
  (initialS0{2} = initialS0G /\ sEta = _20{1} /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  (0 <= state0_8{2} && state0_8{2} < W256.modulus) /\ (0 <= state1_8{2} && state1_8{2} < W256.modulus) /\
  (0 <= stateEta{2} < 2^253) /\
  Primops.memory{1} = m11
).
call{1} (ConcretePrimops.mstore_pspec m10 STATE_ETA_SLOT sEta).
skip. progress.

seq 1 0:(
  s0_8 = state0_8{2} /\ s1_8 = state1_8{2} /\
  (initialS0{2} = initialS0G /\ sEta = _20{1} /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\  
  (0 <= state0_8{2} && state0_8{2} < W256.modulus) /\ 
  (0 <= state1_8{2} && state1_8{2} < W256.modulus) /\
  (0 <= stateEta{2} < 2^253) /\
  Primops.memory{1} = m11 /\
  W256.to_uint (mload m11 TRANSCRIPT_STATE_0_SLOT) = state0_8{2} /\
  W256.to_uint (mload m11 TRANSCRIPT_STATE_1_SLOT) = state1_8{2}  
).
call{1} (ConcretePrimops.mload_pspec m11 PROOF_LOOKUP_S_POLY_X_SLOT).
skip. progress;
rewrite /m11 /m10 /m9 /m8 /m7 /m6 /m5 /m4 /m3 /m2 /m1 /getTranscriptChallenge_memory_footprint /updateTranscript_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT /PROOF_STATE_POLYS_1_X_SLOT
        /PROOF_STATE_POLYS_1_Y_SLOT /PROOF_STATE_POLYS_2_X_SLOT /PROOF_STATE_POLYS_2_Y_SLOT
        /PROOF_STATE_POLYS_3_X_SLOT /PROOF_STATE_POLYS_3_Y_SLOT /PROOF_LOOKUP_S_POLY_X_SLOT
        /STATE_ETA_SLOT;
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.

rewrite load_store8_diff; simplify. smt().
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.

rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.

seq 1 1:(
  s0_8 = state0_8{2} /\
  s1_8 = state1_8{2} /\
  (initialS0{2} = initialS0G /\ sEta = _20{1} /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  (0 <= state0_9{2} && state0_9{2} < W256.modulus) /\
  (0 <= state1_9{2} && state1_9{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  Primops.memory{1} = updateTranscript_memory_footprint m11 _23{1} (W256.of_int state0_9{2}) (W256.of_int state1_9{2})
).
call (updateTranscript_low_equiv_mid m11 s0_8 s1_8 proofLookupSPolyXG).
skip. progress.

exists* state0_9{2}, state1_9{2}. elim*=> s0_9 s1_9.
pose m12 := updateTranscript_memory_footprint m11 (of_int proofLookupSPolyXG)%W256 (W256.of_int s0_9) (W256.of_int s1_9).
seq 1 0:(
  s0_9 = state0_9{2} /\ s1_9 = state1_9{2} /\
  (initialS0{2} = initialS0G /\ sEta = _20{1} /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  (0 <= state0_9{2} && state0_9{2} < W256.modulus) /\ 
  (0 <= state1_9{2} && state1_9{2} < W256.modulus) /\
  (0 <= stateEta{2} < 2^253) /\
  Primops.memory{1} = m12 /\
  W256.to_uint (mload m12 TRANSCRIPT_STATE_0_SLOT) = state0_9{2} /\
  W256.to_uint (mload m12 TRANSCRIPT_STATE_1_SLOT) = state1_9{2}  
).
call{1} (ConcretePrimops.mload_pspec m12 PROOF_LOOKUP_S_POLY_Y_SLOT).
skip. progress;
rewrite /m12 /m11 /m10 /m9 /m8 /m7 /m6 /m5 /m4 /m3 /m2 /m1 /getTranscriptChallenge_memory_footprint /updateTranscript_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT /PROOF_STATE_POLYS_1_X_SLOT
        /PROOF_STATE_POLYS_1_Y_SLOT /PROOF_STATE_POLYS_2_X_SLOT /PROOF_STATE_POLYS_2_Y_SLOT
        /PROOF_STATE_POLYS_3_X_SLOT /PROOF_STATE_POLYS_3_Y_SLOT /PROOF_LOOKUP_S_POLY_X_SLOT
        /PROOF_LOOKUP_S_POLY_Y_SLOT /STATE_ETA_SLOT.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.

rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.

seq 1 1:(
  s0_9 = state0_9{2} /\
  s1_9 = state1_9{2} /\
  (initialS0{2} = initialS0G /\ sEta = _20{1} /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  (0 <= state0_10{2} && state0_10{2} < W256.modulus) /\
  (0 <= state1_10{2} && state1_10{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  Primops.memory{1} = updateTranscript_memory_footprint m12 _25{1} (W256.of_int state0_10{2}) (W256.of_int state1_10{2})
).
call (updateTranscript_low_equiv_mid m12 s0_9 s1_9 proofLookupSPolyYG).
skip. progress.

exists* state0_10{2}, state1_10{2}. elim*=> s0_10 s1_10.
pose m13 := updateTranscript_memory_footprint m12 (of_int proofLookupSPolyYG)%W256 (W256.of_int s0_10) (W256.of_int s1_10).
seq 0 0: (
  s0_10 = state0_10{2} /\
  s1_10 = state1_10{2} /\
  (initialS0{2} = initialS0G /\ sEta = _20{1} /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  (0 <= state0_10{2} && state0_10{2} < W256.modulus) /\
  (0 <= state1_10{2} && state1_10{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  W256.to_uint (mload m13 TRANSCRIPT_STATE_0_SLOT) = state0_10{2} /\
  W256.to_uint (mload m13 TRANSCRIPT_STATE_1_SLOT) = state1_10{2} /\
  Primops.memory{1} = m13
).
skip; progress;
rewrite /m13 /m12 /m11 /m10 /m9 /m8 /m7 /m6 /m5 /m4 /m3 /m2 /m1 /getTranscriptChallenge_memory_footprint /updateTranscript_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT /PROOF_STATE_POLYS_1_X_SLOT
        /PROOF_STATE_POLYS_1_Y_SLOT /PROOF_STATE_POLYS_2_X_SLOT /PROOF_STATE_POLYS_2_Y_SLOT
        /PROOF_STATE_POLYS_3_X_SLOT /PROOF_STATE_POLYS_3_Y_SLOT /PROOF_LOOKUP_S_POLY_X_SLOT
        /PROOF_LOOKUP_S_POLY_Y_SLOT /STATE_ETA_SLOT.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.

seq 1 1:(
  s0_10 = state0_10{2} /\
  s1_10 = state1_10{2} /\
  (initialS0{2} = initialS0G /\ sEta = _20{1} /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  (0 <= state0_10{2} && state0_10{2} < W256.modulus) /\
  (0 <= state1_10{2} && state1_10{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\ (0 <= stateBeta{2} < 2^253) /\
  W256.to_uint (mload m13 TRANSCRIPT_STATE_0_SLOT) = state0_10{2} /\
  W256.to_uint (mload m13 TRANSCRIPT_STATE_1_SLOT) = state1_10{2} /\
  Primops.memory{1} = getTranscriptChallenge_memory_footprint m13 1
).
call (getTranscriptChallenge_low_equiv_mid m13 s0_10 s1_10 1).
skip. progress.

exists* _27{1}; elim*=> sBeta.
pose m14 := getTranscriptChallenge_memory_footprint m13 1.
pose m15 := mstore m14 STATE_BETA_SLOT sBeta.
seq 1 0:(
  s0_10 = state0_10{2} /\
  s1_10 = state1_10{2} /\
  (initialS0{2} = initialS0G /\ sEta = _20{1} /\ sBeta = _27{1} /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  (0 <= state0_10{2} && state0_10{2} < W256.modulus) /\
  (0 <= state1_10{2} && state1_10{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\ (0 <= stateBeta{2} < 2^253) /\
  Primops.memory{1} = m15 /\
  W256.to_uint (mload m15 TRANSCRIPT_STATE_0_SLOT) = state0_10{2} /\
  W256.to_uint (mload m15 TRANSCRIPT_STATE_1_SLOT) = state1_10{2}
).
call{1} (ConcretePrimops.mstore_pspec m14 STATE_BETA_SLOT sBeta).
skip. progress;
rewrite /m15 /m14 /m13 /m12 /m11 /m10 /m9 /m8 /m7 /m6 /m5 /m4 /m3 /m2 /m1 /getTranscriptChallenge_memory_footprint /updateTranscript_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT /PROOF_STATE_POLYS_1_X_SLOT
        /PROOF_STATE_POLYS_1_Y_SLOT /PROOF_STATE_POLYS_2_X_SLOT /PROOF_STATE_POLYS_2_Y_SLOT
        /PROOF_STATE_POLYS_3_X_SLOT /PROOF_STATE_POLYS_3_Y_SLOT /PROOF_LOOKUP_S_POLY_X_SLOT
        /PROOF_LOOKUP_S_POLY_Y_SLOT /STATE_ETA_SLOT /STATE_BETA_SLOT /PROOF_STATE_POLYS_0_X_SLOT.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff; simplify. smt().
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.

seq 1 1:(
  s0_10 = state0_10{2} /\
  s1_10 = state1_10{2} /\
  (initialS0{2} = initialS0G /\ sEta = _20{1} /\ sBeta = _27{1} /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  (0 <= state0_10{2} && state0_10{2} < W256.modulus) /\
  (0 <= state1_10{2} && state1_10{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} < 2^253) /\
  (0 <= stateGamma{2} < 2^253) /\
  Primops.memory{1} = getTranscriptChallenge_memory_footprint m15 2
).
call (getTranscriptChallenge_low_equiv_mid m15 s0_10 s1_10 2).
skip. progress.

exists* _30{1}; elim*=> sGamma.
pose m16 := getTranscriptChallenge_memory_footprint m15 2.
pose m17 := mstore m16 STATE_GAMMA_SLOT sGamma.
seq 1 0:(
  s0_10 = state0_10{2} /\
  s1_10 = state1_10{2} /\
  (initialS0{2} = initialS0G /\ sEta = _20{1} /\ sBeta = _27{1} /\ sGamma = _30{1} /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  (0 <= state0_10{2} && state0_10{2} < W256.modulus) /\
  (0 <= state1_10{2} && state1_10{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\ 
  (0 <= stateBeta{2} < 2^253) /\
  (0 <= stateGamma{2} < 2^253) /\
  Primops.memory{1} = m17
).
call{1} (ConcretePrimops.mstore_pspec m16 STATE_GAMMA_SLOT sGamma).
skip. progress.

seq 1 0:(#pre /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  W256.to_uint (mload m17 TRANSCRIPT_STATE_0_SLOT) = state0_10{2} /\
  W256.to_uint (mload m17 TRANSCRIPT_STATE_1_SLOT) = state1_10{2}
).
call{1} (ConcretePrimops.mload_pspec m17 PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT).
skip; progress;
rewrite /m17 /m16 /m15 /m14 /m13 /m12 /m11 /m10 /m9 /m8 /m7 /m6 /m5 /m4 /m3 /m2 /m1 /getTranscriptChallenge_memory_footprint /updateTranscript_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT /PROOF_STATE_POLYS_1_X_SLOT
        /PROOF_STATE_POLYS_1_Y_SLOT /PROOF_STATE_POLYS_2_X_SLOT /PROOF_STATE_POLYS_2_Y_SLOT
        /PROOF_STATE_POLYS_3_X_SLOT /PROOF_STATE_POLYS_3_Y_SLOT /PROOF_LOOKUP_S_POLY_X_SLOT
        /PROOF_LOOKUP_S_POLY_Y_SLOT /STATE_ETA_SLOT /STATE_BETA_SLOT /PROOF_STATE_POLYS_0_X_SLOT
        /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT /STATE_GAMMA_SLOT.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify. 
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.

do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff; simplify. exists 1; by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff; simplify. exists 1; by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.

seq 1 1:(
   s0_10 = state0_10{2} /\
   s1_10 = state1_10{2} /\
   (initialS0{2} = initialS0G /\ sEta = _20{1} /\ sBeta = _27{1} /\ sGamma = _30{1} /\
    initialS1{2} = initialS1G /\
    publicInput{2} = publicInputG /\
    proofStatePolys0X{2} = proofStatePolys0XG /\
    proofStatePolys0Y{2} = proofStatePolys0YG /\
    proofStatePolys1X{2} = proofStatePolys1XG /\
    proofStatePolys1Y{2} = proofStatePolys1YG /\
    proofStatePolys2X{2} = proofStatePolys2XG /\
    proofStatePolys2Y{2} = proofStatePolys2YG /\
    proofStatePolys3X{2} = proofStatePolys3XG /\
    proofStatePolys3Y{2} = proofStatePolys3YG /\
    proofLookupSPolyX{2} = proofLookupSPolyXG /\
    proofLookupSPolyY{2} = proofLookupSPolyYG /\
    proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
    proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
    proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
    proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
    proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
    proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
    proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
    proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
    proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
    proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
    proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
    proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
    proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
    proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
    proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
    proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
    proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
    proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
    proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
    proofCopyPermutationPolys0OpeningAtZ{2} =
    proofCopyPermutationPolys0OpeningAtZG /\
    proofCopyPermutationPolys1OpeningAtZ{2} =
    proofCopyPermutationPolys1OpeningAtZG /\
    proofCopyPermutationPolys2OpeningAtZ{2} =
    proofCopyPermutationPolys2OpeningAtZG /\
    proofCopyPermutationGrandProductOpeningAtZOmega{2} =
    proofCopyPermutationGrandProductOpeningAtZOmegaG /\
    proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
    proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
    proofLookupTableTypePolyOpeningAtZ{2} =
    proofLookupTableTypePolyOpeningAtZG /\
    proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
    proofLookupGrandProductOpeningAtZOmega{2} =
    proofLookupGrandProductOpeningAtZOmegaG /\
    proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
    proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
    proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
    proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
    proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
    proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
   to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
   to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
   to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
   to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
   to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
   to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
   to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
   to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
   to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
   to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
   to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
   proofCopyPermutationGrandProductXG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
   proofCopyPermutationGrandProductYG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
   proofLookupGrandProductXG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
   proofLookupGrandProductYG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
   proofQuotientPolyParts0XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
   proofQuotientPolyParts0YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
   proofQuotientPolyParts1XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
   proofQuotientPolyParts1YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
   proofQuotientPolyParts2XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
   proofQuotientPolyParts2YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
   proofQuotientPolyParts3XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
   proofQuotientPolyParts3YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
   proofQuotientPolyOpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
   proofStatePolys0OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
   proofStatePolys1OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
   proofStatePolys2OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
   proofStatePolys3OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
   proofStatePolys3OpeningAtZOmegaG /\
   to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
   proofGateSelectors0OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys0OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys1OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys2OpeningAtZG /\
   to_uint
     (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
   proofLookupTPolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
   proofLookupSelectorPolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
   proofLookupTableTypePolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupSPolyOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupGrandProductOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupTPolyOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
   proofLinearisationPolyOpeningAtZG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
   proofOpeningProofAtZOmegaXG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
   proofOpeningProofAtZOmegaYG /\
   !Primops.reverted{1} /\
   _2{1} = (of_int publicInputG)%W256 /\
   _4{1} = (of_int proofStatePolys0XG)%W256 /\
   _6{1} = (of_int proofStatePolys0YG)%W256 /\
   _8{1} = (of_int proofStatePolys1XG)%W256 /\
   _10{1} = (of_int proofStatePolys1YG)%W256 /\
   _12{1} = (of_int proofStatePolys2XG)%W256 /\
   _14{1} = (of_int proofStatePolys2YG)%W256 /\
   _16{1} = (of_int proofStatePolys3XG)%W256 /\
   _18{1} = (of_int proofStatePolys3YG)%W256 /\
   _20{1} = (of_int stateEta{2})%W256 /\
   _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
   _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
   _27{1} = (of_int stateBeta{2})%W256 /\
   _30{1} = (of_int stateGamma{2})%W256 /\
   _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
   (0 <= state0_11{2} && state0_11{2} < W256.modulus) /\
   (0 <= state1_11{2} && state1_11{2} < W256.modulus) /\
   (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
   (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
   (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
   Primops.memory{1} = updateTranscript_memory_footprint m17 _33{1} (W256.of_int state0_11{2}) (W256.of_int state1_11{2})
).
call (updateTranscript_low_equiv_mid m17 s0_10 s1_10 proofCopyPermutationGrandProductXG).
skip. progress.

exists* state0_11{2}, state1_11{2}. elim*=> s0_11 s1_11.
pose m18 := updateTranscript_memory_footprint m17 (of_int proofCopyPermutationGrandProductXG)%W256 (W256.of_int s0_11) (W256.of_int s1_11).
seq 1 0:(
  s0_11 = state0_11{2} /\
  s1_11 = state1_11{2} /\
  (initialS0{2} = initialS0G /\ sEta = _20{1} /\ sBeta = _27{1} /\ sGamma = _30{1} /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  (0 <= state0_11{2} && state0_11{2} < W256.modulus) /\
  (0 <= state1_11{2} && state1_11{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  Primops.memory{1} = m18 /\
  W256.to_uint (mload m18 TRANSCRIPT_STATE_0_SLOT) = state0_11{2} /\
  W256.to_uint (mload m18 TRANSCRIPT_STATE_1_SLOT) = state1_11{2}  
).
call{1} (ConcretePrimops.mload_pspec m18 PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT).
skip; progress;
rewrite /m18 /m17 /m16 /m15 /m14 /m13 /m12 /m11 /m10 /m9 /m8 /m7 /m6 /m5 /m4 /m3 /m2 /m1 /getTranscriptChallenge_memory_footprint /updateTranscript_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT /PROOF_STATE_POLYS_1_X_SLOT
        /PROOF_STATE_POLYS_1_Y_SLOT /PROOF_STATE_POLYS_2_X_SLOT /PROOF_STATE_POLYS_2_Y_SLOT
        /PROOF_STATE_POLYS_3_X_SLOT /PROOF_STATE_POLYS_3_Y_SLOT /PROOF_LOOKUP_S_POLY_X_SLOT
        /PROOF_LOOKUP_S_POLY_Y_SLOT /STATE_ETA_SLOT /STATE_BETA_SLOT /PROOF_STATE_POLYS_0_X_SLOT
        /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT /STATE_GAMMA_SLOT.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify. 
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify. 
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.

rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.

seq 1 1:(
   s0_11 = state0_11{2} /\
   s1_11 = state1_11{2} /\
   (initialS0{2} = initialS0G /\ sEta = _20{1} /\ sBeta = _27{1} /\ sGamma = _30{1} /\
    initialS1{2} = initialS1G /\
    publicInput{2} = publicInputG /\
    proofStatePolys0X{2} = proofStatePolys0XG /\
    proofStatePolys0Y{2} = proofStatePolys0YG /\
    proofStatePolys1X{2} = proofStatePolys1XG /\
    proofStatePolys1Y{2} = proofStatePolys1YG /\
    proofStatePolys2X{2} = proofStatePolys2XG /\
    proofStatePolys2Y{2} = proofStatePolys2YG /\
    proofStatePolys3X{2} = proofStatePolys3XG /\
    proofStatePolys3Y{2} = proofStatePolys3YG /\
    proofLookupSPolyX{2} = proofLookupSPolyXG /\
    proofLookupSPolyY{2} = proofLookupSPolyYG /\
    proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
    proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
    proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
    proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
    proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
    proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
    proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
    proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
    proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
    proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
    proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
    proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
    proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
    proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
    proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
    proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
    proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
    proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
    proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
    proofCopyPermutationPolys0OpeningAtZ{2} =
    proofCopyPermutationPolys0OpeningAtZG /\
    proofCopyPermutationPolys1OpeningAtZ{2} =
    proofCopyPermutationPolys1OpeningAtZG /\
    proofCopyPermutationPolys2OpeningAtZ{2} =
    proofCopyPermutationPolys2OpeningAtZG /\
    proofCopyPermutationGrandProductOpeningAtZOmega{2} =
    proofCopyPermutationGrandProductOpeningAtZOmegaG /\
    proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
    proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
    proofLookupTableTypePolyOpeningAtZ{2} =
    proofLookupTableTypePolyOpeningAtZG /\
    proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
    proofLookupGrandProductOpeningAtZOmega{2} =
    proofLookupGrandProductOpeningAtZOmegaG /\
    proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
    proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
    proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
    proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
    proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
    proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
   to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
   to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
   to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
   to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
   to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
   to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
   to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
   to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
   to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
   to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
   to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
   proofCopyPermutationGrandProductXG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
   proofCopyPermutationGrandProductYG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
   proofLookupGrandProductXG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
   proofLookupGrandProductYG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
   proofQuotientPolyParts0XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
   proofQuotientPolyParts0YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
   proofQuotientPolyParts1XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
   proofQuotientPolyParts1YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
   proofQuotientPolyParts2XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
   proofQuotientPolyParts2YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
   proofQuotientPolyParts3XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
   proofQuotientPolyParts3YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
   proofQuotientPolyOpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
   proofStatePolys0OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
   proofStatePolys1OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
   proofStatePolys2OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
   proofStatePolys3OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
   proofStatePolys3OpeningAtZOmegaG /\
   to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
   proofGateSelectors0OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys0OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys1OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys2OpeningAtZG /\
   to_uint
     (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
   proofLookupTPolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
   proofLookupSelectorPolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
   proofLookupTableTypePolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupSPolyOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupGrandProductOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupTPolyOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
   proofLinearisationPolyOpeningAtZG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
   proofOpeningProofAtZOmegaXG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
   proofOpeningProofAtZOmegaYG /\
   !Primops.reverted{1} /\
   _2{1} = (of_int publicInputG)%W256 /\
   _4{1} = (of_int proofStatePolys0XG)%W256 /\
   _6{1} = (of_int proofStatePolys0YG)%W256 /\
   _8{1} = (of_int proofStatePolys1XG)%W256 /\
   _10{1} = (of_int proofStatePolys1YG)%W256 /\
   _12{1} = (of_int proofStatePolys2XG)%W256 /\
   _14{1} = (of_int proofStatePolys2YG)%W256 /\
   _16{1} = (of_int proofStatePolys3XG)%W256 /\
   _18{1} = (of_int proofStatePolys3YG)%W256 /\
   _20{1} = (of_int stateEta{2})%W256 /\
   _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
   _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
   _27{1} = (of_int stateBeta{2})%W256 /\
   _30{1} = (of_int stateGamma{2})%W256 /\
   _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
   _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
   (0 <= state0_12{2} && state0_12{2} < W256.modulus) /\
   (0 <= state1_12{2} && state1_12{2} < W256.modulus) /\
   (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
   (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
   (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
   Primops.memory{1} = updateTranscript_memory_footprint m18 _35{1} (W256.of_int state0_12{2}) (W256.of_int state1_12{2})
).
call (updateTranscript_low_equiv_mid m18 s0_11 s1_11 proofCopyPermutationGrandProductYG).
skip. progress.

exists* state0_12{2}, state1_12{2}. elim*=> s0_12 s1_12.
pose m19 := updateTranscript_memory_footprint m18 (of_int proofCopyPermutationGrandProductYG)%W256 (W256.of_int s0_12) (W256.of_int s1_12).
seq 0 0: (
  s0_12 = state0_12{2} /\
  s1_12 = state1_12{2} /\
  (initialS0{2} = initialS0G /\ sEta = _20{1} /\ sBeta = _27{1} /\ sGamma = _30{1} /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  (0 <= state0_12{2} && state0_12{2} < W256.modulus) /\
  (0 <= state1_12{2} && state1_12{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  W256.to_uint (mload m19 TRANSCRIPT_STATE_0_SLOT) = state0_12{2} /\
  W256.to_uint (mload m19 TRANSCRIPT_STATE_1_SLOT) = state1_12{2} /\
  Primops.memory{1} = m19
).
skip; progress;
rewrite /m19 /m18 /m17 /m16 /m15 /m14 /m13 /m12 /m11 /m10 /m9 /m8 /m7 /m6 /m5 /m4 /m3 /m2 /m1 /getTranscriptChallenge_memory_footprint /updateTranscript_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT /PROOF_STATE_POLYS_1_X_SLOT
        /PROOF_STATE_POLYS_1_Y_SLOT /PROOF_STATE_POLYS_2_X_SLOT /PROOF_STATE_POLYS_2_Y_SLOT
        /PROOF_STATE_POLYS_3_X_SLOT /PROOF_STATE_POLYS_3_Y_SLOT /PROOF_LOOKUP_S_POLY_X_SLOT
        /PROOF_LOOKUP_S_POLY_Y_SLOT /STATE_ETA_SLOT /STATE_BETA_SLOT /PROOF_STATE_POLYS_0_X_SLOT
        /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT /STATE_GAMMA_SLOT.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.

seq 1 1: (
  s0_12 = state0_12{2} /\
  s1_12 = state1_12{2} /\
  (initialS0{2} = initialS0G /\ sEta = _20{1} /\ sBeta = _27{1} /\ sGamma = _30{1} /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  (0 <= state0_12{2} && state0_12{2} < W256.modulus) /\
  (0 <= state1_12{2} && state1_12{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\ 
  W256.to_uint (mload m19 TRANSCRIPT_STATE_0_SLOT) = state0_12{2} /\
  W256.to_uint (mload m19 TRANSCRIPT_STATE_1_SLOT) = state1_12{2} /\
  Primops.memory{1} = getTranscriptChallenge_memory_footprint m19 3
).
call (getTranscriptChallenge_low_equiv_mid m19 s0_12 s1_12 3).
skip. progress.

exists* _37{1}; elim*=> sBetaLookup.
pose m20 := getTranscriptChallenge_memory_footprint m19 3.
pose m21 := mstore m20 STATE_BETA_LOOKUP_SLOT sBetaLookup.
seq 1 0:(
  s0_12 = state0_12{2} /\
  s1_12 = state1_12{2} /\
  sEta = _20{1} /\ sBeta = _27{1} /\ 
  sGamma = _30{1} /\ sBetaLookup = _37{1} /\
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  (0 <= state0_12{2} && state0_12{2} < W256.modulus) /\
  (0 <= state1_12{2} && state1_12{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  W256.to_uint (mload m21 TRANSCRIPT_STATE_0_SLOT) = state0_12{2} /\
  W256.to_uint (mload m21 TRANSCRIPT_STATE_1_SLOT) = state1_12{2} /\
  Primops.memory{1} = m21
).
call{1} (ConcretePrimops.mstore_pspec m20 STATE_BETA_LOOKUP_SLOT sBetaLookup).
skip; progress;
rewrite /m21 /m20 /m19 /m18 /m17 /m16 /m15 /m14 /m13 /m12 /m11 /m10 /m9 /m8 /m7 /m6 /m5 /m4 /m3 /m2 /m1 /getTranscriptChallenge_memory_footprint /updateTranscript_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT /PROOF_STATE_POLYS_1_X_SLOT
        /PROOF_STATE_POLYS_1_Y_SLOT /PROOF_STATE_POLYS_2_X_SLOT /PROOF_STATE_POLYS_2_Y_SLOT
        /PROOF_STATE_POLYS_3_X_SLOT /PROOF_STATE_POLYS_3_Y_SLOT /PROOF_LOOKUP_S_POLY_X_SLOT
        /PROOF_LOOKUP_S_POLY_Y_SLOT /STATE_ETA_SLOT /STATE_BETA_SLOT /PROOF_STATE_POLYS_0_X_SLOT
        /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT /STATE_GAMMA_SLOT
        /STATE_BETA_LOOKUP_SLOT.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff; try (exists 1; by simplify).
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.

seq 1 1:(
  s0_12 = state0_12{2} /\
  s1_12 = state1_12{2} /\
  sEta = _20{1} /\ sBeta = _27{1} /\ 
  sGamma = _30{1} /\ sBetaLookup = _37{1} /\
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  (0 <= state0_12{2} && state0_12{2} < W256.modulus) /\
  (0 <= state1_12{2} && state1_12{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  Primops.memory{1} = getTranscriptChallenge_memory_footprint m21 4
).
call (getTranscriptChallenge_low_equiv_mid m21 s0_12 s1_12 4).
skip. progress.

exists* _40{1}; elim*=> sGammaLookup.
pose m22 := getTranscriptChallenge_memory_footprint m21 4.
pose m23 := mstore m22 STATE_GAMMA_LOOKUP_SLOT sGammaLookup.
seq 1 0:(
  sGammaLookup = _40{1} /\
  s0_12 = state0_12{2} /\
  s1_12 = state1_12{2} /\
  sEta = _20{1} /\
  sBeta = _27{1} /\
  sGamma = _30{1} /\
  sBetaLookup = _37{1} /\ sGammaLookup = _40{1} /\
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  (0 <= state0_12{2} && state0_12{2} < W256.modulus) /\
  (0 <= state1_12{2} && state1_12{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  W256.to_uint (mload m23 TRANSCRIPT_STATE_0_SLOT) = state0_12{2} /\
  W256.to_uint (mload m23 TRANSCRIPT_STATE_1_SLOT) = state1_12{2} /\
  Primops.memory{1} = m23
).
call{1} (ConcretePrimops.mstore_pspec m22 STATE_GAMMA_LOOKUP_SLOT sGammaLookup).
skip; progress;
rewrite /m23 /m22 /m21 /m20 /m19 /m18 /m17 /m16 /m15 /m14 /m13 /m12 /m11 /m10 /m9 /m8 /m7 /m6 /m5 /m4 /m3 /m2 /m1 /getTranscriptChallenge_memory_footprint /updateTranscript_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT /PROOF_STATE_POLYS_1_X_SLOT
        /PROOF_STATE_POLYS_1_Y_SLOT /PROOF_STATE_POLYS_2_X_SLOT /PROOF_STATE_POLYS_2_Y_SLOT
        /PROOF_STATE_POLYS_3_X_SLOT /PROOF_STATE_POLYS_3_Y_SLOT /PROOF_LOOKUP_S_POLY_X_SLOT
        /PROOF_LOOKUP_S_POLY_Y_SLOT /STATE_ETA_SLOT /STATE_BETA_SLOT /PROOF_STATE_POLYS_0_X_SLOT
        /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT /STATE_GAMMA_SLOT
        /STATE_BETA_LOOKUP_SLOT /STATE_GAMMA_LOOKUP_SLOT.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff; try (exists 1; by simplify).
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff; try (exists 1; by simplify).
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.

seq 1 0: (#pre /\ _43{1} = (of_int proofLookupGrandProductX{2})%W256).
call{1} (ConcretePrimops.mload_pspec m23 PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT).
skip; progress;
rewrite /m23 /m22 /m21 /m20 /m19 /m18 /m17 /m16 /m15 /m14 /m13 /m12 /m11 /m10 /m9 /m8 /m7 /m6 /m5 /m4 /m3 /m2 /m1 /getTranscriptChallenge_memory_footprint /updateTranscript_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT /PROOF_STATE_POLYS_1_X_SLOT
        /PROOF_STATE_POLYS_1_Y_SLOT /PROOF_STATE_POLYS_2_X_SLOT /PROOF_STATE_POLYS_2_Y_SLOT
        /PROOF_STATE_POLYS_3_X_SLOT /PROOF_STATE_POLYS_3_Y_SLOT /PROOF_LOOKUP_S_POLY_X_SLOT
        /PROOF_LOOKUP_S_POLY_Y_SLOT /STATE_ETA_SLOT /STATE_BETA_SLOT /PROOF_STATE_POLYS_0_X_SLOT
        /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT /STATE_GAMMA_SLOT
        /STATE_BETA_LOOKUP_SLOT /STATE_GAMMA_LOOKUP_SLOT /PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.  
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.

seq 1 1:(
   s0_12 = state0_12{2} /\
   s1_12 = state1_12{2} /\
   sEta = _20{1} /\
   sBeta = _27{1} /\
   sGamma = _30{1} /\
   sBetaLookup = _37{1} /\
   sGammaLookup = _40{1} /\
   (initialS0{2} = initialS0G /\
    initialS1{2} = initialS1G /\
    publicInput{2} = publicInputG /\
    proofStatePolys0X{2} = proofStatePolys0XG /\
    proofStatePolys0Y{2} = proofStatePolys0YG /\
    proofStatePolys1X{2} = proofStatePolys1XG /\
    proofStatePolys1Y{2} = proofStatePolys1YG /\
    proofStatePolys2X{2} = proofStatePolys2XG /\
    proofStatePolys2Y{2} = proofStatePolys2YG /\
    proofStatePolys3X{2} = proofStatePolys3XG /\
    proofStatePolys3Y{2} = proofStatePolys3YG /\
    proofLookupSPolyX{2} = proofLookupSPolyXG /\
    proofLookupSPolyY{2} = proofLookupSPolyYG /\
    proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
    proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
    proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
    proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
    proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
    proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
    proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
    proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
    proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
    proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
    proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
    proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
    proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
    proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
    proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
    proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
    proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
    proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
    proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
    proofCopyPermutationPolys0OpeningAtZ{2} =
    proofCopyPermutationPolys0OpeningAtZG /\
    proofCopyPermutationPolys1OpeningAtZ{2} =
    proofCopyPermutationPolys1OpeningAtZG /\
    proofCopyPermutationPolys2OpeningAtZ{2} =
    proofCopyPermutationPolys2OpeningAtZG /\
    proofCopyPermutationGrandProductOpeningAtZOmega{2} =
    proofCopyPermutationGrandProductOpeningAtZOmegaG /\
    proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
    proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
    proofLookupTableTypePolyOpeningAtZ{2} =
    proofLookupTableTypePolyOpeningAtZG /\
    proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
    proofLookupGrandProductOpeningAtZOmega{2} =
    proofLookupGrandProductOpeningAtZOmegaG /\
    proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
    proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
    proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
    proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
    proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
    proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
   to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
   to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
   to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
   to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
   to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
   to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
   to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
   to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
   to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
   to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
   to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
   proofCopyPermutationGrandProductXG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
   proofCopyPermutationGrandProductYG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
   proofLookupGrandProductXG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
   proofLookupGrandProductYG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
   proofQuotientPolyParts0XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
   proofQuotientPolyParts0YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
   proofQuotientPolyParts1XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
   proofQuotientPolyParts1YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
   proofQuotientPolyParts2XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
   proofQuotientPolyParts2YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
   proofQuotientPolyParts3XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
   proofQuotientPolyParts3YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
   proofQuotientPolyOpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
   proofStatePolys0OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
   proofStatePolys1OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
   proofStatePolys2OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
   proofStatePolys3OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
   proofStatePolys3OpeningAtZOmegaG /\
   to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
   proofGateSelectors0OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys0OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys1OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys2OpeningAtZG /\
   to_uint
     (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
   proofLookupTPolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
   proofLookupSelectorPolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
   proofLookupTableTypePolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupSPolyOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupGrandProductOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupTPolyOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
   proofLinearisationPolyOpeningAtZG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
   proofOpeningProofAtZOmegaXG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
   proofOpeningProofAtZOmegaYG /\
   !Primops.reverted{1} /\
   _2{1} = (of_int publicInputG)%W256 /\
   _4{1} = (of_int proofStatePolys0XG)%W256 /\
   _6{1} = (of_int proofStatePolys0YG)%W256 /\
   _8{1} = (of_int proofStatePolys1XG)%W256 /\
   _10{1} = (of_int proofStatePolys1YG)%W256 /\
   _12{1} = (of_int proofStatePolys2XG)%W256 /\
   _14{1} = (of_int proofStatePolys2YG)%W256 /\
   _16{1} = (of_int proofStatePolys3XG)%W256 /\
   _18{1} = (of_int proofStatePolys3YG)%W256 /\
   _20{1} = (of_int stateEta{2})%W256 /\
   _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
   _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
   _27{1} = (of_int stateBeta{2})%W256 /\
   _30{1} = (of_int stateGamma{2})%W256 /\
   _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
   _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
   _37{1} = (of_int stateBetaLookup{2})%W256 /\
   _40{1} = (of_int stateGammaLookup{2})%W256 /\
   _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
   (0 <= state0_13{2} && state0_13{2} < W256.modulus) /\
   (0 <= state1_13{2} && state1_13{2} < W256.modulus) /\
   (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
   (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
   (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
   (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
   (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
   Primops.memory{1} = updateTranscript_memory_footprint m23 _43{1} (W256.of_int state0_13{2}) (W256.of_int state1_13{2})
).
call (updateTranscript_low_equiv_mid m23 s0_12 s1_12 proofLookupGrandProductXG).
skip. progress.

exists* state0_13{2}, state1_13{2}. elim*=> s0_13 s1_13.
pose m24 := updateTranscript_memory_footprint m23 (of_int proofLookupGrandProductXG)%W256 (W256.of_int s0_13) (W256.of_int s1_13).
seq 1 0:(
   s0_13 = state0_13{2} /\
   s1_13 = state1_13{2} /\
   sEta = _20{1} /\
   sBeta = _27{1} /\
   sGamma = _30{1} /\
   sBetaLookup = _37{1} /\
   sGammaLookup = _40{1} /\
   (initialS0{2} = initialS0G /\
    initialS1{2} = initialS1G /\
    publicInput{2} = publicInputG /\
    proofStatePolys0X{2} = proofStatePolys0XG /\
    proofStatePolys0Y{2} = proofStatePolys0YG /\
    proofStatePolys1X{2} = proofStatePolys1XG /\
    proofStatePolys1Y{2} = proofStatePolys1YG /\
    proofStatePolys2X{2} = proofStatePolys2XG /\
    proofStatePolys2Y{2} = proofStatePolys2YG /\
    proofStatePolys3X{2} = proofStatePolys3XG /\
    proofStatePolys3Y{2} = proofStatePolys3YG /\
    proofLookupSPolyX{2} = proofLookupSPolyXG /\
    proofLookupSPolyY{2} = proofLookupSPolyYG /\
    proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
    proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
    proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
    proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
    proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
    proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
    proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
    proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
    proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
    proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
    proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
    proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
    proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
    proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
    proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
    proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
    proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
    proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
    proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
    proofCopyPermutationPolys0OpeningAtZ{2} =
    proofCopyPermutationPolys0OpeningAtZG /\
    proofCopyPermutationPolys1OpeningAtZ{2} =
    proofCopyPermutationPolys1OpeningAtZG /\
    proofCopyPermutationPolys2OpeningAtZ{2} =
    proofCopyPermutationPolys2OpeningAtZG /\
    proofCopyPermutationGrandProductOpeningAtZOmega{2} =
    proofCopyPermutationGrandProductOpeningAtZOmegaG /\
    proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
    proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
    proofLookupTableTypePolyOpeningAtZ{2} =
    proofLookupTableTypePolyOpeningAtZG /\
    proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
    proofLookupGrandProductOpeningAtZOmega{2} =
    proofLookupGrandProductOpeningAtZOmegaG /\
    proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
    proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
    proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
    proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
    proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
    proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
   to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
   to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
   to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
   to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
   to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
   to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
   to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
   to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
   to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
   to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
   to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
   proofCopyPermutationGrandProductXG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
   proofCopyPermutationGrandProductYG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
   proofLookupGrandProductXG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
   proofLookupGrandProductYG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
   proofQuotientPolyParts0XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
   proofQuotientPolyParts0YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
   proofQuotientPolyParts1XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
   proofQuotientPolyParts1YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
   proofQuotientPolyParts2XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
   proofQuotientPolyParts2YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
   proofQuotientPolyParts3XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
   proofQuotientPolyParts3YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
   proofQuotientPolyOpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
   proofStatePolys0OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
   proofStatePolys1OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
   proofStatePolys2OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
   proofStatePolys3OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
   proofStatePolys3OpeningAtZOmegaG /\
   to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
   proofGateSelectors0OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys0OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys1OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys2OpeningAtZG /\
   to_uint
     (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
   proofLookupTPolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
   proofLookupSelectorPolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
   proofLookupTableTypePolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupSPolyOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupGrandProductOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupTPolyOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
   proofLinearisationPolyOpeningAtZG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
   proofOpeningProofAtZOmegaXG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
   proofOpeningProofAtZOmegaYG /\
   !Primops.reverted{1} /\
   _2{1} = (of_int publicInputG)%W256 /\
   _4{1} = (of_int proofStatePolys0XG)%W256 /\
   _6{1} = (of_int proofStatePolys0YG)%W256 /\
   _8{1} = (of_int proofStatePolys1XG)%W256 /\
   _10{1} = (of_int proofStatePolys1YG)%W256 /\
   _12{1} = (of_int proofStatePolys2XG)%W256 /\
   _14{1} = (of_int proofStatePolys2YG)%W256 /\
   _16{1} = (of_int proofStatePolys3XG)%W256 /\
   _18{1} = (of_int proofStatePolys3YG)%W256 /\
   _20{1} = (of_int stateEta{2})%W256 /\
   _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
   _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
   _27{1} = (of_int stateBeta{2})%W256 /\
   _30{1} = (of_int stateGamma{2})%W256 /\
   _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
   _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
   _37{1} = (of_int stateBetaLookup{2})%W256 /\
   _40{1} = (of_int stateGammaLookup{2})%W256 /\
   _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
   _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
   (0 <= state0_13{2} && state0_13{2} < W256.modulus) /\
   (0 <= state1_13{2} && state1_13{2} < W256.modulus) /\
   (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
   (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
   (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
   (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
   (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
   W256.to_uint (mload m24 TRANSCRIPT_STATE_0_SLOT) = state0_13{2} /\
   W256.to_uint (mload m24 TRANSCRIPT_STATE_1_SLOT) = state1_13{2} /\
   Primops.memory{1} = m24
).
call{1} (ConcretePrimops.mload_pspec m24 PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT).
skip; progress;
rewrite /m24 /m23 /m22 /m21 /m20 /m19 /m18 /m17 /m16 /m15 /m14 /m13 /m12 /m11 /m10 /m9 /m8 /m7 /m6 /m5 /m4 /m3 /m2 /m1 /getTranscriptChallenge_memory_footprint /updateTranscript_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT /PROOF_STATE_POLYS_1_X_SLOT
        /PROOF_STATE_POLYS_1_Y_SLOT /PROOF_STATE_POLYS_2_X_SLOT /PROOF_STATE_POLYS_2_Y_SLOT
        /PROOF_STATE_POLYS_3_X_SLOT /PROOF_STATE_POLYS_3_Y_SLOT /PROOF_LOOKUP_S_POLY_X_SLOT
        /PROOF_LOOKUP_S_POLY_Y_SLOT /STATE_ETA_SLOT /STATE_BETA_SLOT /PROOF_STATE_POLYS_0_X_SLOT
        /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT /STATE_GAMMA_SLOT
        /STATE_BETA_LOOKUP_SLOT /STATE_GAMMA_LOOKUP_SLOT /PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT
        /PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.  
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify. 
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.

rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.

seq 1 1:(
  s0_13 = state0_13{2} /\
  s1_13 = state1_13{2} /\
  sEta = _20{1} /\
  sBeta = _27{1} /\
  sGamma = _30{1} /\
  sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  (0 <= state0_14{2} && state0_14{2} < W256.modulus) /\
  (0 <= state1_14{2} && state1_14{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  Primops.memory{1} = updateTranscript_memory_footprint m24 _45{1} (W256.of_int state0_14{2}) (W256.of_int state1_14{2})
).
call (updateTranscript_low_equiv_mid m24 s0_13 s1_13 proofLookupGrandProductYG).
skip. progress.

exists* state0_14{2}, state1_14{2}. elim*=> s0_14 s1_14.
pose m25 := updateTranscript_memory_footprint m24 (of_int proofLookupGrandProductYG)%W256  (W256.of_int s0_14) (W256.of_int s1_14).
seq 0 0:(
  s0_14 = state0_14{2} /\ s1_14 = state1_14{2} /\
  sEta = _20{1} /\
  sBeta = _27{1} /\
  sGamma = _30{1} /\
  sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  (0 <= state0_14{2} && state0_14{2} < W256.modulus) /\
  (0 <= state1_14{2} && state1_14{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  Primops.memory{1} = m25 /\
  W256.to_uint (mload m25 TRANSCRIPT_STATE_0_SLOT) = state0_14{2} /\
  W256.to_uint (mload m25 TRANSCRIPT_STATE_1_SLOT) = state1_14{2}
).
skip; progress;
rewrite /m25 /m24 /m23 /m22 /m21 /m20 /m19 /m18 /m17 /m16 /m15 /m14 /m13 /m12 /m11 /m10 /m9 /m8 /m7 /m6 /m5 /m4 /m3 /m2 /m1 /getTranscriptChallenge_memory_footprint /updateTranscript_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT /PROOF_STATE_POLYS_1_X_SLOT
        /PROOF_STATE_POLYS_1_Y_SLOT /PROOF_STATE_POLYS_2_X_SLOT /PROOF_STATE_POLYS_2_Y_SLOT
        /PROOF_STATE_POLYS_3_X_SLOT /PROOF_STATE_POLYS_3_Y_SLOT /PROOF_LOOKUP_S_POLY_X_SLOT
        /PROOF_LOOKUP_S_POLY_Y_SLOT /STATE_ETA_SLOT /STATE_BETA_SLOT /PROOF_STATE_POLYS_0_X_SLOT
        /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT /STATE_GAMMA_SLOT
        /STATE_BETA_LOOKUP_SLOT /STATE_GAMMA_LOOKUP_SLOT /PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT
        /PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.

seq 1 1:(

  s0_14 = state0_14{2} /\
  s1_14 = state1_14{2} /\
  sEta = _20{1} /\
  sBeta = _27{1} /\
  sGamma = _30{1} /\
  sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  (0 <= state0_14{2} && state0_14{2} < W256.modulus) /\
  (0 <= state1_14{2} && state1_14{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  Primops.memory{1} = getTranscriptChallenge_memory_footprint m25 5
).
call (getTranscriptChallenge_low_equiv_mid m25 s0_14 s1_14 5).
skip. progress.

exists* _47{1}; elim*=> sAlpha.
pose m26 := getTranscriptChallenge_memory_footprint m25 5.
pose m27 := mstore m26 STATE_ALPHA_SLOT sAlpha.
seq 1 0:(
  s0_14 = state0_14{2} /\
  s1_14 = state1_14{2} /\
  sEta = _20{1} /\
  sBeta = _27{1} /\
  sGamma = _30{1} /\
  sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\
  sAlpha = _47{1} /\
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  (0 <= state0_14{2} && state0_14{2} < W256.modulus) /\
  (0 <= state1_14{2} && state1_14{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  W256.to_uint (mload m27 TRANSCRIPT_STATE_0_SLOT) = state0_14{2} /\
  W256.to_uint (mload m27 TRANSCRIPT_STATE_1_SLOT) = state1_14{2} /\
  Primops.memory{1} = m27
).
call{1} (ConcretePrimops.mstore_pspec m26 STATE_ALPHA_SLOT sAlpha).
skip; progress;
rewrite /m27 /m26 /m25 /m24 /m23 /m22 /m21 /m20 /m19 /m18 /m17 /m16 /m15 /m14 /m13 /m12 /m11 /m10 /m9 /m8 /m7 /m6 /m5 /m4 /m3 /m2 /m1 /getTranscriptChallenge_memory_footprint /updateTranscript_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT /PROOF_STATE_POLYS_1_X_SLOT
        /PROOF_STATE_POLYS_1_Y_SLOT /PROOF_STATE_POLYS_2_X_SLOT /PROOF_STATE_POLYS_2_Y_SLOT
        /PROOF_STATE_POLYS_3_X_SLOT /PROOF_STATE_POLYS_3_Y_SLOT /PROOF_LOOKUP_S_POLY_X_SLOT
        /PROOF_LOOKUP_S_POLY_Y_SLOT /STATE_ETA_SLOT /STATE_BETA_SLOT /PROOF_STATE_POLYS_0_X_SLOT
        /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT /STATE_GAMMA_SLOT
        /STATE_BETA_LOOKUP_SLOT /STATE_GAMMA_LOOKUP_SLOT /PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT
        /PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT /STATE_ALPHA_SLOT.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff; try (exists 1; by simplify).
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.

seq 1 0:(#pre /\ _50{1} = (of_int proofQuotientPolyParts0X{2})%W256).
call{1} (ConcretePrimops.mload_pspec m27 PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT).
skip; progress;
rewrite /m27 /m26 /m25 /m24 /m23 /m22 /m21 /m20 /m19 /m18 /m17 /m16 /m15 /m14 /m13 /m12 /m11 /m10 /m9 /m8 /m7 /m6 /m5 /m4 /m3 /m2 /m1 /getTranscriptChallenge_memory_footprint /updateTranscript_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT /PROOF_STATE_POLYS_1_X_SLOT
        /PROOF_STATE_POLYS_1_Y_SLOT /PROOF_STATE_POLYS_2_X_SLOT /PROOF_STATE_POLYS_2_Y_SLOT
        /PROOF_STATE_POLYS_3_X_SLOT /PROOF_STATE_POLYS_3_Y_SLOT /PROOF_LOOKUP_S_POLY_X_SLOT
        /PROOF_LOOKUP_S_POLY_Y_SLOT /STATE_ETA_SLOT /STATE_BETA_SLOT /PROOF_STATE_POLYS_0_X_SLOT
        /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT /STATE_GAMMA_SLOT
        /STATE_BETA_LOOKUP_SLOT /STATE_GAMMA_LOOKUP_SLOT /PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT
        /PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT /STATE_ALPHA_SLOT /PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.

seq 1 1:(
   s0_14 = state0_14{2} /\
   s1_14 = state1_14{2} /\
   sEta = _20{1} /\
   sBeta = _27{1} /\
   sGamma = _30{1} /\
   sBetaLookup = _37{1} /\
   sGammaLookup = _40{1} /\
   sAlpha = _47{1} /\
   (initialS0{2} = initialS0G /\
    initialS1{2} = initialS1G /\
    publicInput{2} = publicInputG /\
    proofStatePolys0X{2} = proofStatePolys0XG /\
    proofStatePolys0Y{2} = proofStatePolys0YG /\
    proofStatePolys1X{2} = proofStatePolys1XG /\
    proofStatePolys1Y{2} = proofStatePolys1YG /\
    proofStatePolys2X{2} = proofStatePolys2XG /\
    proofStatePolys2Y{2} = proofStatePolys2YG /\
    proofStatePolys3X{2} = proofStatePolys3XG /\
    proofStatePolys3Y{2} = proofStatePolys3YG /\
    proofLookupSPolyX{2} = proofLookupSPolyXG /\
    proofLookupSPolyY{2} = proofLookupSPolyYG /\
    proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
    proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
    proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
    proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
    proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
    proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
    proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
    proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
    proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
    proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
    proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
    proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
    proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
    proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
    proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
    proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
    proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
    proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
    proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
    proofCopyPermutationPolys0OpeningAtZ{2} =
    proofCopyPermutationPolys0OpeningAtZG /\
    proofCopyPermutationPolys1OpeningAtZ{2} =
    proofCopyPermutationPolys1OpeningAtZG /\
    proofCopyPermutationPolys2OpeningAtZ{2} =
    proofCopyPermutationPolys2OpeningAtZG /\
    proofCopyPermutationGrandProductOpeningAtZOmega{2} =
    proofCopyPermutationGrandProductOpeningAtZOmegaG /\
    proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
    proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
    proofLookupTableTypePolyOpeningAtZ{2} =
    proofLookupTableTypePolyOpeningAtZG /\
    proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
    proofLookupGrandProductOpeningAtZOmega{2} =
    proofLookupGrandProductOpeningAtZOmegaG /\
    proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
    proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
    proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
    proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
    proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
    proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
   to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
   to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
   to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
   to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
   to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
   to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
   to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
   to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
   to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
   to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
   to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
   proofCopyPermutationGrandProductXG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
   proofCopyPermutationGrandProductYG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
   proofLookupGrandProductXG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
   proofLookupGrandProductYG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
   proofQuotientPolyParts0XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
   proofQuotientPolyParts0YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
   proofQuotientPolyParts1XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
   proofQuotientPolyParts1YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
   proofQuotientPolyParts2XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
   proofQuotientPolyParts2YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
   proofQuotientPolyParts3XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
   proofQuotientPolyParts3YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
   proofQuotientPolyOpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
   proofStatePolys0OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
   proofStatePolys1OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
   proofStatePolys2OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
   proofStatePolys3OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
   proofStatePolys3OpeningAtZOmegaG /\
   to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
   proofGateSelectors0OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys0OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys1OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys2OpeningAtZG /\
   to_uint
     (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
   proofLookupTPolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
   proofLookupSelectorPolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
   proofLookupTableTypePolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupSPolyOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupGrandProductOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupTPolyOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
   proofLinearisationPolyOpeningAtZG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
   proofOpeningProofAtZOmegaXG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
   proofOpeningProofAtZOmegaYG /\
   !Primops.reverted{1} /\
   _2{1} = (of_int publicInputG)%W256 /\
   _4{1} = (of_int proofStatePolys0XG)%W256 /\
   _6{1} = (of_int proofStatePolys0YG)%W256 /\
   _8{1} = (of_int proofStatePolys1XG)%W256 /\
   _10{1} = (of_int proofStatePolys1YG)%W256 /\
   _12{1} = (of_int proofStatePolys2XG)%W256 /\
   _14{1} = (of_int proofStatePolys2YG)%W256 /\
   _16{1} = (of_int proofStatePolys3XG)%W256 /\
   _18{1} = (of_int proofStatePolys3YG)%W256 /\
   _20{1} = (of_int stateEta{2})%W256 /\
   _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
   _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
   _27{1} = (of_int stateBeta{2})%W256 /\
   _30{1} = (of_int stateGamma{2})%W256 /\
   _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
   _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
   _37{1} = (of_int stateBetaLookup{2})%W256 /\
   _40{1} = (of_int stateGammaLookup{2})%W256 /\
   _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
   _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
   _47{1} = (of_int stateAlpha{2})%W256 /\
   _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
   (0 <= state0_15{2} && state0_15{2} < W256.modulus) /\
   (0 <= state1_15{2} && state1_15{2} < W256.modulus) /\
   (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
   (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
   (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
   (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
   (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
   (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  Primops.memory{1} = updateTranscript_memory_footprint m27 _50{1} (W256.of_int state0_15{2}) (W256.of_int state1_15{2})
).
call (updateTranscript_low_equiv_mid m27 s0_14 s1_14 proofQuotientPolyParts0XG).
skip. progress.

exists* state0_15{2}, state1_15{2}; elim*=> s0_15 s1_15.
pose m28 := updateTranscript_memory_footprint m27 (W256.of_int proofQuotientPolyParts0XG) (W256.of_int s0_15) (W256.of_int s1_15).
seq 1 0:(
  s0_15 = state0_15{2} /\ s1_15 = state1_15{2} /\
  s0_14 = state0_14{2} /\
  s1_14 = state1_14{2} /\
  sEta = _20{1} /\
  sBeta = _27{1} /\
  sGamma = _30{1} /\
  sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\
  sAlpha = _47{1} /\
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  (0 <= state0_15{2} && state0_15{2} < W256.modulus) /\
  (0 <= state1_15{2} && state1_15{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  Primops.memory{1} = m28 /\
  W256.to_uint (mload m28 TRANSCRIPT_STATE_0_SLOT) = state0_15{2} /\
  W256.to_uint (mload m28 TRANSCRIPT_STATE_1_SLOT) = state1_15{2}
).
call{1} (ConcretePrimops.mload_pspec m28 PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT).
skip; progress;
rewrite /m28 /m27 /m26 /m25 /m24 /m23 /m22 /m21 /m20 /m19 /m18 /m17 /m16 /m15 /m14 /m13 /m12 /m11 /m10 /m9 /m8 /m7 /m6 /m5 /m4 /m3 /m2 /m1 /getTranscriptChallenge_memory_footprint /updateTranscript_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT /PROOF_STATE_POLYS_1_X_SLOT
        /PROOF_STATE_POLYS_1_Y_SLOT /PROOF_STATE_POLYS_2_X_SLOT /PROOF_STATE_POLYS_2_Y_SLOT
        /PROOF_STATE_POLYS_3_X_SLOT /PROOF_STATE_POLYS_3_Y_SLOT /PROOF_LOOKUP_S_POLY_X_SLOT
        /PROOF_LOOKUP_S_POLY_Y_SLOT /STATE_ETA_SLOT /STATE_BETA_SLOT /PROOF_STATE_POLYS_0_X_SLOT
        /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT /STATE_GAMMA_SLOT
        /STATE_BETA_LOOKUP_SLOT /STATE_GAMMA_LOOKUP_SLOT /PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT
        /PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT /STATE_ALPHA_SLOT /PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.

rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.

seq 1 1:(
   s0_15 = state0_15{2} /\
   s1_15 = state1_15{2} /\
   sEta = _20{1} /\
   sBeta = _27{1} /\
   sGamma = _30{1} /\
   sBetaLookup = _37{1} /\
   sGammaLookup = _40{1} /\
   sAlpha = _47{1} /\
   (initialS0{2} = initialS0G /\
    initialS1{2} = initialS1G /\
    publicInput{2} = publicInputG /\
    proofStatePolys0X{2} = proofStatePolys0XG /\
    proofStatePolys0Y{2} = proofStatePolys0YG /\
    proofStatePolys1X{2} = proofStatePolys1XG /\
    proofStatePolys1Y{2} = proofStatePolys1YG /\
    proofStatePolys2X{2} = proofStatePolys2XG /\
    proofStatePolys2Y{2} = proofStatePolys2YG /\
    proofStatePolys3X{2} = proofStatePolys3XG /\
    proofStatePolys3Y{2} = proofStatePolys3YG /\
    proofLookupSPolyX{2} = proofLookupSPolyXG /\
    proofLookupSPolyY{2} = proofLookupSPolyYG /\
    proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
    proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
    proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
    proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
    proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
    proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
    proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
    proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
    proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
    proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
    proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
    proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
    proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
    proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
    proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
    proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
    proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
    proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
    proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
    proofCopyPermutationPolys0OpeningAtZ{2} =
    proofCopyPermutationPolys0OpeningAtZG /\
    proofCopyPermutationPolys1OpeningAtZ{2} =
    proofCopyPermutationPolys1OpeningAtZG /\
    proofCopyPermutationPolys2OpeningAtZ{2} =
    proofCopyPermutationPolys2OpeningAtZG /\
    proofCopyPermutationGrandProductOpeningAtZOmega{2} =
    proofCopyPermutationGrandProductOpeningAtZOmegaG /\
    proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
    proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
    proofLookupTableTypePolyOpeningAtZ{2} =
    proofLookupTableTypePolyOpeningAtZG /\
    proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
    proofLookupGrandProductOpeningAtZOmega{2} =
    proofLookupGrandProductOpeningAtZOmegaG /\
    proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
    proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
    proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
    proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
    proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
    proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
   to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
   to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
   to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
   to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
   to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
   to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
   to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
   to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
   to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
   to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
   to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
   proofCopyPermutationGrandProductXG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
   proofCopyPermutationGrandProductYG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
   proofLookupGrandProductXG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
   proofLookupGrandProductYG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
   proofQuotientPolyParts0XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
   proofQuotientPolyParts0YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
   proofQuotientPolyParts1XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
   proofQuotientPolyParts1YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
   proofQuotientPolyParts2XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
   proofQuotientPolyParts2YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
   proofQuotientPolyParts3XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
   proofQuotientPolyParts3YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
   proofQuotientPolyOpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
   proofStatePolys0OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
   proofStatePolys1OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
   proofStatePolys2OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
   proofStatePolys3OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
   proofStatePolys3OpeningAtZOmegaG /\
   to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
   proofGateSelectors0OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys0OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys1OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys2OpeningAtZG /\
   to_uint
     (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
   proofLookupTPolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
   proofLookupSelectorPolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
   proofLookupTableTypePolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupSPolyOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupGrandProductOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupTPolyOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
   proofLinearisationPolyOpeningAtZG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
   proofOpeningProofAtZOmegaXG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
   proofOpeningProofAtZOmegaYG /\
   !Primops.reverted{1} /\
   _2{1} = (of_int publicInputG)%W256 /\
   _4{1} = (of_int proofStatePolys0XG)%W256 /\
   _6{1} = (of_int proofStatePolys0YG)%W256 /\
   _8{1} = (of_int proofStatePolys1XG)%W256 /\
   _10{1} = (of_int proofStatePolys1YG)%W256 /\
   _12{1} = (of_int proofStatePolys2XG)%W256 /\
   _14{1} = (of_int proofStatePolys2YG)%W256 /\
   _16{1} = (of_int proofStatePolys3XG)%W256 /\
   _18{1} = (of_int proofStatePolys3YG)%W256 /\
   _20{1} = (of_int stateEta{2})%W256 /\
   _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
   _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
   _27{1} = (of_int stateBeta{2})%W256 /\
   _30{1} = (of_int stateGamma{2})%W256 /\
   _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
   _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
   _37{1} = (of_int stateBetaLookup{2})%W256 /\
   _40{1} = (of_int stateGammaLookup{2})%W256 /\
   _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
   _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
   _47{1} = (of_int stateAlpha{2})%W256 /\
   _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
   _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
   (0 <= state0_16{2} && state0_16{2} < W256.modulus) /\
   (0 <= state1_16{2} && state1_16{2} < W256.modulus) /\
   (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
   (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
   (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
   (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
   (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
   (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  Primops.memory{1} = updateTranscript_memory_footprint m28 _52{1} (W256.of_int state0_16{2}) (W256.of_int state1_16{2})
).
call (updateTranscript_low_equiv_mid m28 s0_15 s1_15 proofQuotientPolyParts0YG).
skip. progress.

exists* state0_16{2}, state1_16{2}; elim*=> s0_16 s1_16.
pose m29 := updateTranscript_memory_footprint m28 (W256.of_int proofQuotientPolyParts0YG) (W256.of_int s0_16) (W256.of_int s1_16).
seq 1 0:(
  s0_16 = state0_16{2} /\ s1_16 = state1_16{2} /\
  sEta = _20{1} /\
  sBeta = _27{1} /\
  sGamma = _30{1} /\
  sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\
  sAlpha = _47{1} /\
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  (0 <= state0_16{2} && state0_16{2} < W256.modulus) /\
  (0 <= state1_16{2} && state1_16{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  Primops.memory{1} = m29 /\
  W256.to_uint (mload m29 TRANSCRIPT_STATE_0_SLOT) = state0_16{2} /\
  W256.to_uint (mload m29 TRANSCRIPT_STATE_1_SLOT) = state1_16{2}
).
call{1} (ConcretePrimops.mload_pspec m29 PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT).
skip; progress;
rewrite /m29 /m28 /m27 /m26 /m25 /m24 /m23 /m22 /m21 /m20 /m19 /m18 /m17 /m16 /m15 /m14 /m13 /m12 /m11 /m10 /m9 /m8 /m7 /m6 /m5 /m4 /m3 /m2 /m1 /getTranscriptChallenge_memory_footprint /updateTranscript_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT /PROOF_STATE_POLYS_1_X_SLOT
        /PROOF_STATE_POLYS_1_Y_SLOT /PROOF_STATE_POLYS_2_X_SLOT /PROOF_STATE_POLYS_2_Y_SLOT
        /PROOF_STATE_POLYS_3_X_SLOT /PROOF_STATE_POLYS_3_Y_SLOT /PROOF_LOOKUP_S_POLY_X_SLOT
        /PROOF_LOOKUP_S_POLY_Y_SLOT /STATE_ETA_SLOT /STATE_BETA_SLOT /PROOF_STATE_POLYS_0_X_SLOT
        /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT /STATE_GAMMA_SLOT
        /STATE_BETA_LOOKUP_SLOT /STATE_GAMMA_LOOKUP_SLOT /PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT
        /PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT /STATE_ALPHA_SLOT /PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.

rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.

seq 1 1:(
   s0_16 = state0_16{2} /\
   s1_16 = state1_16{2} /\
   sEta = _20{1} /\
   sBeta = _27{1} /\
   sGamma = _30{1} /\
   sBetaLookup = _37{1} /\
   sGammaLookup = _40{1} /\
   sAlpha = _47{1} /\
   (initialS0{2} = initialS0G /\
    initialS1{2} = initialS1G /\
    publicInput{2} = publicInputG /\
    proofStatePolys0X{2} = proofStatePolys0XG /\
    proofStatePolys0Y{2} = proofStatePolys0YG /\
    proofStatePolys1X{2} = proofStatePolys1XG /\
    proofStatePolys1Y{2} = proofStatePolys1YG /\
    proofStatePolys2X{2} = proofStatePolys2XG /\
    proofStatePolys2Y{2} = proofStatePolys2YG /\
    proofStatePolys3X{2} = proofStatePolys3XG /\
    proofStatePolys3Y{2} = proofStatePolys3YG /\
    proofLookupSPolyX{2} = proofLookupSPolyXG /\
    proofLookupSPolyY{2} = proofLookupSPolyYG /\
    proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
    proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
    proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
    proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
    proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
    proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
    proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
    proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
    proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
    proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
    proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
    proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
    proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
    proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
    proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
    proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
    proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
    proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
    proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
    proofCopyPermutationPolys0OpeningAtZ{2} =
    proofCopyPermutationPolys0OpeningAtZG /\
    proofCopyPermutationPolys1OpeningAtZ{2} =
    proofCopyPermutationPolys1OpeningAtZG /\
    proofCopyPermutationPolys2OpeningAtZ{2} =
    proofCopyPermutationPolys2OpeningAtZG /\
    proofCopyPermutationGrandProductOpeningAtZOmega{2} =
    proofCopyPermutationGrandProductOpeningAtZOmegaG /\
    proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
    proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
    proofLookupTableTypePolyOpeningAtZ{2} =
    proofLookupTableTypePolyOpeningAtZG /\
    proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
    proofLookupGrandProductOpeningAtZOmega{2} =
    proofLookupGrandProductOpeningAtZOmegaG /\
    proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
    proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
    proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
    proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
    proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
    proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
   to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
   to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
   to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
   to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
   to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
   to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
   to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
   to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
   to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
   to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
   to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
   proofCopyPermutationGrandProductXG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
   proofCopyPermutationGrandProductYG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
   proofLookupGrandProductXG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
   proofLookupGrandProductYG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
   proofQuotientPolyParts0XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
   proofQuotientPolyParts0YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
   proofQuotientPolyParts1XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
   proofQuotientPolyParts1YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
   proofQuotientPolyParts2XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
   proofQuotientPolyParts2YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
   proofQuotientPolyParts3XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
   proofQuotientPolyParts3YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
   proofQuotientPolyOpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
   proofStatePolys0OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
   proofStatePolys1OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
   proofStatePolys2OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
   proofStatePolys3OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
   proofStatePolys3OpeningAtZOmegaG /\
   to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
   proofGateSelectors0OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys0OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys1OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys2OpeningAtZG /\
   to_uint
     (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
   proofLookupTPolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
   proofLookupSelectorPolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
   proofLookupTableTypePolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupSPolyOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupGrandProductOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupTPolyOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
   proofLinearisationPolyOpeningAtZG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
   proofOpeningProofAtZOmegaXG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
   proofOpeningProofAtZOmegaYG /\
   !Primops.reverted{1} /\
   _2{1} = (of_int publicInputG)%W256 /\
   _4{1} = (of_int proofStatePolys0XG)%W256 /\
   _6{1} = (of_int proofStatePolys0YG)%W256 /\
   _8{1} = (of_int proofStatePolys1XG)%W256 /\
   _10{1} = (of_int proofStatePolys1YG)%W256 /\
   _12{1} = (of_int proofStatePolys2XG)%W256 /\
   _14{1} = (of_int proofStatePolys2YG)%W256 /\
   _16{1} = (of_int proofStatePolys3XG)%W256 /\
   _18{1} = (of_int proofStatePolys3YG)%W256 /\
   _20{1} = (of_int stateEta{2})%W256 /\
   _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
   _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
   _27{1} = (of_int stateBeta{2})%W256 /\
   _30{1} = (of_int stateGamma{2})%W256 /\
   _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
   _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
   _37{1} = (of_int stateBetaLookup{2})%W256 /\
   _40{1} = (of_int stateGammaLookup{2})%W256 /\
   _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
   _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
   _47{1} = (of_int stateAlpha{2})%W256 /\
   _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
   _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
   _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
   (0 <= state0_17{2} && state0_17{2} < W256.modulus) /\
   (0 <= state1_17{2} && state1_17{2} < W256.modulus) /\
   (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
   (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
   (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
   (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
   (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
   (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  Primops.memory{1} = updateTranscript_memory_footprint m29 _54{1} (W256.of_int state0_17{2}) (W256.of_int state1_17{2})
).
call (updateTranscript_low_equiv_mid m29 s0_16 s1_16 proofQuotientPolyParts1XG).
skip. progress.

exists* state0_17{2}, state1_17{2}; elim*=> s0_17 s1_17.
pose m30 := updateTranscript_memory_footprint m29 (of_int proofQuotientPolyParts1XG)%W256 (W256.of_int s0_17) (W256.of_int s1_17).
seq 1 0:(
  s0_17 = state0_17{2} /\ 
  s1_17 = state1_17{2} /\
  sEta = _20{1} /\
  sBeta = _27{1} /\
  sGamma = _30{1} /\
  sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\
  sAlpha = _47{1} /\
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  (0 <= state0_17{2} && state0_17{2} < W256.modulus) /\
  (0 <= state1_17{2} && state1_17{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  Primops.memory{1} = m30 /\
  W256.to_uint (mload m30 TRANSCRIPT_STATE_0_SLOT) = state0_17{2} /\
  W256.to_uint (mload m30 TRANSCRIPT_STATE_1_SLOT) = state1_17{2}
).
call{1} (ConcretePrimops.mload_pspec m30 PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT).
skip; progress;
rewrite /m30 /m29 /m28 /m27 /m26 /m25 /m24 /m23 /m22 /m21 /m20 /m19 /m18 /m17 /m16 /m15 /m14 /m13 /m12 /m11 /m10 /m9 /m8 /m7 /m6 /m5 /m4 /m3 /m2 /m1 /getTranscriptChallenge_memory_footprint /updateTranscript_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT /PROOF_STATE_POLYS_1_X_SLOT
        /PROOF_STATE_POLYS_1_Y_SLOT /PROOF_STATE_POLYS_2_X_SLOT /PROOF_STATE_POLYS_2_Y_SLOT
        /PROOF_STATE_POLYS_3_X_SLOT /PROOF_STATE_POLYS_3_Y_SLOT /PROOF_LOOKUP_S_POLY_X_SLOT
        /PROOF_LOOKUP_S_POLY_Y_SLOT /STATE_ETA_SLOT /STATE_BETA_SLOT /PROOF_STATE_POLYS_0_X_SLOT
        /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT /STATE_GAMMA_SLOT
        /STATE_BETA_LOOKUP_SLOT /STATE_GAMMA_LOOKUP_SLOT /PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT
        /PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT /STATE_ALPHA_SLOT /PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.

rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.

seq 1 1:(
   s0_17 = state0_17{2} /\
   s1_17 = state1_17{2} /\
   sEta = _20{1} /\
   sBeta = _27{1} /\
   sGamma = _30{1} /\
   sBetaLookup = _37{1} /\
   sGammaLookup = _40{1} /\
   sAlpha = _47{1} /\
   (initialS0{2} = initialS0G /\
    initialS1{2} = initialS1G /\
    publicInput{2} = publicInputG /\
    proofStatePolys0X{2} = proofStatePolys0XG /\
    proofStatePolys0Y{2} = proofStatePolys0YG /\
    proofStatePolys1X{2} = proofStatePolys1XG /\
    proofStatePolys1Y{2} = proofStatePolys1YG /\
    proofStatePolys2X{2} = proofStatePolys2XG /\
    proofStatePolys2Y{2} = proofStatePolys2YG /\
    proofStatePolys3X{2} = proofStatePolys3XG /\
    proofStatePolys3Y{2} = proofStatePolys3YG /\
    proofLookupSPolyX{2} = proofLookupSPolyXG /\
    proofLookupSPolyY{2} = proofLookupSPolyYG /\
    proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
    proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
    proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
    proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
    proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
    proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
    proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
    proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
    proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
    proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
    proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
    proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
    proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
    proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
    proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
    proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
    proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
    proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
    proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
    proofCopyPermutationPolys0OpeningAtZ{2} =
    proofCopyPermutationPolys0OpeningAtZG /\
    proofCopyPermutationPolys1OpeningAtZ{2} =
    proofCopyPermutationPolys1OpeningAtZG /\
    proofCopyPermutationPolys2OpeningAtZ{2} =
    proofCopyPermutationPolys2OpeningAtZG /\
    proofCopyPermutationGrandProductOpeningAtZOmega{2} =
    proofCopyPermutationGrandProductOpeningAtZOmegaG /\
    proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
    proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
    proofLookupTableTypePolyOpeningAtZ{2} =
    proofLookupTableTypePolyOpeningAtZG /\
    proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
    proofLookupGrandProductOpeningAtZOmega{2} =
    proofLookupGrandProductOpeningAtZOmegaG /\
    proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
    proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
    proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
    proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
    proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
    proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
   to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
   to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
   to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
   to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
   to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
   to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
   to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
   to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
   to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
   to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
   to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
   proofCopyPermutationGrandProductXG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
   proofCopyPermutationGrandProductYG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
   proofLookupGrandProductXG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
   proofLookupGrandProductYG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
   proofQuotientPolyParts0XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
   proofQuotientPolyParts0YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
   proofQuotientPolyParts1XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
   proofQuotientPolyParts1YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
   proofQuotientPolyParts2XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
   proofQuotientPolyParts2YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
   proofQuotientPolyParts3XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
   proofQuotientPolyParts3YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
   proofQuotientPolyOpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
   proofStatePolys0OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
   proofStatePolys1OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
   proofStatePolys2OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
   proofStatePolys3OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
   proofStatePolys3OpeningAtZOmegaG /\
   to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
   proofGateSelectors0OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys0OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys1OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys2OpeningAtZG /\
   to_uint
     (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
   proofLookupTPolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
   proofLookupSelectorPolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
   proofLookupTableTypePolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupSPolyOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupGrandProductOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupTPolyOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
   proofLinearisationPolyOpeningAtZG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
   proofOpeningProofAtZOmegaXG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
   proofOpeningProofAtZOmegaYG /\
   !Primops.reverted{1} /\
   _2{1} = (of_int publicInputG)%W256 /\
   _4{1} = (of_int proofStatePolys0XG)%W256 /\
   _6{1} = (of_int proofStatePolys0YG)%W256 /\
   _8{1} = (of_int proofStatePolys1XG)%W256 /\
   _10{1} = (of_int proofStatePolys1YG)%W256 /\
   _12{1} = (of_int proofStatePolys2XG)%W256 /\
   _14{1} = (of_int proofStatePolys2YG)%W256 /\
   _16{1} = (of_int proofStatePolys3XG)%W256 /\
   _18{1} = (of_int proofStatePolys3YG)%W256 /\
   _20{1} = (of_int stateEta{2})%W256 /\
   _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
   _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
   _27{1} = (of_int stateBeta{2})%W256 /\
   _30{1} = (of_int stateGamma{2})%W256 /\
   _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
   _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
   _37{1} = (of_int stateBetaLookup{2})%W256 /\
   _40{1} = (of_int stateGammaLookup{2})%W256 /\
   _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
   _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
   _47{1} = (of_int stateAlpha{2})%W256 /\
   _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
   _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
   _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
   _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
   (0 <= state0_18{2} && state0_18{2} < W256.modulus) /\
   (0 <= state1_18{2} && state1_18{2} < W256.modulus) /\
   (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
   (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
   (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
   (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
   (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
   (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  Primops.memory{1} = updateTranscript_memory_footprint m30 _56{1} (W256.of_int state0_18{2}) (W256.of_int state1_18{2})
).
call (updateTranscript_low_equiv_mid m30 s0_17 s1_17 proofQuotientPolyParts1YG).
skip. progress.

exists* state0_18{2}, state1_18{2}; elim*=> s0_18 s1_18.
pose m31 := updateTranscript_memory_footprint m30 (of_int proofQuotientPolyParts1YG)%W256 (W256.of_int s0_18) (W256.of_int s1_18).
seq 1 0:(
  s0_18 = state0_18{2} /\ 
  s1_18 = state1_18{2} /\
  sEta = _20{1} /\
  sBeta = _27{1} /\
  sGamma = _30{1} /\
  sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\
  sAlpha = _47{1} /\
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  (0 <= state0_18{2} && state0_18{2} < W256.modulus) /\
  (0 <= state1_18{2} && state1_18{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  Primops.memory{1} = m31 /\
  W256.to_uint (mload m31 TRANSCRIPT_STATE_0_SLOT) = state0_18{2} /\
  W256.to_uint (mload m31 TRANSCRIPT_STATE_1_SLOT) = state1_18{2}
).
call{1} (ConcretePrimops.mload_pspec m31 PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT).
skip; progress;
rewrite /m31 /m30 /m29 /m28 /m27 /m26 /m25 /m24 /m23 /m22 /m21 /m20 /m19 /m18 /m17 /m16 /m15 /m14 /m13 /m12 /m11 /m10 /m9 /m8 /m7 /m6 /m5 /m4 /m3 /m2 /m1 /getTranscriptChallenge_memory_footprint /updateTranscript_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT /PROOF_STATE_POLYS_1_X_SLOT
        /PROOF_STATE_POLYS_1_Y_SLOT /PROOF_STATE_POLYS_2_X_SLOT /PROOF_STATE_POLYS_2_Y_SLOT
        /PROOF_STATE_POLYS_3_X_SLOT /PROOF_STATE_POLYS_3_Y_SLOT /PROOF_LOOKUP_S_POLY_X_SLOT
        /PROOF_LOOKUP_S_POLY_Y_SLOT /STATE_ETA_SLOT /STATE_BETA_SLOT /PROOF_STATE_POLYS_0_X_SLOT
        /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT /STATE_GAMMA_SLOT
        /STATE_BETA_LOOKUP_SLOT /STATE_GAMMA_LOOKUP_SLOT /PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT
        /PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT /STATE_ALPHA_SLOT /PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.

rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.

seq 1 1:(
   s0_18 = state0_18{2} /\
   s1_18 = state1_18{2} /\
   sEta = _20{1} /\
   sBeta = _27{1} /\
   sGamma = _30{1} /\
   sBetaLookup = _37{1} /\
   sGammaLookup = _40{1} /\
   sAlpha = _47{1} /\
   (initialS0{2} = initialS0G /\
    initialS1{2} = initialS1G /\
    publicInput{2} = publicInputG /\
    proofStatePolys0X{2} = proofStatePolys0XG /\
    proofStatePolys0Y{2} = proofStatePolys0YG /\
    proofStatePolys1X{2} = proofStatePolys1XG /\
    proofStatePolys1Y{2} = proofStatePolys1YG /\
    proofStatePolys2X{2} = proofStatePolys2XG /\
    proofStatePolys2Y{2} = proofStatePolys2YG /\
    proofStatePolys3X{2} = proofStatePolys3XG /\
    proofStatePolys3Y{2} = proofStatePolys3YG /\
    proofLookupSPolyX{2} = proofLookupSPolyXG /\
    proofLookupSPolyY{2} = proofLookupSPolyYG /\
    proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
    proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
    proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
    proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
    proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
    proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
    proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
    proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
    proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
    proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
    proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
    proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
    proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
    proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
    proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
    proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
    proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
    proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
    proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
    proofCopyPermutationPolys0OpeningAtZ{2} =
    proofCopyPermutationPolys0OpeningAtZG /\
    proofCopyPermutationPolys1OpeningAtZ{2} =
    proofCopyPermutationPolys1OpeningAtZG /\
    proofCopyPermutationPolys2OpeningAtZ{2} =
    proofCopyPermutationPolys2OpeningAtZG /\
    proofCopyPermutationGrandProductOpeningAtZOmega{2} =
    proofCopyPermutationGrandProductOpeningAtZOmegaG /\
    proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
    proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
    proofLookupTableTypePolyOpeningAtZ{2} =
    proofLookupTableTypePolyOpeningAtZG /\
    proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
    proofLookupGrandProductOpeningAtZOmega{2} =
    proofLookupGrandProductOpeningAtZOmegaG /\
    proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
    proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
    proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
    proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
    proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
    proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
   to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
   to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
   to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
   to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
   to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
   to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
   to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
   to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
   to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
   to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
   to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
   proofCopyPermutationGrandProductXG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
   proofCopyPermutationGrandProductYG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
   proofLookupGrandProductXG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
   proofLookupGrandProductYG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
   proofQuotientPolyParts0XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
   proofQuotientPolyParts0YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
   proofQuotientPolyParts1XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
   proofQuotientPolyParts1YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
   proofQuotientPolyParts2XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
   proofQuotientPolyParts2YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
   proofQuotientPolyParts3XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
   proofQuotientPolyParts3YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
   proofQuotientPolyOpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
   proofStatePolys0OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
   proofStatePolys1OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
   proofStatePolys2OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
   proofStatePolys3OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
   proofStatePolys3OpeningAtZOmegaG /\
   to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
   proofGateSelectors0OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys0OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys1OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys2OpeningAtZG /\
   to_uint
     (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
   proofLookupTPolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
   proofLookupSelectorPolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
   proofLookupTableTypePolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupSPolyOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupGrandProductOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupTPolyOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
   proofLinearisationPolyOpeningAtZG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
   proofOpeningProofAtZOmegaXG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
   proofOpeningProofAtZOmegaYG /\
   !Primops.reverted{1} /\
   _2{1} = (of_int publicInputG)%W256 /\
   _4{1} = (of_int proofStatePolys0XG)%W256 /\
   _6{1} = (of_int proofStatePolys0YG)%W256 /\
   _8{1} = (of_int proofStatePolys1XG)%W256 /\
   _10{1} = (of_int proofStatePolys1YG)%W256 /\
   _12{1} = (of_int proofStatePolys2XG)%W256 /\
   _14{1} = (of_int proofStatePolys2YG)%W256 /\
   _16{1} = (of_int proofStatePolys3XG)%W256 /\
   _18{1} = (of_int proofStatePolys3YG)%W256 /\
   _20{1} = (of_int stateEta{2})%W256 /\
   _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
   _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
   _27{1} = (of_int stateBeta{2})%W256 /\
   _30{1} = (of_int stateGamma{2})%W256 /\
   _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
   _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
   _37{1} = (of_int stateBetaLookup{2})%W256 /\
   _40{1} = (of_int stateGammaLookup{2})%W256 /\
   _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
   _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
   _47{1} = (of_int stateAlpha{2})%W256 /\
   _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
   _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
   _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
   _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
   _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
   (0 <= state0_19{2} && state0_19{2} < W256.modulus) /\
   (0 <= state1_19{2} && state1_19{2} < W256.modulus) /\
   (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
   (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
   (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
   (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
   (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
   (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  Primops.memory{1} = updateTranscript_memory_footprint m31 _58{1} (W256.of_int state0_19{2}) (W256.of_int state1_19{2})
).
call (updateTranscript_low_equiv_mid m31 s0_18 s1_18 proofQuotientPolyParts2XG).
skip. progress.

exists* state0_19{2}, state1_19{2}; elim*=> s0_19 s1_19.
pose m32 := updateTranscript_memory_footprint m31 (of_int proofQuotientPolyParts2XG)%W256 (W256.of_int s0_19) (W256.of_int s1_19).
seq 1 0:(
  s0_19 = state0_19{2} /\ 
  s1_19 = state1_19{2} /\
  sEta = _20{1} /\
  sBeta = _27{1} /\
  sGamma = _30{1} /\
  sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\
  sAlpha = _47{1} /\
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  (0 <= state0_19{2} && state0_19{2} < W256.modulus) /\
  (0 <= state1_19{2} && state1_19{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  Primops.memory{1} = m32 /\
  W256.to_uint (mload m32 TRANSCRIPT_STATE_0_SLOT) = state0_19{2} /\
  W256.to_uint (mload m32 TRANSCRIPT_STATE_1_SLOT) = state1_19{2}
).
call{1} (ConcretePrimops.mload_pspec m32 PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT).
skip; progress;
rewrite /m32 /m31 /m30 /m29 /m28 /m27 /m26 /m25 /m24 /m23 /m22 /m21 /m20 /m19 /m18 /m17 /m16 /m15 /m14 /m13 /m12 /m11 /m10 /m9 /m8 /m7 /m6 /m5 /m4 /m3 /m2 /m1 /getTranscriptChallenge_memory_footprint /updateTranscript_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT /PROOF_STATE_POLYS_1_X_SLOT
        /PROOF_STATE_POLYS_1_Y_SLOT /PROOF_STATE_POLYS_2_X_SLOT /PROOF_STATE_POLYS_2_Y_SLOT
        /PROOF_STATE_POLYS_3_X_SLOT /PROOF_STATE_POLYS_3_Y_SLOT /PROOF_LOOKUP_S_POLY_X_SLOT
        /PROOF_LOOKUP_S_POLY_Y_SLOT /STATE_ETA_SLOT /STATE_BETA_SLOT /PROOF_STATE_POLYS_0_X_SLOT
        /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT /STATE_GAMMA_SLOT
        /STATE_BETA_LOOKUP_SLOT /STATE_GAMMA_LOOKUP_SLOT /PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT
        /PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT /STATE_ALPHA_SLOT /PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.

rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.

seq 1 1:(
   s0_19 = state0_19{2} /\
   s1_19 = state1_19{2} /\
   sEta = _20{1} /\
   sBeta = _27{1} /\
   sGamma = _30{1} /\
   sBetaLookup = _37{1} /\
   sGammaLookup = _40{1} /\
   sAlpha = _47{1} /\
   (initialS0{2} = initialS0G /\
    initialS1{2} = initialS1G /\
    publicInput{2} = publicInputG /\
    proofStatePolys0X{2} = proofStatePolys0XG /\
    proofStatePolys0Y{2} = proofStatePolys0YG /\
    proofStatePolys1X{2} = proofStatePolys1XG /\
    proofStatePolys1Y{2} = proofStatePolys1YG /\
    proofStatePolys2X{2} = proofStatePolys2XG /\
    proofStatePolys2Y{2} = proofStatePolys2YG /\
    proofStatePolys3X{2} = proofStatePolys3XG /\
    proofStatePolys3Y{2} = proofStatePolys3YG /\
    proofLookupSPolyX{2} = proofLookupSPolyXG /\
    proofLookupSPolyY{2} = proofLookupSPolyYG /\
    proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
    proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
    proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
    proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
    proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
    proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
    proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
    proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
    proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
    proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
    proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
    proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
    proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
    proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
    proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
    proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
    proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
    proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
    proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
    proofCopyPermutationPolys0OpeningAtZ{2} =
    proofCopyPermutationPolys0OpeningAtZG /\
    proofCopyPermutationPolys1OpeningAtZ{2} =
    proofCopyPermutationPolys1OpeningAtZG /\
    proofCopyPermutationPolys2OpeningAtZ{2} =
    proofCopyPermutationPolys2OpeningAtZG /\
    proofCopyPermutationGrandProductOpeningAtZOmega{2} =
    proofCopyPermutationGrandProductOpeningAtZOmegaG /\
    proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
    proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
    proofLookupTableTypePolyOpeningAtZ{2} =
    proofLookupTableTypePolyOpeningAtZG /\
    proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
    proofLookupGrandProductOpeningAtZOmega{2} =
    proofLookupGrandProductOpeningAtZOmegaG /\
    proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
    proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
    proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
    proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
    proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
    proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
   to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
   to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
   to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
   to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
   to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
   to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
   to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
   to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
   to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
   to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
   to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
   proofCopyPermutationGrandProductXG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
   proofCopyPermutationGrandProductYG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
   proofLookupGrandProductXG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
   proofLookupGrandProductYG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
   proofQuotientPolyParts0XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
   proofQuotientPolyParts0YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
   proofQuotientPolyParts1XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
   proofQuotientPolyParts1YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
   proofQuotientPolyParts2XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
   proofQuotientPolyParts2YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
   proofQuotientPolyParts3XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
   proofQuotientPolyParts3YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
   proofQuotientPolyOpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
   proofStatePolys0OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
   proofStatePolys1OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
   proofStatePolys2OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
   proofStatePolys3OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
   proofStatePolys3OpeningAtZOmegaG /\
   to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
   proofGateSelectors0OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys0OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys1OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys2OpeningAtZG /\
   to_uint
     (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
   proofLookupTPolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
   proofLookupSelectorPolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
   proofLookupTableTypePolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupSPolyOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupGrandProductOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupTPolyOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
   proofLinearisationPolyOpeningAtZG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
   proofOpeningProofAtZOmegaXG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
   proofOpeningProofAtZOmegaYG /\
   !Primops.reverted{1} /\
   _2{1} = (of_int publicInputG)%W256 /\
   _4{1} = (of_int proofStatePolys0XG)%W256 /\
   _6{1} = (of_int proofStatePolys0YG)%W256 /\
   _8{1} = (of_int proofStatePolys1XG)%W256 /\
   _10{1} = (of_int proofStatePolys1YG)%W256 /\
   _12{1} = (of_int proofStatePolys2XG)%W256 /\
   _14{1} = (of_int proofStatePolys2YG)%W256 /\
   _16{1} = (of_int proofStatePolys3XG)%W256 /\
   _18{1} = (of_int proofStatePolys3YG)%W256 /\
   _20{1} = (of_int stateEta{2})%W256 /\
   _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
   _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
   _27{1} = (of_int stateBeta{2})%W256 /\
   _30{1} = (of_int stateGamma{2})%W256 /\
   _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
   _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
   _37{1} = (of_int stateBetaLookup{2})%W256 /\
   _40{1} = (of_int stateGammaLookup{2})%W256 /\
   _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
   _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
   _47{1} = (of_int stateAlpha{2})%W256 /\
   _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
   _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
   _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
   _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
   _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
   _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
   (0 <= state0_20{2} && state0_20{2} < W256.modulus) /\
   (0 <= state1_20{2} && state1_20{2} < W256.modulus) /\
   (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
   (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
   (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
   (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
   (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
   (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  Primops.memory{1} = updateTranscript_memory_footprint m32 _60{1} (W256.of_int state0_20{2}) (W256.of_int state1_20{2})
).
call (updateTranscript_low_equiv_mid m32 s0_19 s1_19 proofQuotientPolyParts2YG).
skip. progress.

exists* state0_20{2}, state1_20{2}; elim*=> s0_20 s1_20.
pose m33 := updateTranscript_memory_footprint m32 (of_int proofQuotientPolyParts2YG)%W256 (W256.of_int s0_20) (W256.of_int s1_20).
seq 1 0:(
  s0_20 = state0_20{2} /\ 
  s1_20 = state1_20{2} /\
  sEta = _20{1} /\
  sBeta = _27{1} /\
  sGamma = _30{1} /\
  sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\
  sAlpha = _47{1} /\
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  (0 <= state0_20{2} && state0_20{2} < W256.modulus) /\
  (0 <= state1_20{2} && state1_20{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  Primops.memory{1} = m33 /\
  W256.to_uint (mload m33 TRANSCRIPT_STATE_0_SLOT) = state0_20{2} /\
  W256.to_uint (mload m33 TRANSCRIPT_STATE_1_SLOT) = state1_20{2}
).
call{1} (ConcretePrimops.mload_pspec m33 PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT).
skip; progress;
rewrite /m33 /m32 /m31 /m30 /m29 /m28 /m27 /m26 /m25 /m24 /m23 /m22 /m21 /m20 /m19 /m18 /m17 /m16 /m15 /m14 /m13 /m12 /m11 /m10 /m9 /m8 /m7 /m6 /m5 /m4 /m3 /m2 /m1 /getTranscriptChallenge_memory_footprint /updateTranscript_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT /PROOF_STATE_POLYS_1_X_SLOT
        /PROOF_STATE_POLYS_1_Y_SLOT /PROOF_STATE_POLYS_2_X_SLOT /PROOF_STATE_POLYS_2_Y_SLOT
        /PROOF_STATE_POLYS_3_X_SLOT /PROOF_STATE_POLYS_3_Y_SLOT /PROOF_LOOKUP_S_POLY_X_SLOT
        /PROOF_LOOKUP_S_POLY_Y_SLOT /STATE_ETA_SLOT /STATE_BETA_SLOT /PROOF_STATE_POLYS_0_X_SLOT
        /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT /STATE_GAMMA_SLOT
        /STATE_BETA_LOOKUP_SLOT /STATE_GAMMA_LOOKUP_SLOT /PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT
        /PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT /STATE_ALPHA_SLOT /PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.

rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.

seq 1 1:(
   s0_20 = state0_20{2} /\
   s1_20 = state1_20{2} /\
   sEta = _20{1} /\
   sBeta = _27{1} /\
   sGamma = _30{1} /\
   sBetaLookup = _37{1} /\
   sGammaLookup = _40{1} /\
   sAlpha = _47{1} /\
   (initialS0{2} = initialS0G /\
    initialS1{2} = initialS1G /\
    publicInput{2} = publicInputG /\
    proofStatePolys0X{2} = proofStatePolys0XG /\
    proofStatePolys0Y{2} = proofStatePolys0YG /\
    proofStatePolys1X{2} = proofStatePolys1XG /\
    proofStatePolys1Y{2} = proofStatePolys1YG /\
    proofStatePolys2X{2} = proofStatePolys2XG /\
    proofStatePolys2Y{2} = proofStatePolys2YG /\
    proofStatePolys3X{2} = proofStatePolys3XG /\
    proofStatePolys3Y{2} = proofStatePolys3YG /\
    proofLookupSPolyX{2} = proofLookupSPolyXG /\
    proofLookupSPolyY{2} = proofLookupSPolyYG /\
    proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
    proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
    proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
    proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
    proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
    proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
    proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
    proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
    proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
    proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
    proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
    proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
    proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
    proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
    proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
    proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
    proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
    proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
    proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
    proofCopyPermutationPolys0OpeningAtZ{2} =
    proofCopyPermutationPolys0OpeningAtZG /\
    proofCopyPermutationPolys1OpeningAtZ{2} =
    proofCopyPermutationPolys1OpeningAtZG /\
    proofCopyPermutationPolys2OpeningAtZ{2} =
    proofCopyPermutationPolys2OpeningAtZG /\
    proofCopyPermutationGrandProductOpeningAtZOmega{2} =
    proofCopyPermutationGrandProductOpeningAtZOmegaG /\
    proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
    proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
    proofLookupTableTypePolyOpeningAtZ{2} =
    proofLookupTableTypePolyOpeningAtZG /\
    proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
    proofLookupGrandProductOpeningAtZOmega{2} =
    proofLookupGrandProductOpeningAtZOmegaG /\
    proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
    proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
    proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
    proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
    proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
    proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
   to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
   to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
   to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
   to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
   to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
   to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
   to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
   to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
   to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
   to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
   to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
   proofCopyPermutationGrandProductXG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
   proofCopyPermutationGrandProductYG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
   proofLookupGrandProductXG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
   proofLookupGrandProductYG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
   proofQuotientPolyParts0XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
   proofQuotientPolyParts0YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
   proofQuotientPolyParts1XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
   proofQuotientPolyParts1YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
   proofQuotientPolyParts2XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
   proofQuotientPolyParts2YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
   proofQuotientPolyParts3XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
   proofQuotientPolyParts3YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
   proofQuotientPolyOpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
   proofStatePolys0OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
   proofStatePolys1OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
   proofStatePolys2OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
   proofStatePolys3OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
   proofStatePolys3OpeningAtZOmegaG /\
   to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
   proofGateSelectors0OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys0OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys1OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys2OpeningAtZG /\
   to_uint
     (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
   proofLookupTPolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
   proofLookupSelectorPolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
   proofLookupTableTypePolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupSPolyOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupGrandProductOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupTPolyOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
   proofLinearisationPolyOpeningAtZG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
   proofOpeningProofAtZOmegaXG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
   proofOpeningProofAtZOmegaYG /\
   !Primops.reverted{1} /\
   _2{1} = (of_int publicInputG)%W256 /\
   _4{1} = (of_int proofStatePolys0XG)%W256 /\
   _6{1} = (of_int proofStatePolys0YG)%W256 /\
   _8{1} = (of_int proofStatePolys1XG)%W256 /\
   _10{1} = (of_int proofStatePolys1YG)%W256 /\
   _12{1} = (of_int proofStatePolys2XG)%W256 /\
   _14{1} = (of_int proofStatePolys2YG)%W256 /\
   _16{1} = (of_int proofStatePolys3XG)%W256 /\
   _18{1} = (of_int proofStatePolys3YG)%W256 /\
   _20{1} = (of_int stateEta{2})%W256 /\
   _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
   _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
   _27{1} = (of_int stateBeta{2})%W256 /\
   _30{1} = (of_int stateGamma{2})%W256 /\
   _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
   _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
   _37{1} = (of_int stateBetaLookup{2})%W256 /\
   _40{1} = (of_int stateGammaLookup{2})%W256 /\
   _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
   _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
   _47{1} = (of_int stateAlpha{2})%W256 /\
   _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
   _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
   _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
   _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
   _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
   _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
   _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
   (0 <= state0_21{2} && state0_21{2} < W256.modulus) /\
   (0 <= state1_21{2} && state1_21{2} < W256.modulus) /\
   (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
   (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
   (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
   (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
   (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
   (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  Primops.memory{1} = updateTranscript_memory_footprint m33 _62{1} (W256.of_int state0_21{2}) (W256.of_int state1_21{2})
).
call (updateTranscript_low_equiv_mid m33 s0_20 s1_20 proofQuotientPolyParts3XG).
skip. progress.

exists* state0_21{2}, state1_21{2}; elim*=> s0_21 s1_21.
pose m34 := updateTranscript_memory_footprint m33 (of_int proofQuotientPolyParts3XG)%W256 (W256.of_int s0_21) (W256.of_int s1_21).
seq 1 0:(
  s0_21 = state0_21{2} /\ 
  s1_21 = state1_21{2} /\
  sEta = _20{1} /\
  sBeta = _27{1} /\
  sGamma = _30{1} /\
  sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\
  sAlpha = _47{1} /\
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
  (0 <= state0_21{2} && state0_21{2} < W256.modulus) /\
  (0 <= state1_21{2} && state1_21{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  Primops.memory{1} = m34 /\
  W256.to_uint (mload m34 TRANSCRIPT_STATE_0_SLOT) = state0_21{2} /\
  W256.to_uint (mload m34 TRANSCRIPT_STATE_1_SLOT) = state1_21{2}
).
call{1} (ConcretePrimops.mload_pspec m34 PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT).
skip; progress;
rewrite /m34 /m33 /m32 /m31 /m30 /m29 /m28 /m27 /m26 /m25 /m24 /m23 /m22 /m21 /m20 /m19 /m18 /m17 /m16 /m15 /m14 /m13 /m12 /m11 /m10 /m9 /m8 /m7 /m6 /m5 /m4 /m3 /m2 /m1 /getTranscriptChallenge_memory_footprint /updateTranscript_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT /PROOF_STATE_POLYS_1_X_SLOT
        /PROOF_STATE_POLYS_1_Y_SLOT /PROOF_STATE_POLYS_2_X_SLOT /PROOF_STATE_POLYS_2_Y_SLOT
        /PROOF_STATE_POLYS_3_X_SLOT /PROOF_STATE_POLYS_3_Y_SLOT /PROOF_LOOKUP_S_POLY_X_SLOT
        /PROOF_LOOKUP_S_POLY_Y_SLOT /STATE_ETA_SLOT /STATE_BETA_SLOT /PROOF_STATE_POLYS_0_X_SLOT
        /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT /STATE_GAMMA_SLOT
        /STATE_BETA_LOOKUP_SLOT /STATE_GAMMA_LOOKUP_SLOT /PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT
        /PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT /STATE_ALPHA_SLOT /PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.

rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.

seq 1 1:(
   s0_21 = state0_21{2} /\
   s1_21 = state1_21{2} /\
   sEta = _20{1} /\
   sBeta = _27{1} /\
   sGamma = _30{1} /\
   sBetaLookup = _37{1} /\
   sGammaLookup = _40{1} /\
   sAlpha = _47{1} /\
   (initialS0{2} = initialS0G /\
    initialS1{2} = initialS1G /\
    publicInput{2} = publicInputG /\
    proofStatePolys0X{2} = proofStatePolys0XG /\
    proofStatePolys0Y{2} = proofStatePolys0YG /\
    proofStatePolys1X{2} = proofStatePolys1XG /\
    proofStatePolys1Y{2} = proofStatePolys1YG /\
    proofStatePolys2X{2} = proofStatePolys2XG /\
    proofStatePolys2Y{2} = proofStatePolys2YG /\
    proofStatePolys3X{2} = proofStatePolys3XG /\
    proofStatePolys3Y{2} = proofStatePolys3YG /\
    proofLookupSPolyX{2} = proofLookupSPolyXG /\
    proofLookupSPolyY{2} = proofLookupSPolyYG /\
    proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
    proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
    proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
    proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
    proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
    proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
    proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
    proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
    proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
    proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
    proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
    proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
    proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
    proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
    proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
    proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
    proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
    proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
    proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
    proofCopyPermutationPolys0OpeningAtZ{2} =
    proofCopyPermutationPolys0OpeningAtZG /\
    proofCopyPermutationPolys1OpeningAtZ{2} =
    proofCopyPermutationPolys1OpeningAtZG /\
    proofCopyPermutationPolys2OpeningAtZ{2} =
    proofCopyPermutationPolys2OpeningAtZG /\
    proofCopyPermutationGrandProductOpeningAtZOmega{2} =
    proofCopyPermutationGrandProductOpeningAtZOmegaG /\
    proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
    proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
    proofLookupTableTypePolyOpeningAtZ{2} =
    proofLookupTableTypePolyOpeningAtZG /\
    proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
    proofLookupGrandProductOpeningAtZOmega{2} =
    proofLookupGrandProductOpeningAtZOmegaG /\
    proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
    proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
    proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
    proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
    proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
    proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
   to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
   to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
   to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
   to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
   to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
   to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
   to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
   to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
   to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
   to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
   to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
   proofCopyPermutationGrandProductXG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
   proofCopyPermutationGrandProductYG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
   proofLookupGrandProductXG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
   proofLookupGrandProductYG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
   proofQuotientPolyParts0XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
   proofQuotientPolyParts0YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
   proofQuotientPolyParts1XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
   proofQuotientPolyParts1YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
   proofQuotientPolyParts2XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
   proofQuotientPolyParts2YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
   proofQuotientPolyParts3XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
   proofQuotientPolyParts3YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
   proofQuotientPolyOpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
   proofStatePolys0OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
   proofStatePolys1OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
   proofStatePolys2OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
   proofStatePolys3OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
   proofStatePolys3OpeningAtZOmegaG /\
   to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
   proofGateSelectors0OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys0OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys1OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys2OpeningAtZG /\
   to_uint
     (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
   proofLookupTPolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
   proofLookupSelectorPolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
   proofLookupTableTypePolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupSPolyOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupGrandProductOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupTPolyOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
   proofLinearisationPolyOpeningAtZG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
   proofOpeningProofAtZOmegaXG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
   proofOpeningProofAtZOmegaYG /\
   !Primops.reverted{1} /\
   _2{1} = (of_int publicInputG)%W256 /\
   _4{1} = (of_int proofStatePolys0XG)%W256 /\
   _6{1} = (of_int proofStatePolys0YG)%W256 /\
   _8{1} = (of_int proofStatePolys1XG)%W256 /\
   _10{1} = (of_int proofStatePolys1YG)%W256 /\
   _12{1} = (of_int proofStatePolys2XG)%W256 /\
   _14{1} = (of_int proofStatePolys2YG)%W256 /\
   _16{1} = (of_int proofStatePolys3XG)%W256 /\
   _18{1} = (of_int proofStatePolys3YG)%W256 /\
   _20{1} = (of_int stateEta{2})%W256 /\
   _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
   _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
   _27{1} = (of_int stateBeta{2})%W256 /\
   _30{1} = (of_int stateGamma{2})%W256 /\
   _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
   _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
   _37{1} = (of_int stateBetaLookup{2})%W256 /\
   _40{1} = (of_int stateGammaLookup{2})%W256 /\
   _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
   _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
   _47{1} = (of_int stateAlpha{2})%W256 /\
   _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
   _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
   _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
   _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
   _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
   _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
   _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
   _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
   (0 <= state0_22{2} && state0_22{2} < W256.modulus) /\
   (0 <= state1_22{2} && state1_22{2} < W256.modulus) /\
   (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
   (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
   (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
   (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
   (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
   (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  Primops.memory{1} = updateTranscript_memory_footprint m34 _64{1} (W256.of_int state0_22{2}) (W256.of_int state1_22{2})
).
call (updateTranscript_low_equiv_mid m34 s0_21 s1_21 proofQuotientPolyParts3YG).
skip. progress.

exists* state0_22{2}, state1_22{2}. elim*=> s0_22 s1_22.
pose m35 := updateTranscript_memory_footprint m34 (of_int proofQuotientPolyParts3YG)%W256  (W256.of_int s0_22) (W256.of_int s1_22).
seq 0 0:(
   s0_22 = state0_22{2} /\
   s1_22 = state1_22{2} /\
   sEta = _20{1} /\
   sBeta = _27{1} /\
   sGamma = _30{1} /\
   sBetaLookup = _37{1} /\
   sGammaLookup = _40{1} /\
   sAlpha = _47{1} /\
   (initialS0{2} = initialS0G /\
    initialS1{2} = initialS1G /\
    publicInput{2} = publicInputG /\
    proofStatePolys0X{2} = proofStatePolys0XG /\
    proofStatePolys0Y{2} = proofStatePolys0YG /\
    proofStatePolys1X{2} = proofStatePolys1XG /\
    proofStatePolys1Y{2} = proofStatePolys1YG /\
    proofStatePolys2X{2} = proofStatePolys2XG /\
    proofStatePolys2Y{2} = proofStatePolys2YG /\
    proofStatePolys3X{2} = proofStatePolys3XG /\
    proofStatePolys3Y{2} = proofStatePolys3YG /\
    proofLookupSPolyX{2} = proofLookupSPolyXG /\
    proofLookupSPolyY{2} = proofLookupSPolyYG /\
    proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
    proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
    proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
    proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
    proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
    proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
    proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
    proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
    proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
    proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
    proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
    proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
    proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
    proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
    proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
    proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
    proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
    proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
    proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
    proofCopyPermutationPolys0OpeningAtZ{2} =
    proofCopyPermutationPolys0OpeningAtZG /\
    proofCopyPermutationPolys1OpeningAtZ{2} =
    proofCopyPermutationPolys1OpeningAtZG /\
    proofCopyPermutationPolys2OpeningAtZ{2} =
    proofCopyPermutationPolys2OpeningAtZG /\
    proofCopyPermutationGrandProductOpeningAtZOmega{2} =
    proofCopyPermutationGrandProductOpeningAtZOmegaG /\
    proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
    proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
    proofLookupTableTypePolyOpeningAtZ{2} =
    proofLookupTableTypePolyOpeningAtZG /\
    proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
    proofLookupGrandProductOpeningAtZOmega{2} =
    proofLookupGrandProductOpeningAtZOmegaG /\
    proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
    proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
    proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
    proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
    proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
    proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
   to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
   to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
   to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
   to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
   to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
   to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
   to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
   to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
   to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
   to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
   to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
   proofCopyPermutationGrandProductXG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
   proofCopyPermutationGrandProductYG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
   proofLookupGrandProductXG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
   proofLookupGrandProductYG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
   proofQuotientPolyParts0XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
   proofQuotientPolyParts0YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
   proofQuotientPolyParts1XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
   proofQuotientPolyParts1YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
   proofQuotientPolyParts2XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
   proofQuotientPolyParts2YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
   proofQuotientPolyParts3XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
   proofQuotientPolyParts3YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
   proofQuotientPolyOpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
   proofStatePolys0OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
   proofStatePolys1OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
   proofStatePolys2OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
   proofStatePolys3OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
   proofStatePolys3OpeningAtZOmegaG /\
   to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
   proofGateSelectors0OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys0OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys1OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys2OpeningAtZG /\
   to_uint
     (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
   proofLookupTPolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
   proofLookupSelectorPolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
   proofLookupTableTypePolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupSPolyOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupGrandProductOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupTPolyOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
   proofLinearisationPolyOpeningAtZG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
   proofOpeningProofAtZOmegaXG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
   proofOpeningProofAtZOmegaYG /\
   !Primops.reverted{1} /\
   _2{1} = (of_int publicInputG)%W256 /\
   _4{1} = (of_int proofStatePolys0XG)%W256 /\
   _6{1} = (of_int proofStatePolys0YG)%W256 /\
   _8{1} = (of_int proofStatePolys1XG)%W256 /\
   _10{1} = (of_int proofStatePolys1YG)%W256 /\
   _12{1} = (of_int proofStatePolys2XG)%W256 /\
   _14{1} = (of_int proofStatePolys2YG)%W256 /\
   _16{1} = (of_int proofStatePolys3XG)%W256 /\
   _18{1} = (of_int proofStatePolys3YG)%W256 /\
   _20{1} = (of_int stateEta{2})%W256 /\
   _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
   _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
   _27{1} = (of_int stateBeta{2})%W256 /\
   _30{1} = (of_int stateGamma{2})%W256 /\
   _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
   _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
   _37{1} = (of_int stateBetaLookup{2})%W256 /\
   _40{1} = (of_int stateGammaLookup{2})%W256 /\
   _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
   _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
   _47{1} = (of_int stateAlpha{2})%W256 /\
   _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
   _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
   _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
   _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
   _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
   _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
   _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
   _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
   (0 <= state0_22{2} && state0_22{2} < W256.modulus) /\
   (0 <= state1_22{2} && state1_22{2} < W256.modulus) /\
   (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
   (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
   (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
   (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
   (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
   (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
   Primops.memory{1} = m35 /\
   W256.to_uint (mload m35 TRANSCRIPT_STATE_0_SLOT) = state0_22{2} /\
   W256.to_uint (mload m35 TRANSCRIPT_STATE_1_SLOT) = state1_22{2}
).
skip; progress;
rewrite /m35 /m34 /m33 /m32 /m31 /m30 /m29 /m28 /m27 /m26 /m25 /m24 /m23 /m22 /m21 /m20 /m19 /m18 /m17 /m16 /m15 /m14 /m13 /m12 /m11 /m10 /m9 /m8 /m7 /m6 /m5 /m4 /m3 /m2 /m1 /getTranscriptChallenge_memory_footprint /updateTranscript_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT /PROOF_STATE_POLYS_1_X_SLOT
        /PROOF_STATE_POLYS_1_Y_SLOT /PROOF_STATE_POLYS_2_X_SLOT /PROOF_STATE_POLYS_2_Y_SLOT
        /PROOF_STATE_POLYS_3_X_SLOT /PROOF_STATE_POLYS_3_Y_SLOT /PROOF_LOOKUP_S_POLY_X_SLOT
        /PROOF_LOOKUP_S_POLY_Y_SLOT /STATE_ETA_SLOT /STATE_BETA_SLOT /PROOF_STATE_POLYS_0_X_SLOT
        /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT /STATE_GAMMA_SLOT
        /STATE_BETA_LOOKUP_SLOT /STATE_GAMMA_LOOKUP_SLOT /PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT
        /PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT /STATE_ALPHA_SLOT /PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.

seq 1 1:(
   s0_22 = state0_22{2} /\
   s1_22 = state1_22{2} /\
   sEta = _20{1} /\
   sBeta = _27{1} /\
   sGamma = _30{1} /\
   sBetaLookup = _37{1} /\
   sGammaLookup = _40{1} /\
   sAlpha = _47{1} /\
   (initialS0{2} = initialS0G /\
    initialS1{2} = initialS1G /\
    publicInput{2} = publicInputG /\
    proofStatePolys0X{2} = proofStatePolys0XG /\
    proofStatePolys0Y{2} = proofStatePolys0YG /\
    proofStatePolys1X{2} = proofStatePolys1XG /\
    proofStatePolys1Y{2} = proofStatePolys1YG /\
    proofStatePolys2X{2} = proofStatePolys2XG /\
    proofStatePolys2Y{2} = proofStatePolys2YG /\
    proofStatePolys3X{2} = proofStatePolys3XG /\
    proofStatePolys3Y{2} = proofStatePolys3YG /\
    proofLookupSPolyX{2} = proofLookupSPolyXG /\
    proofLookupSPolyY{2} = proofLookupSPolyYG /\
    proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
    proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
    proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
    proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
    proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
    proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
    proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
    proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
    proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
    proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
    proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
    proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
    proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
    proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
    proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
    proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
    proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
    proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
    proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
    proofCopyPermutationPolys0OpeningAtZ{2} =
    proofCopyPermutationPolys0OpeningAtZG /\
    proofCopyPermutationPolys1OpeningAtZ{2} =
    proofCopyPermutationPolys1OpeningAtZG /\
    proofCopyPermutationPolys2OpeningAtZ{2} =
    proofCopyPermutationPolys2OpeningAtZG /\
    proofCopyPermutationGrandProductOpeningAtZOmega{2} =
    proofCopyPermutationGrandProductOpeningAtZOmegaG /\
    proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
    proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
    proofLookupTableTypePolyOpeningAtZ{2} =
    proofLookupTableTypePolyOpeningAtZG /\
    proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
    proofLookupGrandProductOpeningAtZOmega{2} =
    proofLookupGrandProductOpeningAtZOmegaG /\
    proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
    proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
    proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
    proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
    proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
    proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
   to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
   to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
   to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
   to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
   to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
   to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
   to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
   to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
   to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
   to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
   to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
   proofCopyPermutationGrandProductXG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
   proofCopyPermutationGrandProductYG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
   proofLookupGrandProductXG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
   proofLookupGrandProductYG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
   proofQuotientPolyParts0XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
   proofQuotientPolyParts0YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
   proofQuotientPolyParts1XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
   proofQuotientPolyParts1YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
   proofQuotientPolyParts2XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
   proofQuotientPolyParts2YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
   proofQuotientPolyParts3XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
   proofQuotientPolyParts3YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
   proofQuotientPolyOpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
   proofStatePolys0OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
   proofStatePolys1OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
   proofStatePolys2OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
   proofStatePolys3OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
   proofStatePolys3OpeningAtZOmegaG /\
   to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
   proofGateSelectors0OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys0OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys1OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys2OpeningAtZG /\
   to_uint
     (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
   proofLookupTPolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
   proofLookupSelectorPolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
   proofLookupTableTypePolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupSPolyOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupGrandProductOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupTPolyOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
   proofLinearisationPolyOpeningAtZG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
   proofOpeningProofAtZOmegaXG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
   proofOpeningProofAtZOmegaYG /\
   !Primops.reverted{1} /\
   _2{1} = (of_int publicInputG)%W256 /\
   _4{1} = (of_int proofStatePolys0XG)%W256 /\
   _6{1} = (of_int proofStatePolys0YG)%W256 /\
   _8{1} = (of_int proofStatePolys1XG)%W256 /\
   _10{1} = (of_int proofStatePolys1YG)%W256 /\
   _12{1} = (of_int proofStatePolys2XG)%W256 /\
   _14{1} = (of_int proofStatePolys2YG)%W256 /\
   _16{1} = (of_int proofStatePolys3XG)%W256 /\
   _18{1} = (of_int proofStatePolys3YG)%W256 /\
   _20{1} = (of_int stateEta{2})%W256 /\
   _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
   _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
   _27{1} = (of_int stateBeta{2})%W256 /\
   _30{1} = (of_int stateGamma{2})%W256 /\
   _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
   _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
   _37{1} = (of_int stateBetaLookup{2})%W256 /\
   _40{1} = (of_int stateGammaLookup{2})%W256 /\
   _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
   _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
   _47{1} = (of_int stateAlpha{2})%W256 /\
   _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
   _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
   _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
   _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
   _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
   _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
   _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
   _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
   z{1}   = (of_int stateZ{2})%W256 /\
   (0 <= state0_22{2} && state0_22{2} < W256.modulus) /\
   (0 <= state1_22{2} && state1_22{2} < W256.modulus) /\
   (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
   (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
   (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
   (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
   (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
   (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
   (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
   Primops.memory{1} = getTranscriptChallenge_memory_footprint m35 6
).
call (getTranscriptChallenge_low_equiv_mid m35 s0_22 s1_22 6).
skip. progress.

exists* z{1}; elim*=> sZ.
pose m36 := getTranscriptChallenge_memory_footprint m35 6.
pose m37 := mstore m36 STATE_Z_SLOT sZ.
seq 1 0:(
   s0_22 = state0_22{2} /\
   s1_22 = state1_22{2} /\
   sEta = _20{1} /\
   sBeta = _27{1} /\
   sGamma = _30{1} /\
   sBetaLookup = _37{1} /\
   sGammaLookup = _40{1} /\
   sAlpha = _47{1} /\
   sZ = z{1} /\
   (initialS0{2} = initialS0G /\
    initialS1{2} = initialS1G /\
    publicInput{2} = publicInputG /\
    proofStatePolys0X{2} = proofStatePolys0XG /\
    proofStatePolys0Y{2} = proofStatePolys0YG /\
    proofStatePolys1X{2} = proofStatePolys1XG /\
    proofStatePolys1Y{2} = proofStatePolys1YG /\
    proofStatePolys2X{2} = proofStatePolys2XG /\
    proofStatePolys2Y{2} = proofStatePolys2YG /\
    proofStatePolys3X{2} = proofStatePolys3XG /\
    proofStatePolys3Y{2} = proofStatePolys3YG /\
    proofLookupSPolyX{2} = proofLookupSPolyXG /\
    proofLookupSPolyY{2} = proofLookupSPolyYG /\
    proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
    proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
    proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
    proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
    proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
    proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
    proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
    proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
    proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
    proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
    proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
    proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
    proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
    proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
    proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
    proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
    proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
    proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
    proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
    proofCopyPermutationPolys0OpeningAtZ{2} =
    proofCopyPermutationPolys0OpeningAtZG /\
    proofCopyPermutationPolys1OpeningAtZ{2} =
    proofCopyPermutationPolys1OpeningAtZG /\
    proofCopyPermutationPolys2OpeningAtZ{2} =
    proofCopyPermutationPolys2OpeningAtZG /\
    proofCopyPermutationGrandProductOpeningAtZOmega{2} =
    proofCopyPermutationGrandProductOpeningAtZOmegaG /\
    proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
    proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
    proofLookupTableTypePolyOpeningAtZ{2} =
    proofLookupTableTypePolyOpeningAtZG /\
    proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
    proofLookupGrandProductOpeningAtZOmega{2} =
    proofLookupGrandProductOpeningAtZOmegaG /\
    proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
    proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
    proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
    proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
    proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
    proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
   to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
   to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
   to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
   to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
   to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
   to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
   to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
   to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
   to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
   to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
   to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
   proofCopyPermutationGrandProductXG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
   proofCopyPermutationGrandProductYG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
   proofLookupGrandProductXG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
   proofLookupGrandProductYG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
   proofQuotientPolyParts0XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
   proofQuotientPolyParts0YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
   proofQuotientPolyParts1XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
   proofQuotientPolyParts1YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
   proofQuotientPolyParts2XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
   proofQuotientPolyParts2YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
   proofQuotientPolyParts3XG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
   proofQuotientPolyParts3YG /\
   to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
   proofQuotientPolyOpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
   proofStatePolys0OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
   proofStatePolys1OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
   proofStatePolys2OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
   proofStatePolys3OpeningAtZG /\
   to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
   proofStatePolys3OpeningAtZOmegaG /\
   to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
   proofGateSelectors0OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys0OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys1OpeningAtZG /\
   to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
   proofCopyPermutationPolys2OpeningAtZG /\
   to_uint
     (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
   proofLookupTPolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
   proofLookupSelectorPolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
   proofLookupTableTypePolyOpeningAtZG /\
   to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupSPolyOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupGrandProductOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
   proofLookupTPolyOpeningAtZOmegaG /\
   to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
   proofLinearisationPolyOpeningAtZG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
   proofOpeningProofAtZOmegaXG /\
   to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
   proofOpeningProofAtZOmegaYG /\
   !Primops.reverted{1} /\
   _2{1} = (of_int publicInputG)%W256 /\
   _4{1} = (of_int proofStatePolys0XG)%W256 /\
   _6{1} = (of_int proofStatePolys0YG)%W256 /\
   _8{1} = (of_int proofStatePolys1XG)%W256 /\
   _10{1} = (of_int proofStatePolys1YG)%W256 /\
   _12{1} = (of_int proofStatePolys2XG)%W256 /\
   _14{1} = (of_int proofStatePolys2YG)%W256 /\
   _16{1} = (of_int proofStatePolys3XG)%W256 /\
   _18{1} = (of_int proofStatePolys3YG)%W256 /\
   _20{1} = (of_int stateEta{2})%W256 /\
   _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
   _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
   _27{1} = (of_int stateBeta{2})%W256 /\
   _30{1} = (of_int stateGamma{2})%W256 /\
   _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
   _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
   _37{1} = (of_int stateBetaLookup{2})%W256 /\
   _40{1} = (of_int stateGammaLookup{2})%W256 /\
   _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
   _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
   _47{1} = (of_int stateAlpha{2})%W256 /\
   _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
   _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
   _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
   _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
   _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
   _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
   _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
   _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
   z{1}   = (of_int stateZ{2})%W256 /\
   (0 <= state0_22{2} && state0_22{2} < W256.modulus) /\
   (0 <= state1_22{2} && state1_22{2} < W256.modulus) /\
   (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
   (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
   (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
   (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
   (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
   (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
   (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
   Primops.memory{1} = m37
).
call{1} (ConcretePrimops.mstore_pspec m36 STATE_Z_SLOT sZ).
skip; progress.

seq 1 1:(
  s0_22 = state0_22{2} /\
  s1_22 = state1_22{2} /\
  sEta = _20{1} /\
  sBeta = _27{1} /\
  sGamma = _30{1} /\
  sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\
  sAlpha = _47{1} /\
  sZ = z{1} /\
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
  z{1} = (of_int stateZ{2})%W256 /\
  _68{1} = (of_int stateZInDomain{2})%W256 /\
  (0 <= state0_22{2} && state0_22{2} < W256.modulus) /\
  (0 <= state1_22{2} && state1_22{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
  (0 <= stateZInDomain{2} < Constants.R) /\
  Primops.memory{1} = modexp_memory_footprint m37 z{1} (of_int Constants.DOMAIN_SIZE)%W256 _68{1}
).
call (modexp_low_equiv_mid m37 sZ (of_int Constants.DOMAIN_SIZE)%W256).
skip; progress.
rewrite Constants.DOMAIN_SIZE_int W256.to_uintK. reflexivity.
rewrite W256.of_uintK mod_eq_self; try by simplify. apply (int_lt_lt_trans _ (2^253)  _). progress.
progress. rewrite Constants.DOMAIN_SIZE_int W256.to_uintK. reflexivity.

exists* _68{1}; elim*=> sZInDomainSize.
pose m38 := modexp_memory_footprint m37 sZ (of_int Constants.DOMAIN_SIZE)%W256 sZInDomainSize.
pose m39 := mstore m38 STATE_Z_IN_DOMAIN_SIZE sZInDomainSize.
seq 1 0:(
  s0_22 = state0_22{2} /\
  s1_22 = state1_22{2} /\
  sEta = _20{1} /\
  sBeta = _27{1} /\
  sGamma = _30{1} /\
  sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\
  sAlpha = _47{1} /\
  sZ = z{1} /\
  sZInDomainSize = _68{1} /\
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
  z{1} = (of_int stateZ{2})%W256 /\
  _68{1} = (of_int stateZInDomain{2})%W256 /\
  (0 <= state0_22{2} && state0_22{2} < W256.modulus) /\
  (0 <= state1_22{2} && state1_22{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
  (0 <= stateZInDomain{2} && stateZInDomain{2} < Constants.R) /\
  Primops.memory{1} = m39
).
call{1} (ConcretePrimops.mstore_pspec m38 STATE_Z_IN_DOMAIN_SIZE sZInDomainSize).
skip; progress.

seq 1 0:(
  s0_22 = state0_22{2} /\
  s1_22 = state1_22{2} /\
  sEta = _20{1} /\
  sBeta = _27{1} /\
  sGamma = _30{1} /\
  sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\
  sAlpha = _47{1} /\
  sZ = z{1} /\
  sZInDomainSize = _68{1} /\
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
  z{1} = (of_int stateZ{2})%W256 /\
  _68{1} = (of_int stateZInDomain{2})%W256 /\
  _71{1} = (of_int proofQuotientPolyOpeningAtZ{2})%W256 /\
  (0 <= state0_22{2} && state0_22{2} < W256.modulus) /\
  (0 <= state1_22{2} && state1_22{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
  (0 <= stateZInDomain{2} && stateZInDomain{2} < Constants.R) /\
  Primops.memory{1} = m39 /\
  W256.to_uint (mload m39 TRANSCRIPT_STATE_0_SLOT) = state0_22{2} /\
  W256.to_uint (mload m39 TRANSCRIPT_STATE_1_SLOT) = state1_22{2}
).
call{1} (ConcretePrimops.mload_pspec m39 PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT).
skip; progress;
rewrite /m39 /m38 /m37 /m36 /m35 /m34 /m33 /m32 /m31 /m30 /m29 /m28 /m27 /m26 /m25 /m24 /m23 /m22 /m21 /m20 /m19 /m18 /m17 /m16 /m15 /m14 /m13 /m12 /m11 /m10 /m9 /m8 /m7 /m6 /m5 /m4 /m3 /m2 /m1 /getTranscriptChallenge_memory_footprint /updateTranscript_memory_footprint /modexp_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT /PROOF_STATE_POLYS_1_X_SLOT
        /PROOF_STATE_POLYS_1_Y_SLOT /PROOF_STATE_POLYS_2_X_SLOT /PROOF_STATE_POLYS_2_Y_SLOT
        /PROOF_STATE_POLYS_3_X_SLOT /PROOF_STATE_POLYS_3_Y_SLOT /PROOF_LOOKUP_S_POLY_X_SLOT
        /PROOF_LOOKUP_S_POLY_Y_SLOT /STATE_ETA_SLOT /STATE_BETA_SLOT /PROOF_STATE_POLYS_0_X_SLOT
        /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT /STATE_GAMMA_SLOT
        /STATE_BETA_LOOKUP_SLOT /STATE_GAMMA_LOOKUP_SLOT /PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT
        /PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT /STATE_ALPHA_SLOT /PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT /STATE_Z_SLOT /STATE_Z_IN_DOMAIN_SIZE
        /PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT.
do 9! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 9! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff; try (exists 1; by simplify).
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.
do 9! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.

seq 1 1:(
  s0_22 = state0_22{2} /\
  s1_22 = state1_22{2} /\
  sEta = _20{1} /\
  sBeta = _27{1} /\
  sGamma = _30{1} /\
  sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\
  sAlpha = _47{1} /\
  sZ = z{1} /\
  sZInDomainSize = _68{1} /\
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
  z{1} = (of_int stateZ{2})%W256 /\
  _68{1} = (of_int stateZInDomain{2})%W256 /\
  _71{1} = (of_int proofQuotientPolyOpeningAtZ{2})%W256 /\
  (0 <= state0_23{2} && state0_23{2} < W256.modulus) /\
  (0 <= state1_23{2} && state1_23{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
  (0 <= stateZInDomain{2} && stateZInDomain{2} < Constants.R) /\
  Primops.memory{1} = updateTranscript_memory_footprint m39 _71{1} (W256.of_int state0_23{2}) (W256.of_int state1_23{2})
).
call (updateTranscript_low_equiv_mid m39 s0_22 s1_22 proofQuotientPolyOpeningAtZG).
skip. progress.

exists* state0_23{2}, state1_23{2}. elim*=> s0_23 s1_23.
pose m40 := updateTranscript_memory_footprint m39 (of_int proofQuotientPolyOpeningAtZG)%W256 (W256.of_int s0_23) (W256.of_int s1_23).
seq 1 0:(
  s0_23 = state0_23{2} /\
  s1_23 = state1_23{2} /\
  sEta = _20{1} /\
  sBeta = _27{1} /\
  sGamma = _30{1} /\
  sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\
  sAlpha = _47{1} /\
  sZ = z{1} /\
  sZInDomainSize = _68{1} /\
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
  z{1} = (of_int stateZ{2})%W256 /\
  _68{1} = (of_int stateZInDomain{2})%W256 /\
  _71{1} = (of_int proofQuotientPolyOpeningAtZ{2})%W256 /\
  _73{1} = (of_int proofStatePolys0OpeningAtZ{2})%W256 /\
  (0 <= state0_23{2} && state0_23{2} < W256.modulus) /\
  (0 <= state1_23{2} && state1_23{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
  (0 <= stateZInDomain{2} && stateZInDomain{2} < Constants.R) /\
  Primops.memory{1} = m40 /\
  W256.to_uint (mload m40 TRANSCRIPT_STATE_0_SLOT) = state0_23{2} /\
  W256.to_uint (mload m40 TRANSCRIPT_STATE_1_SLOT) = state1_23{2}
).
call{1} (ConcretePrimops.mload_pspec m40 PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT).
skip; progress;
rewrite /m40 /m39 /m38 /m37 /m36 /m35 /m34 /m33 /m32 /m31 /m30 /m29 /m28 /m27 /m26 /m25 /m24 /m23 /m22 /m21 /m20 /m19 /m18 /m17 /m16 /m15 /m14 /m13 /m12 /m11 /m10 /m9 /m8 /m7 /m6 /m5 /m4 /m3 /m2 /m1 /getTranscriptChallenge_memory_footprint /updateTranscript_memory_footprint /modexp_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT /PROOF_STATE_POLYS_1_X_SLOT
        /PROOF_STATE_POLYS_1_Y_SLOT /PROOF_STATE_POLYS_2_X_SLOT /PROOF_STATE_POLYS_2_Y_SLOT
        /PROOF_STATE_POLYS_3_X_SLOT /PROOF_STATE_POLYS_3_Y_SLOT /PROOF_LOOKUP_S_POLY_X_SLOT
        /PROOF_LOOKUP_S_POLY_Y_SLOT /STATE_ETA_SLOT /STATE_BETA_SLOT /PROOF_STATE_POLYS_0_X_SLOT
        /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT /STATE_GAMMA_SLOT
        /STATE_BETA_LOOKUP_SLOT /STATE_GAMMA_LOOKUP_SLOT /PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT
        /PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT /STATE_ALPHA_SLOT /PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT /STATE_Z_SLOT /STATE_Z_IN_DOMAIN_SIZE
        /PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 9! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.

seq 1 1:(
  s0_23 = state0_23{2} /\
  s1_23 = state1_23{2} /\
  sEta = _20{1} /\
  sBeta = _27{1} /\
  sGamma = _30{1} /\
  sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\
  sAlpha = _47{1} /\
  sZ = z{1} /\
  sZInDomainSize = _68{1} /\
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
  z{1} = (of_int stateZ{2})%W256 /\
  _68{1} = (of_int stateZInDomain{2})%W256 /\
  _71{1} = (of_int proofQuotientPolyOpeningAtZ{2})%W256 /\
  _73{1} = (of_int proofStatePolys0OpeningAtZ{2})%W256 /\
  (0 <= state0_24{2} && state0_24{2} < W256.modulus) /\
  (0 <= state1_24{2} && state1_24{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
  (0 <= stateZInDomain{2} && stateZInDomain{2} < Constants.R) /\
  Primops.memory{1} = updateTranscript_memory_footprint m40 _73{1} (W256.of_int state0_24{2}) (W256.of_int state1_24{2})
).
call (updateTranscript_low_equiv_mid m40 s0_23 s1_23 proofStatePolys0OpeningAtZG).
skip. progress.

exists* state0_24{2}, state1_24{2}. elim*=> s0_24 s1_24.
pose m41 := updateTranscript_memory_footprint m40 (of_int proofStatePolys0OpeningAtZG)%W256 (W256.of_int s0_24) (W256.of_int s1_24).
seq 1 0:(
  s0_24 = state0_24{2} /\
  s1_24 = state1_24{2} /\
  sEta = _20{1} /\
  sBeta = _27{1} /\
  sGamma = _30{1} /\
  sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\
  sAlpha = _47{1} /\
  sZ = z{1} /\
  sZInDomainSize = _68{1} /\
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
  z{1} = (of_int stateZ{2})%W256 /\
  _68{1} = (of_int stateZInDomain{2})%W256 /\
  _71{1} = (of_int proofQuotientPolyOpeningAtZ{2})%W256 /\
  _73{1} = (of_int proofStatePolys0OpeningAtZ{2})%W256 /\
  _75{1} = (of_int proofStatePolys1OpeningAtZ{2})%W256 /\
  (0 <= state0_24{2} && state0_24{2} < W256.modulus) /\
  (0 <= state1_24{2} && state1_24{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
  (0 <= stateZInDomain{2} && stateZInDomain{2} < Constants.R) /\
  Primops.memory{1} = m41 /\
  W256.to_uint (mload m41 TRANSCRIPT_STATE_0_SLOT) = state0_24{2} /\
  W256.to_uint (mload m41 TRANSCRIPT_STATE_1_SLOT) = state1_24{2}
).
call{1} (ConcretePrimops.mload_pspec m41 PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT).
skip; progress;
rewrite /m41 /m40 /m39 /m38 /m37 /m36 /m35 /m34 /m33 /m32 /m31 /m30 /m29 /m28 /m27 /m26 /m25 /m24 /m23 /m22 /m21 /m20 /m19 /m18 /m17 /m16 /m15 /m14 /m13 /m12 /m11 /m10 /m9 /m8 /m7 /m6 /m5 /m4 /m3 /m2 /m1 /getTranscriptChallenge_memory_footprint /updateTranscript_memory_footprint /modexp_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT /PROOF_STATE_POLYS_1_X_SLOT
        /PROOF_STATE_POLYS_1_Y_SLOT /PROOF_STATE_POLYS_2_X_SLOT /PROOF_STATE_POLYS_2_Y_SLOT
        /PROOF_STATE_POLYS_3_X_SLOT /PROOF_STATE_POLYS_3_Y_SLOT /PROOF_LOOKUP_S_POLY_X_SLOT
        /PROOF_LOOKUP_S_POLY_Y_SLOT /STATE_ETA_SLOT /STATE_BETA_SLOT /PROOF_STATE_POLYS_0_X_SLOT
        /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT /STATE_GAMMA_SLOT
        /STATE_BETA_LOOKUP_SLOT /STATE_GAMMA_LOOKUP_SLOT /PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT
        /PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT /STATE_ALPHA_SLOT /PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT /STATE_Z_SLOT /STATE_Z_IN_DOMAIN_SIZE
        /PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 9! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.

seq 1 1:(
  s0_24 = state0_24{2} /\
  s1_24 = state1_24{2} /\
  sEta = _20{1} /\
  sBeta = _27{1} /\
  sGamma = _30{1} /\
  sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\
  sAlpha = _47{1} /\
  sZ = z{1} /\
  sZInDomainSize = _68{1} /\
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
  z{1} = (of_int stateZ{2})%W256 /\
  _68{1} = (of_int stateZInDomain{2})%W256 /\
  _71{1} = (of_int proofQuotientPolyOpeningAtZ{2})%W256 /\
  _73{1} = (of_int proofStatePolys0OpeningAtZ{2})%W256 /\
  _75{1} = (of_int proofStatePolys1OpeningAtZ{2})%W256 /\
  (0 <= state0_25{2} && state0_25{2} < W256.modulus) /\
  (0 <= state1_25{2} && state1_25{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
  (0 <= stateZInDomain{2} && stateZInDomain{2} < Constants.R) /\
  Primops.memory{1} = updateTranscript_memory_footprint m41 _75{1} (W256.of_int state0_25{2}) (W256.of_int state1_25{2})
).
call (updateTranscript_low_equiv_mid m41 s0_24 s1_24 proofStatePolys1OpeningAtZG).
skip. progress.

exists* state0_25{2}, state1_25{2}. elim*=> s0_25 s1_25.
pose m42 := updateTranscript_memory_footprint m41 (of_int proofStatePolys1OpeningAtZG)%W256 (W256.of_int s0_25) (W256.of_int s1_25).
seq 1 0:(
  s0_25 = state0_25{2} /\
  s1_25 = state1_25{2} /\
  sEta = _20{1} /\
  sBeta = _27{1} /\
  sGamma = _30{1} /\
  sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\
  sAlpha = _47{1} /\
  sZ = z{1} /\
  sZInDomainSize = _68{1} /\
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
  z{1} = (of_int stateZ{2})%W256 /\
  _68{1} = (of_int stateZInDomain{2})%W256 /\
  _71{1} = (of_int proofQuotientPolyOpeningAtZ{2})%W256 /\
  _73{1} = (of_int proofStatePolys0OpeningAtZ{2})%W256 /\
  _75{1} = (of_int proofStatePolys1OpeningAtZ{2})%W256 /\
  _77{1} = (of_int proofStatePolys2OpeningAtZ{2})%W256 /\
  (0 <= state0_25{2} && state0_25{2} < W256.modulus) /\
  (0 <= state1_25{2} && state1_25{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
  (0 <= stateZInDomain{2} && stateZInDomain{2} < Constants.R) /\
  Primops.memory{1} = m42 /\
  W256.to_uint (mload m42 TRANSCRIPT_STATE_0_SLOT) = state0_25{2} /\
  W256.to_uint (mload m42 TRANSCRIPT_STATE_1_SLOT) = state1_25{2}
).
call{1} (ConcretePrimops.mload_pspec m42 PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT).
skip; progress;
rewrite /m42 /m41 /m40 /m39 /m38 /m37 /m36 /m35 /m34 /m33 /m32 /m31 /m30 /m29 /m28 /m27 /m26 /m25 /m24 /m23 /m22 /m21 /m20 /m19 /m18 /m17 /m16 /m15 /m14 /m13 /m12 /m11 /m10 /m9 /m8 /m7 /m6 /m5 /m4 /m3 /m2 /m1 /getTranscriptChallenge_memory_footprint /updateTranscript_memory_footprint /modexp_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT /PROOF_STATE_POLYS_1_X_SLOT
        /PROOF_STATE_POLYS_1_Y_SLOT /PROOF_STATE_POLYS_2_X_SLOT /PROOF_STATE_POLYS_2_Y_SLOT
        /PROOF_STATE_POLYS_3_X_SLOT /PROOF_STATE_POLYS_3_Y_SLOT /PROOF_LOOKUP_S_POLY_X_SLOT
        /PROOF_LOOKUP_S_POLY_Y_SLOT /STATE_ETA_SLOT /STATE_BETA_SLOT /PROOF_STATE_POLYS_0_X_SLOT
        /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT /STATE_GAMMA_SLOT
        /STATE_BETA_LOOKUP_SLOT /STATE_GAMMA_LOOKUP_SLOT /PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT
        /PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT /STATE_ALPHA_SLOT /PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT /STATE_Z_SLOT /STATE_Z_IN_DOMAIN_SIZE
        /PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT
        /PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 9! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.

seq 1 1:(
  s0_25 = state0_25{2} /\
  s1_25 = state1_25{2} /\
  sEta = _20{1} /\
  sBeta = _27{1} /\
  sGamma = _30{1} /\
  sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\
  sAlpha = _47{1} /\
  sZ = z{1} /\
  sZInDomainSize = _68{1} /\
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
  z{1} = (of_int stateZ{2})%W256 /\
  _68{1} = (of_int stateZInDomain{2})%W256 /\
  _71{1} = (of_int proofQuotientPolyOpeningAtZ{2})%W256 /\
  _73{1} = (of_int proofStatePolys0OpeningAtZ{2})%W256 /\
  _75{1} = (of_int proofStatePolys1OpeningAtZ{2})%W256 /\
  _77{1} = (of_int proofStatePolys2OpeningAtZ{2})%W256 /\
  (0 <= state0_26{2} && state0_26{2} < W256.modulus) /\
  (0 <= state1_26{2} && state1_26{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
  (0 <= stateZInDomain{2} && stateZInDomain{2} < Constants.R) /\
  Primops.memory{1} = updateTranscript_memory_footprint m42 _77{1} (W256.of_int state0_26{2}) (W256.of_int state1_26{2})
).
call (updateTranscript_low_equiv_mid m42 s0_25 s1_25 proofStatePolys2OpeningAtZG).
skip. progress.

exists* state0_26{2}, state1_26{2}. elim*=> s0_26 s1_26.
pose m43 := updateTranscript_memory_footprint m42 (of_int proofStatePolys2OpeningAtZG)%W256 (W256.of_int s0_26) (W256.of_int s1_26).
seq 1 0:(
  s0_26 = state0_26{2} /\
  s1_26 = state1_26{2} /\
  sEta = _20{1} /\
  sBeta = _27{1} /\
  sGamma = _30{1} /\
  sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\
  sAlpha = _47{1} /\
  sZ = z{1} /\
  sZInDomainSize = _68{1} /\
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
  z{1} = (of_int stateZ{2})%W256 /\
  _68{1} = (of_int stateZInDomain{2})%W256 /\
  _71{1} = (of_int proofQuotientPolyOpeningAtZ{2})%W256 /\
  _73{1} = (of_int proofStatePolys0OpeningAtZ{2})%W256 /\
  _75{1} = (of_int proofStatePolys1OpeningAtZ{2})%W256 /\
  _77{1} = (of_int proofStatePolys2OpeningAtZ{2})%W256 /\
  _79{1} = (of_int proofStatePolys3OpeningAtZ{2})%W256 /\
  (0 <= state0_26{2} && state0_26{2} < W256.modulus) /\
  (0 <= state1_26{2} && state1_26{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
  (0 <= stateZInDomain{2} && stateZInDomain{2} < Constants.R) /\
  Primops.memory{1} = m43 /\
  W256.to_uint (mload m43 TRANSCRIPT_STATE_0_SLOT) = state0_26{2} /\
  W256.to_uint (mload m43 TRANSCRIPT_STATE_1_SLOT) = state1_26{2}
).
call{1} (ConcretePrimops.mload_pspec m43 PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT).
skip; progress;
rewrite /m43 /m42 /m41 /m40 /m39 /m38 /m37 /m36 /m35 /m34 /m33 /m32 /m31 /m30 /m29 /m28 /m27 /m26 /m25 /m24 /m23 /m22 /m21 /m20 /m19 /m18 /m17 /m16 /m15 /m14 /m13 /m12 /m11 /m10 /m9 /m8 /m7 /m6 /m5 /m4 /m3 /m2 /m1 /getTranscriptChallenge_memory_footprint /updateTranscript_memory_footprint /modexp_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT /PROOF_STATE_POLYS_1_X_SLOT
        /PROOF_STATE_POLYS_1_Y_SLOT /PROOF_STATE_POLYS_2_X_SLOT /PROOF_STATE_POLYS_2_Y_SLOT
        /PROOF_STATE_POLYS_3_X_SLOT /PROOF_STATE_POLYS_3_Y_SLOT /PROOF_LOOKUP_S_POLY_X_SLOT
        /PROOF_LOOKUP_S_POLY_Y_SLOT /STATE_ETA_SLOT /STATE_BETA_SLOT /PROOF_STATE_POLYS_0_X_SLOT
        /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT /STATE_GAMMA_SLOT
        /STATE_BETA_LOOKUP_SLOT /STATE_GAMMA_LOOKUP_SLOT /PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT
        /PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT /STATE_ALPHA_SLOT /PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT /STATE_Z_SLOT /STATE_Z_IN_DOMAIN_SIZE
        /PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT
        /PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 9! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.

seq 1 1:(
  s0_26 = state0_26{2} /\
  s1_26 = state1_26{2} /\
  sEta = _20{1} /\
  sBeta = _27{1} /\
  sGamma = _30{1} /\
  sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\
  sAlpha = _47{1} /\
  sZ = z{1} /\
  sZInDomainSize = _68{1} /\
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
  z{1} = (of_int stateZ{2})%W256 /\
  _68{1} = (of_int stateZInDomain{2})%W256 /\
  _71{1} = (of_int proofQuotientPolyOpeningAtZ{2})%W256 /\
  _73{1} = (of_int proofStatePolys0OpeningAtZ{2})%W256 /\
  _75{1} = (of_int proofStatePolys1OpeningAtZ{2})%W256 /\
  _77{1} = (of_int proofStatePolys2OpeningAtZ{2})%W256 /\
  _79{1} = (of_int proofStatePolys3OpeningAtZ{2})%W256 /\
  (0 <= state0_27{2} && state0_27{2} < W256.modulus) /\
  (0 <= state1_27{2} && state1_27{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
  (0 <= stateZInDomain{2} && stateZInDomain{2} < Constants.R) /\
  Primops.memory{1} = updateTranscript_memory_footprint m43 _79{1} (W256.of_int state0_27{2}) (W256.of_int state1_27{2})
).
call (updateTranscript_low_equiv_mid m43 s0_26 s1_26 proofStatePolys3OpeningAtZG).
skip. progress.

exists* state0_27{2}, state1_27{2}. elim*=> s0_27 s1_27.
pose m44 := updateTranscript_memory_footprint m43 (of_int proofStatePolys3OpeningAtZG)%W256 (W256.of_int s0_27) (W256.of_int s1_27).
seq 1 0:(
  s0_27 = state0_27{2} /\
  s1_27 = state1_27{2} /\
  sEta = _20{1} /\
  sBeta = _27{1} /\
  sGamma = _30{1} /\
  sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\
  sAlpha = _47{1} /\
  sZ = z{1} /\
  sZInDomainSize = _68{1} /\
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
  z{1} = (of_int stateZ{2})%W256 /\
  _68{1} = (of_int stateZInDomain{2})%W256 /\
  _71{1} = (of_int proofQuotientPolyOpeningAtZ{2})%W256 /\
  _73{1} = (of_int proofStatePolys0OpeningAtZ{2})%W256 /\
  _75{1} = (of_int proofStatePolys1OpeningAtZ{2})%W256 /\
  _77{1} = (of_int proofStatePolys2OpeningAtZ{2})%W256 /\
  _79{1} = (of_int proofStatePolys3OpeningAtZ{2})%W256 /\
  _81{1} = (of_int proofStatePolys3OpeningAtZOmega{2})%W256 /\
  (0 <= state0_27{2} && state0_27{2} < W256.modulus) /\
  (0 <= state1_27{2} && state1_27{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
  (0 <= stateZInDomain{2} && stateZInDomain{2} < Constants.R) /\
  Primops.memory{1} = m44 /\
  W256.to_uint (mload m44 TRANSCRIPT_STATE_0_SLOT) = state0_27{2} /\
  W256.to_uint (mload m44 TRANSCRIPT_STATE_1_SLOT) = state1_27{2}
).
call{1} (ConcretePrimops.mload_pspec m44 PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT).
skip; progress;
rewrite /m44 /m43 /m42 /m41 /m40 /m39 /m38 /m37 /m36 /m35 /m34 /m33 /m32 /m31 /m30 /m29 /m28 /m27 /m26 /m25 /m24 /m23 /m22 /m21 /m20 /m19 /m18 /m17 /m16 /m15 /m14 /m13 /m12 /m11 /m10 /m9 /m8 /m7 /m6 /m5 /m4 /m3 /m2 /m1 /getTranscriptChallenge_memory_footprint /updateTranscript_memory_footprint /modexp_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT /PROOF_STATE_POLYS_1_X_SLOT
        /PROOF_STATE_POLYS_1_Y_SLOT /PROOF_STATE_POLYS_2_X_SLOT /PROOF_STATE_POLYS_2_Y_SLOT
        /PROOF_STATE_POLYS_3_X_SLOT /PROOF_STATE_POLYS_3_Y_SLOT /PROOF_LOOKUP_S_POLY_X_SLOT
        /PROOF_LOOKUP_S_POLY_Y_SLOT /STATE_ETA_SLOT /STATE_BETA_SLOT /PROOF_STATE_POLYS_0_X_SLOT
        /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT /STATE_GAMMA_SLOT
        /STATE_BETA_LOOKUP_SLOT /STATE_GAMMA_LOOKUP_SLOT /PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT
        /PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT /STATE_ALPHA_SLOT /PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT /STATE_Z_SLOT /STATE_Z_IN_DOMAIN_SIZE
        /PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT
        /PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 9! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.

seq 1 1:(
  s0_27 = state0_27{2} /\
  s1_27 = state1_27{2} /\
  sEta = _20{1} /\
  sBeta = _27{1} /\
  sGamma = _30{1} /\
  sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\
  sAlpha = _47{1} /\
  sZ = z{1} /\
  sZInDomainSize = _68{1} /\
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
  z{1} = (of_int stateZ{2})%W256 /\
  _68{1} = (of_int stateZInDomain{2})%W256 /\
  _71{1} = (of_int proofQuotientPolyOpeningAtZ{2})%W256 /\
  _73{1} = (of_int proofStatePolys0OpeningAtZ{2})%W256 /\
  _75{1} = (of_int proofStatePolys1OpeningAtZ{2})%W256 /\
  _77{1} = (of_int proofStatePolys2OpeningAtZ{2})%W256 /\
  _79{1} = (of_int proofStatePolys3OpeningAtZ{2})%W256 /\
  _81{1} = (of_int proofStatePolys3OpeningAtZOmega{2})%W256 /\
  (0 <= state0_28{2} && state0_28{2} < W256.modulus) /\
  (0 <= state1_28{2} && state1_28{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
  (0 <= stateZInDomain{2} && stateZInDomain{2} < Constants.R) /\
  Primops.memory{1} = updateTranscript_memory_footprint m44 _81{1} (W256.of_int state0_28{2}) (W256.of_int state1_28{2})
).
call (updateTranscript_low_equiv_mid m44 s0_27 s1_27 proofStatePolys3OpeningAtZOmegaG).
skip. progress.

exists* state0_28{2}, state1_28{2}. elim*=> s0_28 s1_28.
pose m45 := updateTranscript_memory_footprint m44 (of_int proofStatePolys3OpeningAtZOmegaG)%W256 (W256.of_int s0_28) (W256.of_int s1_28).
seq 1 0:(
  s0_28 = state0_28{2} /\
  s1_28 = state1_28{2} /\
  sEta = _20{1} /\
  sBeta = _27{1} /\
  sGamma = _30{1} /\
  sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\
  sAlpha = _47{1} /\
  sZ = z{1} /\
  sZInDomainSize = _68{1} /\
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
  z{1} = (of_int stateZ{2})%W256 /\
  _68{1} = (of_int stateZInDomain{2})%W256 /\
  _71{1} = (of_int proofQuotientPolyOpeningAtZ{2})%W256 /\
  _73{1} = (of_int proofStatePolys0OpeningAtZ{2})%W256 /\
  _75{1} = (of_int proofStatePolys1OpeningAtZ{2})%W256 /\
  _77{1} = (of_int proofStatePolys2OpeningAtZ{2})%W256 /\
  _79{1} = (of_int proofStatePolys3OpeningAtZ{2})%W256 /\
  _81{1} = (of_int proofStatePolys3OpeningAtZOmega{2})%W256 /\
  _83{1} = (of_int proofGateSelectors0OpeningAtZ{2})%W256 /\
  (0 <= state0_28{2} && state0_28{2} < W256.modulus) /\
  (0 <= state1_28{2} && state1_28{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
  (0 <= stateZInDomain{2} && stateZInDomain{2} < Constants.R) /\
  Primops.memory{1} = m45 /\
  W256.to_uint (mload m45 TRANSCRIPT_STATE_0_SLOT) = state0_28{2} /\
  W256.to_uint (mload m45 TRANSCRIPT_STATE_1_SLOT) = state1_28{2}
).
call{1} (ConcretePrimops.mload_pspec m45 PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT).
skip; progress;
rewrite /m45 /m44 /m43 /m42 /m41 /m40 /m39 /m38 /m37 /m36 /m35 /m34 /m33 /m32 /m31 /m30 /m29 /m28 /m27 /m26 /m25 /m24 /m23 /m22 /m21 /m20 /m19 /m18 /m17 /m16 /m15 /m14 /m13 /m12 /m11 /m10 /m9 /m8 /m7 /m6 /m5 /m4 /m3 /m2 /m1 /getTranscriptChallenge_memory_footprint /updateTranscript_memory_footprint /modexp_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT /PROOF_STATE_POLYS_1_X_SLOT
        /PROOF_STATE_POLYS_1_Y_SLOT /PROOF_STATE_POLYS_2_X_SLOT /PROOF_STATE_POLYS_2_Y_SLOT
        /PROOF_STATE_POLYS_3_X_SLOT /PROOF_STATE_POLYS_3_Y_SLOT /PROOF_LOOKUP_S_POLY_X_SLOT
        /PROOF_LOOKUP_S_POLY_Y_SLOT /STATE_ETA_SLOT /STATE_BETA_SLOT /PROOF_STATE_POLYS_0_X_SLOT
        /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT /STATE_GAMMA_SLOT
        /STATE_BETA_LOOKUP_SLOT /STATE_GAMMA_LOOKUP_SLOT /PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT
        /PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT /STATE_ALPHA_SLOT /PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT /STATE_Z_SLOT /STATE_Z_IN_DOMAIN_SIZE
        /PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT
        /PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT
        /PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 9! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.

seq 1 1:(
  s0_28 = state0_28{2} /\
  s1_28 = state1_28{2} /\
  sEta = _20{1} /\
  sBeta = _27{1} /\
  sGamma = _30{1} /\
  sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\
  sAlpha = _47{1} /\
  sZ = z{1} /\
  sZInDomainSize = _68{1} /\
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
  z{1} = (of_int stateZ{2})%W256 /\
  _68{1} = (of_int stateZInDomain{2})%W256 /\
  _71{1} = (of_int proofQuotientPolyOpeningAtZ{2})%W256 /\
  _73{1} = (of_int proofStatePolys0OpeningAtZ{2})%W256 /\
  _75{1} = (of_int proofStatePolys1OpeningAtZ{2})%W256 /\
  _77{1} = (of_int proofStatePolys2OpeningAtZ{2})%W256 /\
  _79{1} = (of_int proofStatePolys3OpeningAtZ{2})%W256 /\
  _81{1} = (of_int proofStatePolys3OpeningAtZOmega{2})%W256 /\
  _83{1} = (of_int proofGateSelectors0OpeningAtZ{2})%W256 /\
  (0 <= state0_29{2} && state0_29{2} < W256.modulus) /\
  (0 <= state1_29{2} && state1_29{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
  (0 <= stateZInDomain{2} && stateZInDomain{2} < Constants.R) /\
  Primops.memory{1} = updateTranscript_memory_footprint m45 _83{1} (W256.of_int state0_29{2}) (W256.of_int state1_29{2})
).
call (updateTranscript_low_equiv_mid m45 s0_28 s1_28 proofGateSelectors0OpeningAtZG).
skip. progress.

exists* state0_29{2}, state1_29{2}. elim*=> s0_29 s1_29.
pose m46 := updateTranscript_memory_footprint m45 (of_int proofGateSelectors0OpeningAtZG)%W256 (W256.of_int s0_29) (W256.of_int s1_29).
seq 1 0:(
  s0_29 = state0_29{2} /\
  s1_29 = state1_29{2} /\
  sEta = _20{1} /\
  sBeta = _27{1} /\
  sGamma = _30{1} /\
  sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\
  sAlpha = _47{1} /\
  sZ = z{1} /\
  sZInDomainSize = _68{1} /\
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
  z{1} = (of_int stateZ{2})%W256 /\
  _68{1} = (of_int stateZInDomain{2})%W256 /\
  _71{1} = (of_int proofQuotientPolyOpeningAtZ{2})%W256 /\
  _73{1} = (of_int proofStatePolys0OpeningAtZ{2})%W256 /\
  _75{1} = (of_int proofStatePolys1OpeningAtZ{2})%W256 /\
  _77{1} = (of_int proofStatePolys2OpeningAtZ{2})%W256 /\
  _79{1} = (of_int proofStatePolys3OpeningAtZ{2})%W256 /\
  _81{1} = (of_int proofStatePolys3OpeningAtZOmega{2})%W256 /\
  _83{1} = (of_int proofGateSelectors0OpeningAtZ{2})%W256 /\
  _85{1} = (of_int proofCopyPermutationPolys0OpeningAtZ{2})%W256 /\
  (0 <= state0_29{2} && state0_29{2} < W256.modulus) /\
  (0 <= state1_29{2} && state1_29{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
  (0 <= stateZInDomain{2} && stateZInDomain{2} < Constants.R) /\
  Primops.memory{1} = m46 /\
  W256.to_uint (mload m46 TRANSCRIPT_STATE_0_SLOT) = state0_29{2} /\
  W256.to_uint (mload m46 TRANSCRIPT_STATE_1_SLOT) = state1_29{2}
).
call{1} (ConcretePrimops.mload_pspec m46 PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT).
skip; progress;
rewrite /m46 /m45 /m44 /m43 /m42 /m41 /m40 /m39 /m38 /m37 /m36 /m35 /m34 /m33 /m32 /m31 /m30 /m29 /m28 /m27 /m26 /m25 /m24 /m23 /m22 /m21 /m20 /m19 /m18 /m17 /m16 /m15 /m14 /m13 /m12 /m11 /m10 /m9 /m8 /m7 /m6 /m5 /m4 /m3 /m2 /m1 /getTranscriptChallenge_memory_footprint /updateTranscript_memory_footprint /modexp_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT /PROOF_STATE_POLYS_1_X_SLOT
        /PROOF_STATE_POLYS_1_Y_SLOT /PROOF_STATE_POLYS_2_X_SLOT /PROOF_STATE_POLYS_2_Y_SLOT
        /PROOF_STATE_POLYS_3_X_SLOT /PROOF_STATE_POLYS_3_Y_SLOT /PROOF_LOOKUP_S_POLY_X_SLOT
        /PROOF_LOOKUP_S_POLY_Y_SLOT /STATE_ETA_SLOT /STATE_BETA_SLOT /PROOF_STATE_POLYS_0_X_SLOT
        /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT /STATE_GAMMA_SLOT
        /STATE_BETA_LOOKUP_SLOT /STATE_GAMMA_LOOKUP_SLOT /PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT
        /PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT /STATE_ALPHA_SLOT /PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT /STATE_Z_SLOT /STATE_Z_IN_DOMAIN_SIZE
        /PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT
        /PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT
        /PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT /PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 9! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.

seq 1 1:(
  s0_29 = state0_29{2} /\
  s1_29 = state1_29{2} /\
  sEta = _20{1} /\
  sBeta = _27{1} /\
  sGamma = _30{1} /\
  sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\
  sAlpha = _47{1} /\
  sZ = z{1} /\
  sZInDomainSize = _68{1} /\
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
  z{1} = (of_int stateZ{2})%W256 /\
  _68{1} = (of_int stateZInDomain{2})%W256 /\
  _71{1} = (of_int proofQuotientPolyOpeningAtZ{2})%W256 /\
  _73{1} = (of_int proofStatePolys0OpeningAtZ{2})%W256 /\
  _75{1} = (of_int proofStatePolys1OpeningAtZ{2})%W256 /\
  _77{1} = (of_int proofStatePolys2OpeningAtZ{2})%W256 /\
  _79{1} = (of_int proofStatePolys3OpeningAtZ{2})%W256 /\
  _81{1} = (of_int proofStatePolys3OpeningAtZOmega{2})%W256 /\
  _83{1} = (of_int proofGateSelectors0OpeningAtZ{2})%W256 /\
  _85{1} = (of_int proofCopyPermutationPolys0OpeningAtZ{2})%W256 /\
  (0 <= state0_30{2} && state0_30{2} < W256.modulus) /\
  (0 <= state1_30{2} && state1_30{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
  (0 <= stateZInDomain{2} && stateZInDomain{2} < Constants.R) /\
  Primops.memory{1} = updateTranscript_memory_footprint m46 _85{1} (W256.of_int state0_30{2}) (W256.of_int state1_30{2})
).
call (updateTranscript_low_equiv_mid m46 s0_29 s1_29 proofCopyPermutationPolys0OpeningAtZG).
skip. progress.

exists* state0_30{2}, state1_30{2}. elim*=> s0_30 s1_30.
pose m47 := updateTranscript_memory_footprint m46 (of_int proofCopyPermutationPolys0OpeningAtZG)%W256 (W256.of_int s0_30) (W256.of_int s1_30).
seq 1 0:(
  s0_30 = state0_30{2} /\
  s1_30 = state1_30{2} /\
  sEta = _20{1} /\
  sBeta = _27{1} /\
  sGamma = _30{1} /\
  sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\
  sAlpha = _47{1} /\
  sZ = z{1} /\
  sZInDomainSize = _68{1} /\
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
  z{1} = (of_int stateZ{2})%W256 /\
  _68{1} = (of_int stateZInDomain{2})%W256 /\
  _71{1} = (of_int proofQuotientPolyOpeningAtZ{2})%W256 /\
  _73{1} = (of_int proofStatePolys0OpeningAtZ{2})%W256 /\
  _75{1} = (of_int proofStatePolys1OpeningAtZ{2})%W256 /\
  _77{1} = (of_int proofStatePolys2OpeningAtZ{2})%W256 /\
  _79{1} = (of_int proofStatePolys3OpeningAtZ{2})%W256 /\
  _81{1} = (of_int proofStatePolys3OpeningAtZOmega{2})%W256 /\
  _83{1} = (of_int proofGateSelectors0OpeningAtZ{2})%W256 /\
  _85{1} = (of_int proofCopyPermutationPolys0OpeningAtZ{2})%W256 /\
  _87{1} = (of_int proofCopyPermutationPolys1OpeningAtZ{2})%W256 /\
  (0 <= state0_30{2} && state0_30{2} < W256.modulus) /\
  (0 <= state1_30{2} && state1_30{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
  (0 <= stateZInDomain{2} && stateZInDomain{2} < Constants.R) /\
  Primops.memory{1} = m47 /\
  W256.to_uint (mload m47 TRANSCRIPT_STATE_0_SLOT) = state0_30{2} /\
  W256.to_uint (mload m47 TRANSCRIPT_STATE_1_SLOT) = state1_30{2}
).
call{1} (ConcretePrimops.mload_pspec m47 PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT).
skip; progress;
rewrite /m47 /m46 /m45 /m44 /m43 /m42 /m41 /m40 /m39 /m38 /m37 /m36 /m35 /m34 /m33 /m32 /m31 /m30 /m29 /m28 /m27 /m26 /m25 /m24 /m23 /m22 /m21 /m20 /m19 /m18 /m17 /m16 /m15 /m14 /m13 /m12 /m11 /m10 /m9 /m8 /m7 /m6 /m5 /m4 /m3 /m2 /m1 /getTranscriptChallenge_memory_footprint /updateTranscript_memory_footprint /modexp_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT /PROOF_STATE_POLYS_1_X_SLOT
        /PROOF_STATE_POLYS_1_Y_SLOT /PROOF_STATE_POLYS_2_X_SLOT /PROOF_STATE_POLYS_2_Y_SLOT
        /PROOF_STATE_POLYS_3_X_SLOT /PROOF_STATE_POLYS_3_Y_SLOT /PROOF_LOOKUP_S_POLY_X_SLOT
        /PROOF_LOOKUP_S_POLY_Y_SLOT /STATE_ETA_SLOT /STATE_BETA_SLOT /PROOF_STATE_POLYS_0_X_SLOT
        /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT /STATE_GAMMA_SLOT
        /STATE_BETA_LOOKUP_SLOT /STATE_GAMMA_LOOKUP_SLOT /PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT
        /PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT /STATE_ALPHA_SLOT /PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT /STATE_Z_SLOT /STATE_Z_IN_DOMAIN_SIZE
        /PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT
        /PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT
        /PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT /PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT /PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 9! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.

seq 1 1:(
  s0_30 = state0_30{2} /\
  s1_30 = state1_30{2} /\
  sEta = _20{1} /\
  sBeta = _27{1} /\
  sGamma = _30{1} /\
  sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\
  sAlpha = _47{1} /\
  sZ = z{1} /\
  sZInDomainSize = _68{1} /\
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
  z{1} = (of_int stateZ{2})%W256 /\
  _68{1} = (of_int stateZInDomain{2})%W256 /\
  _71{1} = (of_int proofQuotientPolyOpeningAtZ{2})%W256 /\
  _73{1} = (of_int proofStatePolys0OpeningAtZ{2})%W256 /\
  _75{1} = (of_int proofStatePolys1OpeningAtZ{2})%W256 /\
  _77{1} = (of_int proofStatePolys2OpeningAtZ{2})%W256 /\
  _79{1} = (of_int proofStatePolys3OpeningAtZ{2})%W256 /\
  _81{1} = (of_int proofStatePolys3OpeningAtZOmega{2})%W256 /\
  _83{1} = (of_int proofGateSelectors0OpeningAtZ{2})%W256 /\
  _85{1} = (of_int proofCopyPermutationPolys0OpeningAtZ{2})%W256 /\
  _87{1} = (of_int proofCopyPermutationPolys1OpeningAtZ{2})%W256 /\
  (0 <= state0_31{2} && state0_31{2} < W256.modulus) /\
  (0 <= state1_31{2} && state1_31{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
  (0 <= stateZInDomain{2} && stateZInDomain{2} < Constants.R) /\
  Primops.memory{1} = updateTranscript_memory_footprint m47 _87{1} (W256.of_int state0_31{2}) (W256.of_int state1_31{2})
).
call (updateTranscript_low_equiv_mid m47 s0_30 s1_30 proofCopyPermutationPolys1OpeningAtZG).
skip. progress.

exists* state0_31{2}, state1_31{2}. elim*=> s0_31 s1_31.
pose m48 := updateTranscript_memory_footprint m47 (of_int proofCopyPermutationPolys1OpeningAtZG)%W256 (W256.of_int s0_31) (W256.of_int s1_31).
seq 1 0:(
  s0_31 = state0_31{2} /\
  s1_31 = state1_31{2} /\
  sEta = _20{1} /\
  sBeta = _27{1} /\
  sGamma = _30{1} /\
  sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\
  sAlpha = _47{1} /\
  sZ = z{1} /\
  sZInDomainSize = _68{1} /\
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
  z{1} = (of_int stateZ{2})%W256 /\
  _68{1} = (of_int stateZInDomain{2})%W256 /\
  _71{1} = (of_int proofQuotientPolyOpeningAtZ{2})%W256 /\
  _73{1} = (of_int proofStatePolys0OpeningAtZ{2})%W256 /\
  _75{1} = (of_int proofStatePolys1OpeningAtZ{2})%W256 /\
  _77{1} = (of_int proofStatePolys2OpeningAtZ{2})%W256 /\
  _79{1} = (of_int proofStatePolys3OpeningAtZ{2})%W256 /\
  _81{1} = (of_int proofStatePolys3OpeningAtZOmega{2})%W256 /\
  _83{1} = (of_int proofGateSelectors0OpeningAtZ{2})%W256 /\
  _85{1} = (of_int proofCopyPermutationPolys0OpeningAtZ{2})%W256 /\
  _87{1} = (of_int proofCopyPermutationPolys1OpeningAtZ{2})%W256 /\
  _89{1} = (of_int proofCopyPermutationPolys2OpeningAtZ{2})%W256 /\
  (0 <= state0_31{2} && state0_31{2} < W256.modulus) /\
  (0 <= state1_31{2} && state1_31{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
  (0 <= stateZInDomain{2} && stateZInDomain{2} < Constants.R) /\
  Primops.memory{1} = m48 /\
  W256.to_uint (mload m48 TRANSCRIPT_STATE_0_SLOT) = state0_31{2} /\
  W256.to_uint (mload m48 TRANSCRIPT_STATE_1_SLOT) = state1_31{2}
).
call{1} (ConcretePrimops.mload_pspec m48 PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT).
skip; progress;
rewrite /m48 /m47 /m46 /m45 /m44 /m43 /m42 /m41 /m40 /m39 /m38 /m37 /m36 /m35 /m34 /m33 /m32 /m31 /m30 /m29 /m28 /m27 /m26 /m25 /m24 /m23 /m22 /m21 /m20 /m19 /m18 /m17 /m16 /m15 /m14 /m13 /m12 /m11 /m10 /m9 /m8 /m7 /m6 /m5 /m4 /m3 /m2 /m1 /getTranscriptChallenge_memory_footprint /updateTranscript_memory_footprint /modexp_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT /PROOF_STATE_POLYS_1_X_SLOT
        /PROOF_STATE_POLYS_1_Y_SLOT /PROOF_STATE_POLYS_2_X_SLOT /PROOF_STATE_POLYS_2_Y_SLOT
        /PROOF_STATE_POLYS_3_X_SLOT /PROOF_STATE_POLYS_3_Y_SLOT /PROOF_LOOKUP_S_POLY_X_SLOT
        /PROOF_LOOKUP_S_POLY_Y_SLOT /STATE_ETA_SLOT /STATE_BETA_SLOT /PROOF_STATE_POLYS_0_X_SLOT
        /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT /STATE_GAMMA_SLOT
        /STATE_BETA_LOOKUP_SLOT /STATE_GAMMA_LOOKUP_SLOT /PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT
        /PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT /STATE_ALPHA_SLOT /PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT /STATE_Z_SLOT /STATE_Z_IN_DOMAIN_SIZE
        /PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT
        /PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT
        /PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT /PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT /PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT
        /PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 9! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.

seq 1 1:(
  s0_31 = state0_31{2} /\
  s1_31 = state1_31{2} /\
  sEta = _20{1} /\
  sBeta = _27{1} /\
  sGamma = _30{1} /\
  sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\
  sAlpha = _47{1} /\
  sZ = z{1} /\
  sZInDomainSize = _68{1} /\
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
  z{1} = (of_int stateZ{2})%W256 /\
  _68{1} = (of_int stateZInDomain{2})%W256 /\
  _71{1} = (of_int proofQuotientPolyOpeningAtZ{2})%W256 /\
  _73{1} = (of_int proofStatePolys0OpeningAtZ{2})%W256 /\
  _75{1} = (of_int proofStatePolys1OpeningAtZ{2})%W256 /\
  _77{1} = (of_int proofStatePolys2OpeningAtZ{2})%W256 /\
  _79{1} = (of_int proofStatePolys3OpeningAtZ{2})%W256 /\
  _81{1} = (of_int proofStatePolys3OpeningAtZOmega{2})%W256 /\
  _83{1} = (of_int proofGateSelectors0OpeningAtZ{2})%W256 /\
  _85{1} = (of_int proofCopyPermutationPolys0OpeningAtZ{2})%W256 /\
  _87{1} = (of_int proofCopyPermutationPolys1OpeningAtZ{2})%W256 /\
  _89{1} = (of_int proofCopyPermutationPolys2OpeningAtZ{2})%W256 /\
  (0 <= state0_32{2} && state0_32{2} < W256.modulus) /\
  (0 <= state1_32{2} && state1_32{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
  (0 <= stateZInDomain{2} && stateZInDomain{2} < Constants.R) /\
  Primops.memory{1} = updateTranscript_memory_footprint m48 _89{1} (W256.of_int state0_32{2}) (W256.of_int state1_32{2})
).
call (updateTranscript_low_equiv_mid m48 s0_31 s1_31 proofCopyPermutationPolys2OpeningAtZG).
skip. progress.

exists* state0_32{2}, state1_32{2}. elim*=> s0_32 s1_32.
pose m49 := updateTranscript_memory_footprint m48 (of_int proofCopyPermutationPolys2OpeningAtZG)%W256 (W256.of_int s0_32) (W256.of_int s1_32).
seq 1 0:(
  s0_32 = state0_32{2} /\
  s1_32 = state1_32{2} /\
  sEta = _20{1} /\
  sBeta = _27{1} /\
  sGamma = _30{1} /\
  sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\
  sAlpha = _47{1} /\
  sZ = z{1} /\
  sZInDomainSize = _68{1} /\
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
  z{1} = (of_int stateZ{2})%W256 /\
  _68{1} = (of_int stateZInDomain{2})%W256 /\
  _71{1} = (of_int proofQuotientPolyOpeningAtZ{2})%W256 /\
  _73{1} = (of_int proofStatePolys0OpeningAtZ{2})%W256 /\
  _75{1} = (of_int proofStatePolys1OpeningAtZ{2})%W256 /\
  _77{1} = (of_int proofStatePolys2OpeningAtZ{2})%W256 /\
  _79{1} = (of_int proofStatePolys3OpeningAtZ{2})%W256 /\
  _81{1} = (of_int proofStatePolys3OpeningAtZOmega{2})%W256 /\
  _83{1} = (of_int proofGateSelectors0OpeningAtZ{2})%W256 /\
  _85{1} = (of_int proofCopyPermutationPolys0OpeningAtZ{2})%W256 /\
  _87{1} = (of_int proofCopyPermutationPolys1OpeningAtZ{2})%W256 /\
  _89{1} = (of_int proofCopyPermutationPolys2OpeningAtZ{2})%W256 /\
  _91{1} = (of_int proofCopyPermutationGrandProductOpeningAtZOmega{2})%W256 /\
  (0 <= state0_32{2} && state0_32{2} < W256.modulus) /\
  (0 <= state1_32{2} && state1_32{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
  (0 <= stateZInDomain{2} && stateZInDomain{2} < Constants.R) /\
  Primops.memory{1} = m49 /\
  W256.to_uint (mload m49 TRANSCRIPT_STATE_0_SLOT) = state0_32{2} /\
  W256.to_uint (mload m49 TRANSCRIPT_STATE_1_SLOT) = state1_32{2}
).
call{1} (ConcretePrimops.mload_pspec m49 PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT).
skip; progress;
rewrite /m49 /m48 /m47 /m46 /m45 /m44 /m43 /m42 /m41 /m40 /m39 /m38 /m37 /m36 /m35 /m34 /m33 /m32 /m31 /m30 /m29 /m28 /m27 /m26 /m25 /m24 /m23 /m22 /m21 /m20 /m19 /m18 /m17 /m16 /m15 /m14 /m13 /m12 /m11 /m10 /m9 /m8 /m7 /m6 /m5 /m4 /m3 /m2 /m1 /getTranscriptChallenge_memory_footprint /updateTranscript_memory_footprint /modexp_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT /PROOF_STATE_POLYS_1_X_SLOT
        /PROOF_STATE_POLYS_1_Y_SLOT /PROOF_STATE_POLYS_2_X_SLOT /PROOF_STATE_POLYS_2_Y_SLOT
        /PROOF_STATE_POLYS_3_X_SLOT /PROOF_STATE_POLYS_3_Y_SLOT /PROOF_LOOKUP_S_POLY_X_SLOT
        /PROOF_LOOKUP_S_POLY_Y_SLOT /STATE_ETA_SLOT /STATE_BETA_SLOT /PROOF_STATE_POLYS_0_X_SLOT
        /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT /STATE_GAMMA_SLOT
        /STATE_BETA_LOOKUP_SLOT /STATE_GAMMA_LOOKUP_SLOT /PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT
        /PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT /STATE_ALPHA_SLOT /PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT /STATE_Z_SLOT /STATE_Z_IN_DOMAIN_SIZE
        /PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT
        /PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT
        /PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT /PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT /PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT
        /PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 9! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.

seq 1 1:(
  s0_32 = state0_32{2} /\
  s1_32 = state1_32{2} /\
  sEta = _20{1} /\
  sBeta = _27{1} /\
  sGamma = _30{1} /\
  sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\
  sAlpha = _47{1} /\
  sZ = z{1} /\
  sZInDomainSize = _68{1} /\
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
  z{1} = (of_int stateZ{2})%W256 /\
  _68{1} = (of_int stateZInDomain{2})%W256 /\
  _71{1} = (of_int proofQuotientPolyOpeningAtZ{2})%W256 /\
  _73{1} = (of_int proofStatePolys0OpeningAtZ{2})%W256 /\
  _75{1} = (of_int proofStatePolys1OpeningAtZ{2})%W256 /\
  _77{1} = (of_int proofStatePolys2OpeningAtZ{2})%W256 /\
  _79{1} = (of_int proofStatePolys3OpeningAtZ{2})%W256 /\
  _81{1} = (of_int proofStatePolys3OpeningAtZOmega{2})%W256 /\
  _83{1} = (of_int proofGateSelectors0OpeningAtZ{2})%W256 /\
  _85{1} = (of_int proofCopyPermutationPolys0OpeningAtZ{2})%W256 /\
  _87{1} = (of_int proofCopyPermutationPolys1OpeningAtZ{2})%W256 /\
  _89{1} = (of_int proofCopyPermutationPolys2OpeningAtZ{2})%W256 /\
  _91{1} = (of_int proofCopyPermutationGrandProductOpeningAtZOmega{2})%W256 /\
  (0 <= state0_33{2} && state0_33{2} < W256.modulus) /\
  (0 <= state1_33{2} && state1_33{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
  (0 <= stateZInDomain{2} && stateZInDomain{2} < Constants.R) /\
  Primops.memory{1} = updateTranscript_memory_footprint m49 _91{1} (W256.of_int state0_33{2}) (W256.of_int state1_33{2})
).
call (updateTranscript_low_equiv_mid m49 s0_32 s1_32 proofCopyPermutationGrandProductOpeningAtZOmegaG).
skip. progress.

exists* state0_33{2}, state1_33{2}. elim*=> s0_33 s1_33.
pose m50 := updateTranscript_memory_footprint m49 (of_int proofCopyPermutationGrandProductOpeningAtZOmegaG)%W256 (W256.of_int s0_33) (W256.of_int s1_33).
seq 1 0:(
  s0_33 = state0_33{2} /\
  s1_33 = state1_33{2} /\
  sEta = _20{1} /\
  sBeta = _27{1} /\
  sGamma = _30{1} /\
  sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\
  sAlpha = _47{1} /\
  sZ = z{1} /\
  sZInDomainSize = _68{1} /\
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
  z{1} = (of_int stateZ{2})%W256 /\
  _68{1} = (of_int stateZInDomain{2})%W256 /\
  _71{1} = (of_int proofQuotientPolyOpeningAtZ{2})%W256 /\
  _73{1} = (of_int proofStatePolys0OpeningAtZ{2})%W256 /\
  _75{1} = (of_int proofStatePolys1OpeningAtZ{2})%W256 /\
  _77{1} = (of_int proofStatePolys2OpeningAtZ{2})%W256 /\
  _79{1} = (of_int proofStatePolys3OpeningAtZ{2})%W256 /\
  _81{1} = (of_int proofStatePolys3OpeningAtZOmega{2})%W256 /\
  _83{1} = (of_int proofGateSelectors0OpeningAtZ{2})%W256 /\
  _85{1} = (of_int proofCopyPermutationPolys0OpeningAtZ{2})%W256 /\
  _87{1} = (of_int proofCopyPermutationPolys1OpeningAtZ{2})%W256 /\
  _89{1} = (of_int proofCopyPermutationPolys2OpeningAtZ{2})%W256 /\
  _91{1} = (of_int proofCopyPermutationGrandProductOpeningAtZOmega{2})%W256 /\
  _93{1} = (of_int proofLookupTPolyOpeningAtZ{2})%W256 /\
  (0 <= state0_33{2} && state0_33{2} < W256.modulus) /\
  (0 <= state1_33{2} && state1_33{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
  (0 <= stateZInDomain{2} && stateZInDomain{2} < Constants.R) /\
  Primops.memory{1} = m50 /\
  W256.to_uint (mload m50 TRANSCRIPT_STATE_0_SLOT) = state0_33{2} /\
  W256.to_uint (mload m50 TRANSCRIPT_STATE_1_SLOT) = state1_33{2}
).
call{1} (ConcretePrimops.mload_pspec m50 PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT).
skip; progress;
rewrite /m50 /m49 /m48 /m47 /m46 /m45 /m44 /m43 /m42 /m41 /m40 /m39 /m38 /m37 /m36 /m35 /m34 /m33 /m32 /m31 /m30 /m29 /m28 /m27 /m26 /m25 /m24 /m23 /m22 /m21 /m20 /m19 /m18 /m17 /m16 /m15 /m14 /m13 /m12 /m11 /m10 /m9 /m8 /m7 /m6 /m5 /m4 /m3 /m2 /m1 /getTranscriptChallenge_memory_footprint /updateTranscript_memory_footprint /modexp_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT /PROOF_STATE_POLYS_1_X_SLOT
        /PROOF_STATE_POLYS_1_Y_SLOT /PROOF_STATE_POLYS_2_X_SLOT /PROOF_STATE_POLYS_2_Y_SLOT
        /PROOF_STATE_POLYS_3_X_SLOT /PROOF_STATE_POLYS_3_Y_SLOT /PROOF_LOOKUP_S_POLY_X_SLOT
        /PROOF_LOOKUP_S_POLY_Y_SLOT /STATE_ETA_SLOT /STATE_BETA_SLOT /PROOF_STATE_POLYS_0_X_SLOT
        /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT /STATE_GAMMA_SLOT
        /STATE_BETA_LOOKUP_SLOT /STATE_GAMMA_LOOKUP_SLOT /PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT
        /PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT /STATE_ALPHA_SLOT /PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT /STATE_Z_SLOT /STATE_Z_IN_DOMAIN_SIZE
        /PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT
        /PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT
        /PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT /PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT /PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT
        /PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT /PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 9! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.

seq 1 1:(
  s0_33 = state0_33{2} /\
  s1_33 = state1_33{2} /\
  sEta = _20{1} /\
  sBeta = _27{1} /\
  sGamma = _30{1} /\
  sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\
  sAlpha = _47{1} /\
  sZ = z{1} /\
  sZInDomainSize = _68{1} /\
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
  z{1} = (of_int stateZ{2})%W256 /\
  _68{1} = (of_int stateZInDomain{2})%W256 /\
  _71{1} = (of_int proofQuotientPolyOpeningAtZ{2})%W256 /\
  _73{1} = (of_int proofStatePolys0OpeningAtZ{2})%W256 /\
  _75{1} = (of_int proofStatePolys1OpeningAtZ{2})%W256 /\
  _77{1} = (of_int proofStatePolys2OpeningAtZ{2})%W256 /\
  _79{1} = (of_int proofStatePolys3OpeningAtZ{2})%W256 /\
  _81{1} = (of_int proofStatePolys3OpeningAtZOmega{2})%W256 /\
  _83{1} = (of_int proofGateSelectors0OpeningAtZ{2})%W256 /\
  _85{1} = (of_int proofCopyPermutationPolys0OpeningAtZ{2})%W256 /\
  _87{1} = (of_int proofCopyPermutationPolys1OpeningAtZ{2})%W256 /\
  _89{1} = (of_int proofCopyPermutationPolys2OpeningAtZ{2})%W256 /\
  _91{1} = (of_int proofCopyPermutationGrandProductOpeningAtZOmega{2})%W256 /\
  _93{1} = (of_int proofLookupTPolyOpeningAtZ{2})%W256 /\
  (0 <= state0_34{2} && state0_34{2} < W256.modulus) /\
  (0 <= state1_34{2} && state1_34{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
  (0 <= stateZInDomain{2} && stateZInDomain{2} < Constants.R) /\
  Primops.memory{1} = updateTranscript_memory_footprint m50 _93{1} (W256.of_int state0_34{2}) (W256.of_int state1_34{2})
).
call (updateTranscript_low_equiv_mid m50 s0_33 s1_33 proofLookupTPolyOpeningAtZG).
skip. progress.

exists* state0_34{2}, state1_34{2}. elim*=> s0_34 s1_34.
pose m51 := updateTranscript_memory_footprint m50 (of_int proofLookupTPolyOpeningAtZG)%W256 (W256.of_int s0_34) (W256.of_int s1_34).
seq 1 0:(
  s0_34 = state0_34{2} /\
  s1_34 = state1_34{2} /\
  sEta = _20{1} /\
  sBeta = _27{1} /\
  sGamma = _30{1} /\
  sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\
  sAlpha = _47{1} /\
  sZ = z{1} /\
  sZInDomainSize = _68{1} /\
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
  z{1} = (of_int stateZ{2})%W256 /\
  _68{1} = (of_int stateZInDomain{2})%W256 /\
  _71{1} = (of_int proofQuotientPolyOpeningAtZ{2})%W256 /\
  _73{1} = (of_int proofStatePolys0OpeningAtZ{2})%W256 /\
  _75{1} = (of_int proofStatePolys1OpeningAtZ{2})%W256 /\
  _77{1} = (of_int proofStatePolys2OpeningAtZ{2})%W256 /\
  _79{1} = (of_int proofStatePolys3OpeningAtZ{2})%W256 /\
  _81{1} = (of_int proofStatePolys3OpeningAtZOmega{2})%W256 /\
  _83{1} = (of_int proofGateSelectors0OpeningAtZ{2})%W256 /\
  _85{1} = (of_int proofCopyPermutationPolys0OpeningAtZ{2})%W256 /\
  _87{1} = (of_int proofCopyPermutationPolys1OpeningAtZ{2})%W256 /\
  _89{1} = (of_int proofCopyPermutationPolys2OpeningAtZ{2})%W256 /\
  _91{1} = (of_int proofCopyPermutationGrandProductOpeningAtZOmega{2})%W256 /\
  _93{1} = (of_int proofLookupTPolyOpeningAtZ{2})%W256 /\
  _95{1} = (of_int proofLookupSelectorPolyOpeningAtZ{2})%W256 /\
  (0 <= state0_34{2} && state0_34{2} < W256.modulus) /\
  (0 <= state1_34{2} && state1_34{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
  (0 <= stateZInDomain{2} && stateZInDomain{2} < Constants.R) /\
  Primops.memory{1} = m51 /\
  W256.to_uint (mload m51 TRANSCRIPT_STATE_0_SLOT) = state0_34{2} /\
  W256.to_uint (mload m51 TRANSCRIPT_STATE_1_SLOT) = state1_34{2}
).
call{1} (ConcretePrimops.mload_pspec m51 PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT).
skip; progress;
rewrite /m51 /m50 /m49 /m48 /m47 /m46 /m45 /m44 /m43 /m42 /m41 /m40 /m39 /m38 /m37 /m36 /m35 /m34 /m33 /m32 /m31 /m30 /m29 /m28 /m27 /m26 /m25 /m24 /m23 /m22 /m21 /m20 /m19 /m18 /m17 /m16 /m15 /m14 /m13 /m12 /m11 /m10 /m9 /m8 /m7 /m6 /m5 /m4 /m3 /m2 /m1 /getTranscriptChallenge_memory_footprint /updateTranscript_memory_footprint /modexp_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT /PROOF_STATE_POLYS_1_X_SLOT
        /PROOF_STATE_POLYS_1_Y_SLOT /PROOF_STATE_POLYS_2_X_SLOT /PROOF_STATE_POLYS_2_Y_SLOT
        /PROOF_STATE_POLYS_3_X_SLOT /PROOF_STATE_POLYS_3_Y_SLOT /PROOF_LOOKUP_S_POLY_X_SLOT
        /PROOF_LOOKUP_S_POLY_Y_SLOT /STATE_ETA_SLOT /STATE_BETA_SLOT /PROOF_STATE_POLYS_0_X_SLOT
        /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT /STATE_GAMMA_SLOT
        /STATE_BETA_LOOKUP_SLOT /STATE_GAMMA_LOOKUP_SLOT /PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT
        /PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT /STATE_ALPHA_SLOT /PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT /STATE_Z_SLOT /STATE_Z_IN_DOMAIN_SIZE
        /PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT
        /PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT
        /PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT /PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT /PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT
        /PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT /PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT
        /PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 9! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.

seq 1 1:(
  s0_34 = state0_34{2} /\
  s1_34 = state1_34{2} /\
  sEta = _20{1} /\
  sBeta = _27{1} /\
  sGamma = _30{1} /\
  sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\
  sAlpha = _47{1} /\
  sZ = z{1} /\
  sZInDomainSize = _68{1} /\
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
  z{1} = (of_int stateZ{2})%W256 /\
  _68{1} = (of_int stateZInDomain{2})%W256 /\
  _71{1} = (of_int proofQuotientPolyOpeningAtZ{2})%W256 /\
  _73{1} = (of_int proofStatePolys0OpeningAtZ{2})%W256 /\
  _75{1} = (of_int proofStatePolys1OpeningAtZ{2})%W256 /\
  _77{1} = (of_int proofStatePolys2OpeningAtZ{2})%W256 /\
  _79{1} = (of_int proofStatePolys3OpeningAtZ{2})%W256 /\
  _81{1} = (of_int proofStatePolys3OpeningAtZOmega{2})%W256 /\
  _83{1} = (of_int proofGateSelectors0OpeningAtZ{2})%W256 /\
  _85{1} = (of_int proofCopyPermutationPolys0OpeningAtZ{2})%W256 /\
  _87{1} = (of_int proofCopyPermutationPolys1OpeningAtZ{2})%W256 /\
  _89{1} = (of_int proofCopyPermutationPolys2OpeningAtZ{2})%W256 /\
  _91{1} = (of_int proofCopyPermutationGrandProductOpeningAtZOmega{2})%W256 /\
  _93{1} = (of_int proofLookupTPolyOpeningAtZ{2})%W256 /\
  _95{1} = (of_int proofLookupSelectorPolyOpeningAtZ{2})%W256 /\
  (0 <= state0_35{2} && state0_35{2} < W256.modulus) /\
  (0 <= state1_35{2} && state1_35{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
  (0 <= stateZInDomain{2} && stateZInDomain{2} < Constants.R) /\
  Primops.memory{1} = updateTranscript_memory_footprint m51 _95{1} (W256.of_int state0_35{2}) (W256.of_int state1_35{2})
).
call (updateTranscript_low_equiv_mid m51 s0_34 s1_34 proofLookupSelectorPolyOpeningAtZG).
skip. progress.

exists* state0_35{2}, state1_35{2}. elim*=> s0_35 s1_35.
pose m52 := updateTranscript_memory_footprint m51 (of_int proofLookupSelectorPolyOpeningAtZG)%W256 (W256.of_int s0_35) (W256.of_int s1_35).
seq 1 0:(
  s0_35 = state0_35{2} /\
  s1_35 = state1_35{2} /\
  sEta = _20{1} /\
  sBeta = _27{1} /\
  sGamma = _30{1} /\
  sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\
  sAlpha = _47{1} /\
  sZ = z{1} /\
  sZInDomainSize = _68{1} /\
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
  z{1} = (of_int stateZ{2})%W256 /\
  _68{1} = (of_int stateZInDomain{2})%W256 /\
  _71{1} = (of_int proofQuotientPolyOpeningAtZ{2})%W256 /\
  _73{1} = (of_int proofStatePolys0OpeningAtZ{2})%W256 /\
  _75{1} = (of_int proofStatePolys1OpeningAtZ{2})%W256 /\
  _77{1} = (of_int proofStatePolys2OpeningAtZ{2})%W256 /\
  _79{1} = (of_int proofStatePolys3OpeningAtZ{2})%W256 /\
  _81{1} = (of_int proofStatePolys3OpeningAtZOmega{2})%W256 /\
  _83{1} = (of_int proofGateSelectors0OpeningAtZ{2})%W256 /\
  _85{1} = (of_int proofCopyPermutationPolys0OpeningAtZ{2})%W256 /\
  _87{1} = (of_int proofCopyPermutationPolys1OpeningAtZ{2})%W256 /\
  _89{1} = (of_int proofCopyPermutationPolys2OpeningAtZ{2})%W256 /\
  _91{1} = (of_int proofCopyPermutationGrandProductOpeningAtZOmega{2})%W256 /\
  _93{1} = (of_int proofLookupTPolyOpeningAtZ{2})%W256 /\
  _95{1} = (of_int proofLookupSelectorPolyOpeningAtZ{2})%W256 /\
  _97{1} = (of_int proofLookupTableTypePolyOpeningAtZ{2})%W256 /\
  (0 <= state0_35{2} && state0_35{2} < W256.modulus) /\
  (0 <= state1_35{2} && state1_35{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
  (0 <= stateZInDomain{2} && stateZInDomain{2} < Constants.R) /\
  Primops.memory{1} = m52 /\
  W256.to_uint (mload m52 TRANSCRIPT_STATE_0_SLOT) = state0_35{2} /\
  W256.to_uint (mload m52 TRANSCRIPT_STATE_1_SLOT) = state1_35{2}
).
call{1} (ConcretePrimops.mload_pspec m52 PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT).
skip; progress;
rewrite /m52 /m51 /m50 /m49 /m48 /m47 /m46 /m45 /m44 /m43 /m42 /m41 /m40 /m39 /m38 /m37 /m36 /m35 /m34 /m33 /m32 /m31 /m30 /m29 /m28 /m27 /m26 /m25 /m24 /m23 /m22 /m21 /m20 /m19 /m18 /m17 /m16 /m15 /m14 /m13 /m12 /m11 /m10 /m9 /m8 /m7 /m6 /m5 /m4 /m3 /m2 /m1 /getTranscriptChallenge_memory_footprint /updateTranscript_memory_footprint /modexp_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT /PROOF_STATE_POLYS_1_X_SLOT
        /PROOF_STATE_POLYS_1_Y_SLOT /PROOF_STATE_POLYS_2_X_SLOT /PROOF_STATE_POLYS_2_Y_SLOT
        /PROOF_STATE_POLYS_3_X_SLOT /PROOF_STATE_POLYS_3_Y_SLOT /PROOF_LOOKUP_S_POLY_X_SLOT
        /PROOF_LOOKUP_S_POLY_Y_SLOT /STATE_ETA_SLOT /STATE_BETA_SLOT /PROOF_STATE_POLYS_0_X_SLOT
        /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT /STATE_GAMMA_SLOT
        /STATE_BETA_LOOKUP_SLOT /STATE_GAMMA_LOOKUP_SLOT /PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT
        /PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT /STATE_ALPHA_SLOT /PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT /STATE_Z_SLOT /STATE_Z_IN_DOMAIN_SIZE
        /PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT
        /PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT
        /PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT /PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT /PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT
        /PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT /PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT
        /PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT /PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 9! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.

seq 1 1:(
  s0_35 = state0_35{2} /\
  s1_35 = state1_35{2} /\
  sEta = _20{1} /\
  sBeta = _27{1} /\
  sGamma = _30{1} /\
  sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\
  sAlpha = _47{1} /\
  sZ = z{1} /\
  sZInDomainSize = _68{1} /\
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
  z{1} = (of_int stateZ{2})%W256 /\
  _68{1} = (of_int stateZInDomain{2})%W256 /\
  _71{1} = (of_int proofQuotientPolyOpeningAtZ{2})%W256 /\
  _73{1} = (of_int proofStatePolys0OpeningAtZ{2})%W256 /\
  _75{1} = (of_int proofStatePolys1OpeningAtZ{2})%W256 /\
  _77{1} = (of_int proofStatePolys2OpeningAtZ{2})%W256 /\
  _79{1} = (of_int proofStatePolys3OpeningAtZ{2})%W256 /\
  _81{1} = (of_int proofStatePolys3OpeningAtZOmega{2})%W256 /\
  _83{1} = (of_int proofGateSelectors0OpeningAtZ{2})%W256 /\
  _85{1} = (of_int proofCopyPermutationPolys0OpeningAtZ{2})%W256 /\
  _87{1} = (of_int proofCopyPermutationPolys1OpeningAtZ{2})%W256 /\
  _89{1} = (of_int proofCopyPermutationPolys2OpeningAtZ{2})%W256 /\
  _91{1} = (of_int proofCopyPermutationGrandProductOpeningAtZOmega{2})%W256 /\
  _93{1} = (of_int proofLookupTPolyOpeningAtZ{2})%W256 /\
  _95{1} = (of_int proofLookupSelectorPolyOpeningAtZ{2})%W256 /\
  _97{1} = (of_int proofLookupTableTypePolyOpeningAtZ{2})%W256 /\
  (0 <= state0_36{2} && state0_36{2} < W256.modulus) /\
  (0 <= state1_36{2} && state1_36{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
  (0 <= stateZInDomain{2} && stateZInDomain{2} < Constants.R) /\
  Primops.memory{1} = updateTranscript_memory_footprint m52 _97{1} (W256.of_int state0_36{2}) (W256.of_int state1_36{2})
).
call (updateTranscript_low_equiv_mid m52 s0_35 s1_35 proofLookupTableTypePolyOpeningAtZG).
skip. progress.

exists* state0_36{2}, state1_36{2}. elim*=> s0_36 s1_36.
pose m53 := updateTranscript_memory_footprint m52 (of_int proofLookupTableTypePolyOpeningAtZG)%W256 (W256.of_int s0_36) (W256.of_int s1_36).
seq 1 0:(
  s0_36 = state0_36{2} /\
  s1_36 = state1_36{2} /\
  sEta = _20{1} /\
  sBeta = _27{1} /\
  sGamma = _30{1} /\
  sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\
  sAlpha = _47{1} /\
  sZ = z{1} /\
  sZInDomainSize = _68{1} /\
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
  z{1} = (of_int stateZ{2})%W256 /\
  _68{1} = (of_int stateZInDomain{2})%W256 /\
  _71{1} = (of_int proofQuotientPolyOpeningAtZ{2})%W256 /\
  _73{1} = (of_int proofStatePolys0OpeningAtZ{2})%W256 /\
  _75{1} = (of_int proofStatePolys1OpeningAtZ{2})%W256 /\
  _77{1} = (of_int proofStatePolys2OpeningAtZ{2})%W256 /\
  _79{1} = (of_int proofStatePolys3OpeningAtZ{2})%W256 /\
  _81{1} = (of_int proofStatePolys3OpeningAtZOmega{2})%W256 /\
  _83{1} = (of_int proofGateSelectors0OpeningAtZ{2})%W256 /\
  _85{1} = (of_int proofCopyPermutationPolys0OpeningAtZ{2})%W256 /\
  _87{1} = (of_int proofCopyPermutationPolys1OpeningAtZ{2})%W256 /\
  _89{1} = (of_int proofCopyPermutationPolys2OpeningAtZ{2})%W256 /\
  _91{1} = (of_int proofCopyPermutationGrandProductOpeningAtZOmega{2})%W256 /\
  _93{1} = (of_int proofLookupTPolyOpeningAtZ{2})%W256 /\
  _95{1} = (of_int proofLookupSelectorPolyOpeningAtZ{2})%W256 /\
  _97{1} = (of_int proofLookupTableTypePolyOpeningAtZ{2})%W256 /\
  _99{1} = (of_int proofLookupSPolyOpeningAtZOmega{2})%W256 /\
  (0 <= state0_36{2} && state0_36{2} < W256.modulus) /\
  (0 <= state1_36{2} && state1_36{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
  (0 <= stateZInDomain{2} && stateZInDomain{2} < Constants.R) /\
  Primops.memory{1} = m53 /\
  W256.to_uint (mload m53 TRANSCRIPT_STATE_0_SLOT) = state0_36{2} /\
  W256.to_uint (mload m53 TRANSCRIPT_STATE_1_SLOT) = state1_36{2}
).
call{1} (ConcretePrimops.mload_pspec m53 PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT).
skip; progress;
rewrite /m53 /m52 /m51 /m50 /m49 /m48 /m47 /m46 /m45 /m44 /m43 /m42 /m41 /m40 /m39 /m38 /m37 /m36 /m35 /m34 /m33 /m32 /m31 /m30 /m29 /m28 /m27 /m26 /m25 /m24 /m23 /m22 /m21 /m20 /m19 /m18 /m17 /m16 /m15 /m14 /m13 /m12 /m11 /m10 /m9 /m8 /m7 /m6 /m5 /m4 /m3 /m2 /m1 /getTranscriptChallenge_memory_footprint /updateTranscript_memory_footprint /modexp_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT /PROOF_STATE_POLYS_1_X_SLOT
        /PROOF_STATE_POLYS_1_Y_SLOT /PROOF_STATE_POLYS_2_X_SLOT /PROOF_STATE_POLYS_2_Y_SLOT
        /PROOF_STATE_POLYS_3_X_SLOT /PROOF_STATE_POLYS_3_Y_SLOT /PROOF_LOOKUP_S_POLY_X_SLOT
        /PROOF_LOOKUP_S_POLY_Y_SLOT /STATE_ETA_SLOT /STATE_BETA_SLOT /PROOF_STATE_POLYS_0_X_SLOT
        /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT /STATE_GAMMA_SLOT
        /STATE_BETA_LOOKUP_SLOT /STATE_GAMMA_LOOKUP_SLOT /PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT
        /PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT /STATE_ALPHA_SLOT /PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT /STATE_Z_SLOT /STATE_Z_IN_DOMAIN_SIZE
        /PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT
        /PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT
        /PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT /PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT /PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT
        /PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT /PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT
        /PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT /PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT /PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 9! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.

seq 1 1:(
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
  z{1} = (of_int stateZ{2})%W256 /\
  _68{1} = (of_int stateZInDomain{2})%W256 /\
  _71{1} = (of_int proofQuotientPolyOpeningAtZ{2})%W256 /\
  _73{1} = (of_int proofStatePolys0OpeningAtZ{2})%W256 /\
  _75{1} = (of_int proofStatePolys1OpeningAtZ{2})%W256 /\
  _77{1} = (of_int proofStatePolys2OpeningAtZ{2})%W256 /\
  _79{1} = (of_int proofStatePolys3OpeningAtZ{2})%W256 /\
  _81{1} = (of_int proofStatePolys3OpeningAtZOmega{2})%W256 /\
  _83{1} = (of_int proofGateSelectors0OpeningAtZ{2})%W256 /\
  _85{1} = (of_int proofCopyPermutationPolys0OpeningAtZ{2})%W256 /\
  _87{1} = (of_int proofCopyPermutationPolys1OpeningAtZ{2})%W256 /\
  _89{1} = (of_int proofCopyPermutationPolys2OpeningAtZ{2})%W256 /\
  _91{1} = (of_int proofCopyPermutationGrandProductOpeningAtZOmega{2})%W256 /\
  _93{1} = (of_int proofLookupTPolyOpeningAtZ{2})%W256 /\
  _95{1} = (of_int proofLookupSelectorPolyOpeningAtZ{2})%W256 /\
  _97{1} = (of_int proofLookupTableTypePolyOpeningAtZ{2})%W256 /\
  _99{1} = (of_int proofLookupSPolyOpeningAtZOmega{2})%W256 /\
  (0 <= state0_37{2} && state0_37{2} < W256.modulus) /\
  (0 <= state1_37{2} && state1_37{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
  (0 <= stateZInDomain{2} && stateZInDomain{2} < Constants.R) /\
  s0_36 = state0_36{2} /\
  s1_36 = state1_36{2} /\
  sEta = _20{1} /\ sBeta = _27{1} /\ sGamma = _30{1} /\ sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\ sAlpha = _47{1} /\ sZ = z{1} /\ sZInDomainSize = _68{1} /\
  Primops.memory{1} = updateTranscript_memory_footprint m53 _99{1} (W256.of_int state0_37{2}) (W256.of_int state1_37{2})
).
call (updateTranscript_low_equiv_mid m53 s0_36 s1_36 proofLookupSPolyOpeningAtZOmegaG).
skip. progress.

exists* state0_37{2}, state1_37{2}. elim*=> s0_37 s1_37.
pose m54 := updateTranscript_memory_footprint m53 (of_int proofLookupSPolyOpeningAtZOmegaG)%W256 (W256.of_int s0_37) (W256.of_int s1_37).
seq 1 0:(
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
  z{1} = (of_int stateZ{2})%W256 /\
  _68{1} = (of_int stateZInDomain{2})%W256 /\
  _71{1} = (of_int proofQuotientPolyOpeningAtZ{2})%W256 /\
  _73{1} = (of_int proofStatePolys0OpeningAtZ{2})%W256 /\
  _75{1} = (of_int proofStatePolys1OpeningAtZ{2})%W256 /\
  _77{1} = (of_int proofStatePolys2OpeningAtZ{2})%W256 /\
  _79{1} = (of_int proofStatePolys3OpeningAtZ{2})%W256 /\
  _81{1} = (of_int proofStatePolys3OpeningAtZOmega{2})%W256 /\
  _83{1} = (of_int proofGateSelectors0OpeningAtZ{2})%W256 /\
  _85{1} = (of_int proofCopyPermutationPolys0OpeningAtZ{2})%W256 /\
  _87{1} = (of_int proofCopyPermutationPolys1OpeningAtZ{2})%W256 /\
  _89{1} = (of_int proofCopyPermutationPolys2OpeningAtZ{2})%W256 /\
  _91{1} = (of_int proofCopyPermutationGrandProductOpeningAtZOmega{2})%W256 /\
  _93{1} = (of_int proofLookupTPolyOpeningAtZ{2})%W256 /\
  _95{1} = (of_int proofLookupSelectorPolyOpeningAtZ{2})%W256 /\
  _97{1} = (of_int proofLookupTableTypePolyOpeningAtZ{2})%W256 /\
  _99{1} = (of_int proofLookupSPolyOpeningAtZOmega{2})%W256 /\
  _101{1} = (of_int proofLookupGrandProductOpeningAtZOmega{2})%W256 /\
  (0 <= state0_37{2} && state0_37{2} < W256.modulus) /\
  (0 <= state1_37{2} && state1_37{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
  (0 <= stateZInDomain{2} && stateZInDomain{2} < Constants.R) /\
  s0_37 = state0_37{2} /\
  s1_37 = state1_37{2} /\
  sEta = _20{1} /\ sBeta = _27{1} /\ sGamma = _30{1} /\ sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\ sAlpha = _47{1} /\ sZ = z{1} /\ sZInDomainSize = _68{1} /\
  Primops.memory{1} = m54 /\
  W256.to_uint (mload m54 TRANSCRIPT_STATE_0_SLOT) = state0_37{2} /\
  W256.to_uint (mload m54 TRANSCRIPT_STATE_1_SLOT) = state1_37{2}
).
call{1} (ConcretePrimops.mload_pspec m54 PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT).
skip; progress;
rewrite /m54 /m53 /m52 /m51 /m50 /m49 /m48 /m47 /m46 /m45 /m44 /m43 /m42 /m41 /m40 /m39 /m38 /m37 /m36 /m35 /m34 /m33 /m32 /m31 /m30 /m29 /m28 /m27 /m26 /m25 /m24 /m23 /m22 /m21 /m20 /m19 /m18 /m17 /m16 /m15 /m14 /m13 /m12 /m11 /m10 /m9 /m8 /m7 /m6 /m5 /m4 /m3 /m2 /m1 /getTranscriptChallenge_memory_footprint /updateTranscript_memory_footprint /modexp_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT /PROOF_STATE_POLYS_1_X_SLOT
        /PROOF_STATE_POLYS_1_Y_SLOT /PROOF_STATE_POLYS_2_X_SLOT /PROOF_STATE_POLYS_2_Y_SLOT
        /PROOF_STATE_POLYS_3_X_SLOT /PROOF_STATE_POLYS_3_Y_SLOT /PROOF_LOOKUP_S_POLY_X_SLOT
        /PROOF_LOOKUP_S_POLY_Y_SLOT /STATE_ETA_SLOT /STATE_BETA_SLOT /PROOF_STATE_POLYS_0_X_SLOT
        /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT /STATE_GAMMA_SLOT
        /STATE_BETA_LOOKUP_SLOT /STATE_GAMMA_LOOKUP_SLOT /PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT
        /PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT /STATE_ALPHA_SLOT /PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT /STATE_Z_SLOT /STATE_Z_IN_DOMAIN_SIZE
        /PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT
        /PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT
        /PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT /PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT /PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT
        /PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT /PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT
        /PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT /PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT /PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT
        /PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 9! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.

seq 1 1:(
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
  z{1} = (of_int stateZ{2})%W256 /\
  _68{1} = (of_int stateZInDomain{2})%W256 /\
  _71{1} = (of_int proofQuotientPolyOpeningAtZ{2})%W256 /\
  _73{1} = (of_int proofStatePolys0OpeningAtZ{2})%W256 /\
  _75{1} = (of_int proofStatePolys1OpeningAtZ{2})%W256 /\
  _77{1} = (of_int proofStatePolys2OpeningAtZ{2})%W256 /\
  _79{1} = (of_int proofStatePolys3OpeningAtZ{2})%W256 /\
  _81{1} = (of_int proofStatePolys3OpeningAtZOmega{2})%W256 /\
  _83{1} = (of_int proofGateSelectors0OpeningAtZ{2})%W256 /\
  _85{1} = (of_int proofCopyPermutationPolys0OpeningAtZ{2})%W256 /\
  _87{1} = (of_int proofCopyPermutationPolys1OpeningAtZ{2})%W256 /\
  _89{1} = (of_int proofCopyPermutationPolys2OpeningAtZ{2})%W256 /\
  _91{1} = (of_int proofCopyPermutationGrandProductOpeningAtZOmega{2})%W256 /\
  _93{1} = (of_int proofLookupTPolyOpeningAtZ{2})%W256 /\
  _95{1} = (of_int proofLookupSelectorPolyOpeningAtZ{2})%W256 /\
  _97{1} = (of_int proofLookupTableTypePolyOpeningAtZ{2})%W256 /\
  _99{1} = (of_int proofLookupSPolyOpeningAtZOmega{2})%W256 /\
  _101{1} = (of_int proofLookupGrandProductOpeningAtZOmega{2})%W256 /\
  s0_37 = state0_37{2} /\
  s1_37 = state1_37{2} /\
  (0 <= state0_38{2} && state0_38{2} < W256.modulus) /\
  (0 <= state1_38{2} && state1_38{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
  (0 <= stateZInDomain{2} && stateZInDomain{2} < Constants.R) /\
  sEta = _20{1} /\ sBeta = _27{1} /\ sGamma = _30{1} /\ sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\ sAlpha = _47{1} /\ sZ = z{1} /\ sZInDomainSize = _68{1} /\
  Primops.memory{1} = updateTranscript_memory_footprint m54 _101{1} (W256.of_int state0_38{2}) (W256.of_int state1_38{2})
).
call (updateTranscript_low_equiv_mid m54 s0_37 s1_37 proofLookupGrandProductOpeningAtZOmegaG).
skip. progress.

exists* state0_38{2}, state1_38{2}. elim*=> s0_38 s1_38.
pose m55 := updateTranscript_memory_footprint m54 (of_int proofLookupGrandProductOpeningAtZOmegaG)%W256 (W256.of_int s0_38) (W256.of_int s1_38).
seq 1 0:(
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
  z{1} = (of_int stateZ{2})%W256 /\
  _68{1} = (of_int stateZInDomain{2})%W256 /\
  _71{1} = (of_int proofQuotientPolyOpeningAtZ{2})%W256 /\
  _73{1} = (of_int proofStatePolys0OpeningAtZ{2})%W256 /\
  _75{1} = (of_int proofStatePolys1OpeningAtZ{2})%W256 /\
  _77{1} = (of_int proofStatePolys2OpeningAtZ{2})%W256 /\
  _79{1} = (of_int proofStatePolys3OpeningAtZ{2})%W256 /\
  _81{1} = (of_int proofStatePolys3OpeningAtZOmega{2})%W256 /\
  _83{1} = (of_int proofGateSelectors0OpeningAtZ{2})%W256 /\
  _85{1} = (of_int proofCopyPermutationPolys0OpeningAtZ{2})%W256 /\
  _87{1} = (of_int proofCopyPermutationPolys1OpeningAtZ{2})%W256 /\
  _89{1} = (of_int proofCopyPermutationPolys2OpeningAtZ{2})%W256 /\
  _91{1} = (of_int proofCopyPermutationGrandProductOpeningAtZOmega{2})%W256 /\
  _93{1} = (of_int proofLookupTPolyOpeningAtZ{2})%W256 /\
  _95{1} = (of_int proofLookupSelectorPolyOpeningAtZ{2})%W256 /\
  _97{1} = (of_int proofLookupTableTypePolyOpeningAtZ{2})%W256 /\
  _99{1} = (of_int proofLookupSPolyOpeningAtZOmega{2})%W256 /\
  _101{1} = (of_int proofLookupGrandProductOpeningAtZOmega{2})%W256 /\
  _103{1} = (of_int proofLookupTPolyOpeningAtZOmega{2})%W256 /\
  s0_38 = state0_38{2} /\
  s1_38 = state1_38{2} /\
  (0 <= state0_38{2} && state0_38{2} < W256.modulus) /\
  (0 <= state1_38{2} && state1_38{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
  (0 <= stateZInDomain{2} && stateZInDomain{2} < Constants.R) /\
  sEta = _20{1} /\ sBeta = _27{1} /\ sGamma = _30{1} /\ sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\ sAlpha = _47{1} /\ sZ = z{1} /\ sZInDomainSize = _68{1} /\
  Primops.memory{1} = m55 /\
  W256.to_uint (mload m55 TRANSCRIPT_STATE_0_SLOT) = state0_38{2} /\
  W256.to_uint (mload m55 TRANSCRIPT_STATE_1_SLOT) = state1_38{2}
).
call{1} (ConcretePrimops.mload_pspec m55 PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT).
skip; progress;
rewrite /m55 /m54 /m53 /m52 /m51 /m50 /m49 /m48 /m47 /m46 /m45 /m44 /m43 /m42 /m41 /m40 /m39 /m38 /m37 /m36 /m35 /m34 /m33 /m32 /m31 /m30 /m29 /m28 /m27 /m26 /m25 /m24 /m23 /m22 /m21 /m20 /m19 /m18 /m17 /m16 /m15 /m14 /m13 /m12 /m11 /m10 /m9 /m8 /m7 /m6 /m5 /m4 /m3 /m2 /m1 /getTranscriptChallenge_memory_footprint /updateTranscript_memory_footprint /modexp_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT /PROOF_STATE_POLYS_1_X_SLOT
        /PROOF_STATE_POLYS_1_Y_SLOT /PROOF_STATE_POLYS_2_X_SLOT /PROOF_STATE_POLYS_2_Y_SLOT
        /PROOF_STATE_POLYS_3_X_SLOT /PROOF_STATE_POLYS_3_Y_SLOT /PROOF_LOOKUP_S_POLY_X_SLOT
        /PROOF_LOOKUP_S_POLY_Y_SLOT /STATE_ETA_SLOT /STATE_BETA_SLOT /PROOF_STATE_POLYS_0_X_SLOT
        /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT /STATE_GAMMA_SLOT
        /STATE_BETA_LOOKUP_SLOT /STATE_GAMMA_LOOKUP_SLOT /PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT
        /PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT /STATE_ALPHA_SLOT /PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT /STATE_Z_SLOT /STATE_Z_IN_DOMAIN_SIZE
        /PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT
        /PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT
        /PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT /PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT /PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT
        /PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT /PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT
        /PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT /PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT /PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT
        /PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT /PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 9! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.

seq 1 1:(
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
  z{1} = (of_int stateZ{2})%W256 /\
  _68{1} = (of_int stateZInDomain{2})%W256 /\
  _71{1} = (of_int proofQuotientPolyOpeningAtZ{2})%W256 /\
  _73{1} = (of_int proofStatePolys0OpeningAtZ{2})%W256 /\
  _75{1} = (of_int proofStatePolys1OpeningAtZ{2})%W256 /\
  _77{1} = (of_int proofStatePolys2OpeningAtZ{2})%W256 /\
  _79{1} = (of_int proofStatePolys3OpeningAtZ{2})%W256 /\
  _81{1} = (of_int proofStatePolys3OpeningAtZOmega{2})%W256 /\
  _83{1} = (of_int proofGateSelectors0OpeningAtZ{2})%W256 /\
  _85{1} = (of_int proofCopyPermutationPolys0OpeningAtZ{2})%W256 /\
  _87{1} = (of_int proofCopyPermutationPolys1OpeningAtZ{2})%W256 /\
  _89{1} = (of_int proofCopyPermutationPolys2OpeningAtZ{2})%W256 /\
  _91{1} = (of_int proofCopyPermutationGrandProductOpeningAtZOmega{2})%W256 /\
  _93{1} = (of_int proofLookupTPolyOpeningAtZ{2})%W256 /\
  _95{1} = (of_int proofLookupSelectorPolyOpeningAtZ{2})%W256 /\
  _97{1} = (of_int proofLookupTableTypePolyOpeningAtZ{2})%W256 /\
  _99{1} = (of_int proofLookupSPolyOpeningAtZOmega{2})%W256 /\
  _101{1} = (of_int proofLookupGrandProductOpeningAtZOmega{2})%W256 /\
  _103{1} = (of_int proofLookupTPolyOpeningAtZOmega{2})%W256 /\
  s0_38 = state0_38{2} /\
  s1_38 = state1_38{2} /\
  (0 <= state0_39{2} && state0_39{2} < W256.modulus) /\
  (0 <= state1_39{2} && state1_39{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
  (0 <= stateZInDomain{2} && stateZInDomain{2} < Constants.R) /\
  sEta = _20{1} /\ sBeta = _27{1} /\ sGamma = _30{1} /\ sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\ sAlpha = _47{1} /\ sZ = z{1} /\ sZInDomainSize = _68{1} /\
  Primops.memory{1} = updateTranscript_memory_footprint m55 _103{1} (W256.of_int state0_39{2}) (W256.of_int state1_39{2})
).
call (updateTranscript_low_equiv_mid m55 s0_38 s1_38 proofLookupTPolyOpeningAtZOmegaG).
skip. progress.

exists* state0_39{2}, state1_39{2}. elim*=> s0_39 s1_39.
pose m56 := updateTranscript_memory_footprint m55 (of_int proofLookupTPolyOpeningAtZOmegaG)%W256 (W256.of_int s0_39) (W256.of_int s1_39).
seq 1 0:(
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
  z{1} = (of_int stateZ{2})%W256 /\
  _68{1} = (of_int stateZInDomain{2})%W256 /\
  _71{1} = (of_int proofQuotientPolyOpeningAtZ{2})%W256 /\
  _73{1} = (of_int proofStatePolys0OpeningAtZ{2})%W256 /\
  _75{1} = (of_int proofStatePolys1OpeningAtZ{2})%W256 /\
  _77{1} = (of_int proofStatePolys2OpeningAtZ{2})%W256 /\
  _79{1} = (of_int proofStatePolys3OpeningAtZ{2})%W256 /\
  _81{1} = (of_int proofStatePolys3OpeningAtZOmega{2})%W256 /\
  _83{1} = (of_int proofGateSelectors0OpeningAtZ{2})%W256 /\
  _85{1} = (of_int proofCopyPermutationPolys0OpeningAtZ{2})%W256 /\
  _87{1} = (of_int proofCopyPermutationPolys1OpeningAtZ{2})%W256 /\
  _89{1} = (of_int proofCopyPermutationPolys2OpeningAtZ{2})%W256 /\
  _91{1} = (of_int proofCopyPermutationGrandProductOpeningAtZOmega{2})%W256 /\
  _93{1} = (of_int proofLookupTPolyOpeningAtZ{2})%W256 /\
  _95{1} = (of_int proofLookupSelectorPolyOpeningAtZ{2})%W256 /\
  _97{1} = (of_int proofLookupTableTypePolyOpeningAtZ{2})%W256 /\
  _99{1} = (of_int proofLookupSPolyOpeningAtZOmega{2})%W256 /\
  _101{1} = (of_int proofLookupGrandProductOpeningAtZOmega{2})%W256 /\
  _103{1} = (of_int proofLookupTPolyOpeningAtZOmega{2})%W256 /\
  _105{1} = (of_int proofLinearisationPolyOpeningAtZ{2})%W256 /\
  s0_39 = state0_39{2} /\
  s1_39 = state1_39{2} /\
  (0 <= state0_39{2} && state0_39{2} < W256.modulus) /\
  (0 <= state1_39{2} && state1_39{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
  (0 <= stateZInDomain{2} && stateZInDomain{2} < Constants.R) /\
  sEta = _20{1} /\ sBeta = _27{1} /\ sGamma = _30{1} /\ sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\ sAlpha = _47{1} /\ sZ = z{1} /\ sZInDomainSize = _68{1} /\
  Primops.memory{1} = m56 /\
  W256.to_uint (mload m56 TRANSCRIPT_STATE_0_SLOT) = state0_39{2} /\
  W256.to_uint (mload m56 TRANSCRIPT_STATE_1_SLOT) = state1_39{2}
).
call{1} (ConcretePrimops.mload_pspec m56 PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT).
skip; progress;
rewrite /m56 /m55 /m54 /m53 /m52 /m51 /m50 /m49 /m48 /m47 /m46 /m45 /m44 /m43 /m42 /m41 /m40 /m39 /m38 /m37 /m36 /m35 /m34 /m33 /m32 /m31 /m30 /m29 /m28 /m27 /m26 /m25 /m24 /m23 /m22 /m21 /m20 /m19 /m18 /m17 /m16 /m15 /m14 /m13 /m12 /m11 /m10 /m9 /m8 /m7 /m6 /m5 /m4 /m3 /m2 /m1 /getTranscriptChallenge_memory_footprint /updateTranscript_memory_footprint /modexp_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT /PROOF_STATE_POLYS_1_X_SLOT
        /PROOF_STATE_POLYS_1_Y_SLOT /PROOF_STATE_POLYS_2_X_SLOT /PROOF_STATE_POLYS_2_Y_SLOT
        /PROOF_STATE_POLYS_3_X_SLOT /PROOF_STATE_POLYS_3_Y_SLOT /PROOF_LOOKUP_S_POLY_X_SLOT
        /PROOF_LOOKUP_S_POLY_Y_SLOT /STATE_ETA_SLOT /STATE_BETA_SLOT /PROOF_STATE_POLYS_0_X_SLOT
        /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT /STATE_GAMMA_SLOT
        /STATE_BETA_LOOKUP_SLOT /STATE_GAMMA_LOOKUP_SLOT /PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT
        /PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT /STATE_ALPHA_SLOT /PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT /STATE_Z_SLOT /STATE_Z_IN_DOMAIN_SIZE
        /PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT
        /PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT
        /PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT /PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT /PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT
        /PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT /PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT
        /PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT /PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT /PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT
        /PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT /PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT /PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 9! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.

seq 1 1:(
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
  z{1} = (of_int stateZ{2})%W256 /\
  _68{1} = (of_int stateZInDomain{2})%W256 /\
  _71{1} = (of_int proofQuotientPolyOpeningAtZ{2})%W256 /\
  _73{1} = (of_int proofStatePolys0OpeningAtZ{2})%W256 /\
  _75{1} = (of_int proofStatePolys1OpeningAtZ{2})%W256 /\
  _77{1} = (of_int proofStatePolys2OpeningAtZ{2})%W256 /\
  _79{1} = (of_int proofStatePolys3OpeningAtZ{2})%W256 /\
  _81{1} = (of_int proofStatePolys3OpeningAtZOmega{2})%W256 /\
  _83{1} = (of_int proofGateSelectors0OpeningAtZ{2})%W256 /\
  _85{1} = (of_int proofCopyPermutationPolys0OpeningAtZ{2})%W256 /\
  _87{1} = (of_int proofCopyPermutationPolys1OpeningAtZ{2})%W256 /\
  _89{1} = (of_int proofCopyPermutationPolys2OpeningAtZ{2})%W256 /\
  _91{1} = (of_int proofCopyPermutationGrandProductOpeningAtZOmega{2})%W256 /\
  _93{1} = (of_int proofLookupTPolyOpeningAtZ{2})%W256 /\
  _95{1} = (of_int proofLookupSelectorPolyOpeningAtZ{2})%W256 /\
  _97{1} = (of_int proofLookupTableTypePolyOpeningAtZ{2})%W256 /\
  _99{1} = (of_int proofLookupSPolyOpeningAtZOmega{2})%W256 /\
  _101{1} = (of_int proofLookupGrandProductOpeningAtZOmega{2})%W256 /\
  _103{1} = (of_int proofLookupTPolyOpeningAtZOmega{2})%W256 /\
  _105{1} = (of_int proofLinearisationPolyOpeningAtZ{2})%W256 /\
  s0_39 = state0_39{2} /\
  s1_39 = state1_39{2} /\
  (0 <= state0_40{2} && state0_40{2} < W256.modulus) /\
  (0 <= state1_40{2} && state1_40{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
  (0 <= stateZInDomain{2} && stateZInDomain{2} < Constants.R) /\
  sEta = _20{1} /\ sBeta = _27{1} /\ sGamma = _30{1} /\ sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\ sAlpha = _47{1} /\ sZ = z{1} /\ sZInDomainSize = _68{1} /\
  Primops.memory{1} = updateTranscript_memory_footprint m56 _105{1} (W256.of_int state0_40{2}) (W256.of_int state1_40{2})
).
call (updateTranscript_low_equiv_mid m56 s0_39 s1_39 proofLinearisationPolyOpeningAtZG).
skip. progress.

exists* state0_40{2}, state1_40{2}. elim*=> s0_40 s1_40.
pose m57 := updateTranscript_memory_footprint m56 (of_int proofLinearisationPolyOpeningAtZG)%W256 (W256.of_int s0_40) (W256.of_int s1_40).
seq 0 0:(
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
  z{1} = (of_int stateZ{2})%W256 /\
  _68{1} = (of_int stateZInDomain{2})%W256 /\
  _71{1} = (of_int proofQuotientPolyOpeningAtZ{2})%W256 /\
  _73{1} = (of_int proofStatePolys0OpeningAtZ{2})%W256 /\
  _75{1} = (of_int proofStatePolys1OpeningAtZ{2})%W256 /\
  _77{1} = (of_int proofStatePolys2OpeningAtZ{2})%W256 /\
  _79{1} = (of_int proofStatePolys3OpeningAtZ{2})%W256 /\
  _81{1} = (of_int proofStatePolys3OpeningAtZOmega{2})%W256 /\
  _83{1} = (of_int proofGateSelectors0OpeningAtZ{2})%W256 /\
  _85{1} = (of_int proofCopyPermutationPolys0OpeningAtZ{2})%W256 /\
  _87{1} = (of_int proofCopyPermutationPolys1OpeningAtZ{2})%W256 /\
  _89{1} = (of_int proofCopyPermutationPolys2OpeningAtZ{2})%W256 /\
  _91{1} = (of_int proofCopyPermutationGrandProductOpeningAtZOmega{2})%W256 /\
  _93{1} = (of_int proofLookupTPolyOpeningAtZ{2})%W256 /\
  _95{1} = (of_int proofLookupSelectorPolyOpeningAtZ{2})%W256 /\
  _97{1} = (of_int proofLookupTableTypePolyOpeningAtZ{2})%W256 /\
  _99{1} = (of_int proofLookupSPolyOpeningAtZOmega{2})%W256 /\
  _101{1} = (of_int proofLookupGrandProductOpeningAtZOmega{2})%W256 /\
  _103{1} = (of_int proofLookupTPolyOpeningAtZOmega{2})%W256 /\
  _105{1} = (of_int proofLinearisationPolyOpeningAtZ{2})%W256 /\
  s0_40 = state0_40{2} /\
  s1_40 = state1_40{2} /\
  (0 <= state0_40{2} && state0_40{2} < W256.modulus) /\
  (0 <= state1_40{2} && state1_40{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
  (0 <= stateZInDomain{2} && stateZInDomain{2} < Constants.R) /\
  sEta = _20{1} /\ sBeta = _27{1} /\ sGamma = _30{1} /\ sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\ sAlpha = _47{1} /\ sZ = z{1} /\ sZInDomainSize = _68{1} /\
  Primops.memory{1} = m57 /\
  W256.to_uint (mload m57 TRANSCRIPT_STATE_0_SLOT) = state0_40{2} /\
  W256.to_uint (mload m57 TRANSCRIPT_STATE_1_SLOT) = state1_40{2}
).
skip; progress;
rewrite /m57 /m56 /m55 /m54 /m53 /m52 /m51 /m50 /m49 /m48 /m47 /m46 /m45 /m44 /m43 /m42 /m41 /m40 /m39 /m38 /m37 /m36 /m35 /m34 /m33 /m32 /m31 /m30 /m29 /m28 /m27 /m26 /m25 /m24 /m23 /m22 /m21 /m20 /m19 /m18 /m17 /m16 /m15 /m14 /m13 /m12 /m11 /m10 /m9 /m8 /m7 /m6 /m5 /m4 /m3 /m2 /m1 /getTranscriptChallenge_memory_footprint /updateTranscript_memory_footprint /modexp_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT /PROOF_STATE_POLYS_1_X_SLOT
        /PROOF_STATE_POLYS_1_Y_SLOT /PROOF_STATE_POLYS_2_X_SLOT /PROOF_STATE_POLYS_2_Y_SLOT
        /PROOF_STATE_POLYS_3_X_SLOT /PROOF_STATE_POLYS_3_Y_SLOT /PROOF_LOOKUP_S_POLY_X_SLOT
        /PROOF_LOOKUP_S_POLY_Y_SLOT /STATE_ETA_SLOT /STATE_BETA_SLOT /PROOF_STATE_POLYS_0_X_SLOT
        /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT /STATE_GAMMA_SLOT
        /STATE_BETA_LOOKUP_SLOT /STATE_GAMMA_LOOKUP_SLOT /PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT
        /PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT /STATE_ALPHA_SLOT /PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT /STATE_Z_SLOT /STATE_Z_IN_DOMAIN_SIZE
        /PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT
        /PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT
        /PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT /PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT /PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT
        /PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT /PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT
        /PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT /PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT /PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT
        /PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT /PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT /PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.

seq 1 1:(
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
  z{1} = (of_int stateZ{2})%W256 /\
  _68{1} = (of_int stateZInDomain{2})%W256 /\
  _71{1} = (of_int proofQuotientPolyOpeningAtZ{2})%W256 /\
  _73{1} = (of_int proofStatePolys0OpeningAtZ{2})%W256 /\
  _75{1} = (of_int proofStatePolys1OpeningAtZ{2})%W256 /\
  _77{1} = (of_int proofStatePolys2OpeningAtZ{2})%W256 /\
  _79{1} = (of_int proofStatePolys3OpeningAtZ{2})%W256 /\
  _81{1} = (of_int proofStatePolys3OpeningAtZOmega{2})%W256 /\
  _83{1} = (of_int proofGateSelectors0OpeningAtZ{2})%W256 /\
  _85{1} = (of_int proofCopyPermutationPolys0OpeningAtZ{2})%W256 /\
  _87{1} = (of_int proofCopyPermutationPolys1OpeningAtZ{2})%W256 /\
  _89{1} = (of_int proofCopyPermutationPolys2OpeningAtZ{2})%W256 /\
  _91{1} = (of_int proofCopyPermutationGrandProductOpeningAtZOmega{2})%W256 /\
  _93{1} = (of_int proofLookupTPolyOpeningAtZ{2})%W256 /\
  _95{1} = (of_int proofLookupSelectorPolyOpeningAtZ{2})%W256 /\
  _97{1} = (of_int proofLookupTableTypePolyOpeningAtZ{2})%W256 /\
  _99{1} = (of_int proofLookupSPolyOpeningAtZOmega{2})%W256 /\
  _101{1} = (of_int proofLookupGrandProductOpeningAtZOmega{2})%W256 /\
  _103{1} = (of_int proofLookupTPolyOpeningAtZOmega{2})%W256 /\
  _105{1} = (of_int proofLinearisationPolyOpeningAtZ{2})%W256 /\
  _107{1} = (of_int stateV{2})%W256 /\
  s0_40 = state0_40{2} /\
  s1_40 = state1_40{2} /\
  (0 <= state0_40{2} && state0_40{2} < W256.modulus) /\
  (0 <= state1_40{2} && state1_40{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
  (0 <= stateZInDomain{2} && stateZInDomain{2} < Constants.R) /\
  (0 <= stateV{2} && stateV{2} < 2 ^ 253) /\
  sEta = _20{1} /\ sBeta = _27{1} /\ sGamma = _30{1} /\ sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\ sAlpha = _47{1} /\ sZ = z{1} /\ sZInDomainSize = _68{1} /\
  Primops.memory{1} = getTranscriptChallenge_memory_footprint m57 7
).
call (getTranscriptChallenge_low_equiv_mid m57 s0_40 s1_40 7).
skip. progress.

exists* _107{1}; elim*=> sV.
pose m58 := getTranscriptChallenge_memory_footprint m57 7.
pose m59 := mstore m58 STATE_V_SLOT sV.
seq 1 0:(
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
  z{1} = (of_int stateZ{2})%W256 /\
  _68{1} = (of_int stateZInDomain{2})%W256 /\
  _71{1} = (of_int proofQuotientPolyOpeningAtZ{2})%W256 /\
  _73{1} = (of_int proofStatePolys0OpeningAtZ{2})%W256 /\
  _75{1} = (of_int proofStatePolys1OpeningAtZ{2})%W256 /\
  _77{1} = (of_int proofStatePolys2OpeningAtZ{2})%W256 /\
  _79{1} = (of_int proofStatePolys3OpeningAtZ{2})%W256 /\
  _81{1} = (of_int proofStatePolys3OpeningAtZOmega{2})%W256 /\
  _83{1} = (of_int proofGateSelectors0OpeningAtZ{2})%W256 /\
  _85{1} = (of_int proofCopyPermutationPolys0OpeningAtZ{2})%W256 /\
  _87{1} = (of_int proofCopyPermutationPolys1OpeningAtZ{2})%W256 /\
  _89{1} = (of_int proofCopyPermutationPolys2OpeningAtZ{2})%W256 /\
  _91{1} = (of_int proofCopyPermutationGrandProductOpeningAtZOmega{2})%W256 /\
  _93{1} = (of_int proofLookupTPolyOpeningAtZ{2})%W256 /\
  _95{1} = (of_int proofLookupSelectorPolyOpeningAtZ{2})%W256 /\
  _97{1} = (of_int proofLookupTableTypePolyOpeningAtZ{2})%W256 /\
  _99{1} = (of_int proofLookupSPolyOpeningAtZOmega{2})%W256 /\
  _101{1} = (of_int proofLookupGrandProductOpeningAtZOmega{2})%W256 /\
  _103{1} = (of_int proofLookupTPolyOpeningAtZOmega{2})%W256 /\
  _105{1} = (of_int proofLinearisationPolyOpeningAtZ{2})%W256 /\
  _107{1} = (of_int stateV{2})%W256 /\
  s0_40 = state0_40{2} /\
  s1_40 = state1_40{2} /\
  (0 <= state0_40{2} && state0_40{2} < W256.modulus) /\
  (0 <= state1_40{2} && state1_40{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
  (0 <= stateZInDomain{2} && stateZInDomain{2} < Constants.R) /\
  (0 <= stateV{2} && stateV{2} < 2 ^ 253) /\
  sEta = _20{1} /\ sBeta = _27{1} /\ sGamma = _30{1} /\ sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\ sAlpha = _47{1} /\ sZ = z{1} /\ sZInDomainSize = _68{1} /\
  sV = _107{1} /\
  Primops.memory{1} = m59
).
call{1} (ConcretePrimops.mstore_pspec m58 STATE_V_SLOT sV).
skip; progress.

seq 1 0:(
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
  z{1} = (of_int stateZ{2})%W256 /\
  _68{1} = (of_int stateZInDomain{2})%W256 /\
  _71{1} = (of_int proofQuotientPolyOpeningAtZ{2})%W256 /\
  _73{1} = (of_int proofStatePolys0OpeningAtZ{2})%W256 /\
  _75{1} = (of_int proofStatePolys1OpeningAtZ{2})%W256 /\
  _77{1} = (of_int proofStatePolys2OpeningAtZ{2})%W256 /\
  _79{1} = (of_int proofStatePolys3OpeningAtZ{2})%W256 /\
  _81{1} = (of_int proofStatePolys3OpeningAtZOmega{2})%W256 /\
  _83{1} = (of_int proofGateSelectors0OpeningAtZ{2})%W256 /\
  _85{1} = (of_int proofCopyPermutationPolys0OpeningAtZ{2})%W256 /\
  _87{1} = (of_int proofCopyPermutationPolys1OpeningAtZ{2})%W256 /\
  _89{1} = (of_int proofCopyPermutationPolys2OpeningAtZ{2})%W256 /\
  _91{1} = (of_int proofCopyPermutationGrandProductOpeningAtZOmega{2})%W256 /\
  _93{1} = (of_int proofLookupTPolyOpeningAtZ{2})%W256 /\
  _95{1} = (of_int proofLookupSelectorPolyOpeningAtZ{2})%W256 /\
  _97{1} = (of_int proofLookupTableTypePolyOpeningAtZ{2})%W256 /\
  _99{1} = (of_int proofLookupSPolyOpeningAtZOmega{2})%W256 /\
  _101{1} = (of_int proofLookupGrandProductOpeningAtZOmega{2})%W256 /\
  _103{1} = (of_int proofLookupTPolyOpeningAtZOmega{2})%W256 /\
  _105{1} = (of_int proofLinearisationPolyOpeningAtZ{2})%W256 /\
  _107{1} = (of_int stateV{2})%W256 /\
  _110{1} = (of_int proofOpeningProofAtZX{2})%W256 /\
  s0_40 = state0_40{2} /\
  s1_40 = state1_40{2} /\
  (0 <= state0_40{2} && state0_40{2} < W256.modulus) /\
  (0 <= state1_40{2} && state1_40{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
  (0 <= stateZInDomain{2} && stateZInDomain{2} < Constants.R) /\
  (0 <= stateV{2} && stateV{2} < 2 ^ 253) /\
  sEta = _20{1} /\ sBeta = _27{1} /\ sGamma = _30{1} /\ sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\ sAlpha = _47{1} /\ sZ = z{1} /\ sZInDomainSize = _68{1} /\
  sV = _107{1} /\
  Primops.memory{1} = m59 /\
  W256.to_uint (mload m59 TRANSCRIPT_STATE_0_SLOT) = state0_40{2} /\
  W256.to_uint (mload m59 TRANSCRIPT_STATE_1_SLOT) = state1_40{2}
).
call{1} (ConcretePrimops.mload_pspec m59 PROOF_OPENING_PROOF_AT_Z_X_SLOT).
skip; progress;
rewrite /m59 /m58 /m57 /m56 /m55 /m54 /m53 /m52 /m51 /m50 /m49 /m48 /m47 /m46 /m45 /m44 /m43 /m42 /m41 /m40 /m39 /m38 /m37 /m36 /m35 /m34 /m33 /m32 /m31 /m30 /m29 /m28 /m27 /m26 /m25 /m24 /m23 /m22 /m21 /m20 /m19 /m18 /m17 /m16 /m15 /m14 /m13 /m12 /m11 /m10 /m9 /m8 /m7 /m6 /m5 /m4 /m3 /m2 /m1 /getTranscriptChallenge_memory_footprint /updateTranscript_memory_footprint /modexp_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT /PROOF_STATE_POLYS_1_X_SLOT
        /PROOF_STATE_POLYS_1_Y_SLOT /PROOF_STATE_POLYS_2_X_SLOT /PROOF_STATE_POLYS_2_Y_SLOT
        /PROOF_STATE_POLYS_3_X_SLOT /PROOF_STATE_POLYS_3_Y_SLOT /PROOF_LOOKUP_S_POLY_X_SLOT
        /PROOF_LOOKUP_S_POLY_Y_SLOT /STATE_ETA_SLOT /STATE_BETA_SLOT /PROOF_STATE_POLYS_0_X_SLOT
        /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT /STATE_GAMMA_SLOT
        /STATE_BETA_LOOKUP_SLOT /STATE_GAMMA_LOOKUP_SLOT /PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT
        /PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT /STATE_ALPHA_SLOT /PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT /STATE_Z_SLOT /STATE_Z_IN_DOMAIN_SIZE
        /PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT
        /PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT
        /PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT /PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT /PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT
        /PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT /PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT
        /PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT /PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT /PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT
        /PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT /PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT /PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT
        /PROOF_OPENING_PROOF_AT_Z_X_SLOT /STATE_V_SLOT.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 9! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff; try (exists 1; by simplify). 
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.

seq 1 1:(
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
  z{1} = (of_int stateZ{2})%W256 /\
  _68{1} = (of_int stateZInDomain{2})%W256 /\
  _71{1} = (of_int proofQuotientPolyOpeningAtZ{2})%W256 /\
  _73{1} = (of_int proofStatePolys0OpeningAtZ{2})%W256 /\
  _75{1} = (of_int proofStatePolys1OpeningAtZ{2})%W256 /\
  _77{1} = (of_int proofStatePolys2OpeningAtZ{2})%W256 /\
  _79{1} = (of_int proofStatePolys3OpeningAtZ{2})%W256 /\
  _81{1} = (of_int proofStatePolys3OpeningAtZOmega{2})%W256 /\
  _83{1} = (of_int proofGateSelectors0OpeningAtZ{2})%W256 /\
  _85{1} = (of_int proofCopyPermutationPolys0OpeningAtZ{2})%W256 /\
  _87{1} = (of_int proofCopyPermutationPolys1OpeningAtZ{2})%W256 /\
  _89{1} = (of_int proofCopyPermutationPolys2OpeningAtZ{2})%W256 /\
  _91{1} = (of_int proofCopyPermutationGrandProductOpeningAtZOmega{2})%W256 /\
  _93{1} = (of_int proofLookupTPolyOpeningAtZ{2})%W256 /\
  _95{1} = (of_int proofLookupSelectorPolyOpeningAtZ{2})%W256 /\
  _97{1} = (of_int proofLookupTableTypePolyOpeningAtZ{2})%W256 /\
  _99{1} = (of_int proofLookupSPolyOpeningAtZOmega{2})%W256 /\
  _101{1} = (of_int proofLookupGrandProductOpeningAtZOmega{2})%W256 /\
  _103{1} = (of_int proofLookupTPolyOpeningAtZOmega{2})%W256 /\
  _105{1} = (of_int proofLinearisationPolyOpeningAtZ{2})%W256 /\
  _107{1} = (of_int stateV{2})%W256 /\
  _110{1} = (of_int proofOpeningProofAtZX{2})%W256 /\
  s0_40 = state0_40{2} /\
  s1_40 = state1_40{2} /\
  (0 <= state0_41{2} && state0_41{2} < W256.modulus) /\
  (0 <= state1_41{2} && state1_41{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
  (0 <= stateZInDomain{2} && stateZInDomain{2} < Constants.R) /\
  (0 <= stateV{2} && stateV{2} < 2 ^ 253) /\
  sEta = _20{1} /\ sBeta = _27{1} /\ sGamma = _30{1} /\ sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\ sAlpha = _47{1} /\ sZ = z{1} /\ sZInDomainSize = _68{1} /\
  sV = _107{1} /\
  Primops.memory{1} = updateTranscript_memory_footprint m59 _110{1} (W256.of_int state0_41{2}) (W256.of_int state1_41{2})
).
call (updateTranscript_low_equiv_mid m59 s0_40 s1_40 proofOpeningProofAtZXG).
skip. progress.

exists* state0_41{2}, state1_41{2}; elim*=> s0_41 s1_41.
pose m60 := updateTranscript_memory_footprint m59 (W256.of_int proofOpeningProofAtZXG) (W256.of_int s0_41) (W256.of_int s1_41).
seq 1 0:(
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
  z{1} = (of_int stateZ{2})%W256 /\
  _68{1} = (of_int stateZInDomain{2})%W256 /\
  _71{1} = (of_int proofQuotientPolyOpeningAtZ{2})%W256 /\
  _73{1} = (of_int proofStatePolys0OpeningAtZ{2})%W256 /\
  _75{1} = (of_int proofStatePolys1OpeningAtZ{2})%W256 /\
  _77{1} = (of_int proofStatePolys2OpeningAtZ{2})%W256 /\
  _79{1} = (of_int proofStatePolys3OpeningAtZ{2})%W256 /\
  _81{1} = (of_int proofStatePolys3OpeningAtZOmega{2})%W256 /\
  _83{1} = (of_int proofGateSelectors0OpeningAtZ{2})%W256 /\
  _85{1} = (of_int proofCopyPermutationPolys0OpeningAtZ{2})%W256 /\
  _87{1} = (of_int proofCopyPermutationPolys1OpeningAtZ{2})%W256 /\
  _89{1} = (of_int proofCopyPermutationPolys2OpeningAtZ{2})%W256 /\
  _91{1} = (of_int proofCopyPermutationGrandProductOpeningAtZOmega{2})%W256 /\
  _93{1} = (of_int proofLookupTPolyOpeningAtZ{2})%W256 /\
  _95{1} = (of_int proofLookupSelectorPolyOpeningAtZ{2})%W256 /\
  _97{1} = (of_int proofLookupTableTypePolyOpeningAtZ{2})%W256 /\
  _99{1} = (of_int proofLookupSPolyOpeningAtZOmega{2})%W256 /\
  _101{1} = (of_int proofLookupGrandProductOpeningAtZOmega{2})%W256 /\
  _103{1} = (of_int proofLookupTPolyOpeningAtZOmega{2})%W256 /\
  _105{1} = (of_int proofLinearisationPolyOpeningAtZ{2})%W256 /\
  _107{1} = (of_int stateV{2})%W256 /\
  _110{1} = (of_int proofOpeningProofAtZX{2})%W256 /\
  _112{1} = (of_int proofOpeningProofAtZY{2})%W256 /\
  s0_41 = state0_41{2} /\
  s1_41 = state1_41{2} /\
  (0 <= state0_41{2} && state0_41{2} < W256.modulus) /\
  (0 <= state1_41{2} && state1_41{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
  (0 <= stateZInDomain{2} && stateZInDomain{2} < Constants.R) /\
  (0 <= stateV{2} && stateV{2} < 2 ^ 253) /\
  sEta = _20{1} /\ sBeta = _27{1} /\ sGamma = _30{1} /\ sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\ sAlpha = _47{1} /\ sZ = z{1} /\ sZInDomainSize = _68{1} /\
  sV = _107{1} /\
  Primops.memory{1} = m60 /\
  W256.to_uint (mload m60 TRANSCRIPT_STATE_0_SLOT) = state0_41{2} /\
  W256.to_uint (mload m60 TRANSCRIPT_STATE_1_SLOT) = state1_41{2}
).
call{1} (ConcretePrimops.mload_pspec m60 PROOF_OPENING_PROOF_AT_Z_Y_SLOT).
skip; progress;
rewrite /m60 /m59 /m58 /m57 /m56 /m55 /m54 /m53 /m52 /m51 /m50 /m49 /m48 /m47 /m46 /m45 /m44 /m43 /m42 /m41 /m40 /m39 /m38 /m37 /m36 /m35 /m34 /m33 /m32 /m31 /m30 /m29 /m28 /m27 /m26 /m25 /m24 /m23 /m22 /m21 /m20 /m19 /m18 /m17 /m16 /m15 /m14 /m13 /m12 /m11 /m10 /m9 /m8 /m7 /m6 /m5 /m4 /m3 /m2 /m1 /getTranscriptChallenge_memory_footprint /updateTranscript_memory_footprint /modexp_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT /PROOF_STATE_POLYS_1_X_SLOT
        /PROOF_STATE_POLYS_1_Y_SLOT /PROOF_STATE_POLYS_2_X_SLOT /PROOF_STATE_POLYS_2_Y_SLOT
        /PROOF_STATE_POLYS_3_X_SLOT /PROOF_STATE_POLYS_3_Y_SLOT /PROOF_LOOKUP_S_POLY_X_SLOT
        /PROOF_LOOKUP_S_POLY_Y_SLOT /STATE_ETA_SLOT /STATE_BETA_SLOT /PROOF_STATE_POLYS_0_X_SLOT
        /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT /STATE_GAMMA_SLOT
        /STATE_BETA_LOOKUP_SLOT /STATE_GAMMA_LOOKUP_SLOT /PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT
        /PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT /STATE_ALPHA_SLOT /PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT /STATE_Z_SLOT /STATE_Z_IN_DOMAIN_SIZE
        /PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT
        /PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT
        /PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT /PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT /PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT
        /PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT /PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT
        /PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT /PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT /PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT
        /PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT /PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT /PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT
        /PROOF_OPENING_PROOF_AT_Z_X_SLOT /STATE_V_SLOT /PROOF_OPENING_PROOF_AT_Z_Y_SLOT.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 9! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.

seq 1 1:(
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
  z{1} = (of_int stateZ{2})%W256 /\
  _68{1} = (of_int stateZInDomain{2})%W256 /\
  _71{1} = (of_int proofQuotientPolyOpeningAtZ{2})%W256 /\
  _73{1} = (of_int proofStatePolys0OpeningAtZ{2})%W256 /\
  _75{1} = (of_int proofStatePolys1OpeningAtZ{2})%W256 /\
  _77{1} = (of_int proofStatePolys2OpeningAtZ{2})%W256 /\
  _79{1} = (of_int proofStatePolys3OpeningAtZ{2})%W256 /\
  _81{1} = (of_int proofStatePolys3OpeningAtZOmega{2})%W256 /\
  _83{1} = (of_int proofGateSelectors0OpeningAtZ{2})%W256 /\
  _85{1} = (of_int proofCopyPermutationPolys0OpeningAtZ{2})%W256 /\
  _87{1} = (of_int proofCopyPermutationPolys1OpeningAtZ{2})%W256 /\
  _89{1} = (of_int proofCopyPermutationPolys2OpeningAtZ{2})%W256 /\
  _91{1} = (of_int proofCopyPermutationGrandProductOpeningAtZOmega{2})%W256 /\
  _93{1} = (of_int proofLookupTPolyOpeningAtZ{2})%W256 /\
  _95{1} = (of_int proofLookupSelectorPolyOpeningAtZ{2})%W256 /\
  _97{1} = (of_int proofLookupTableTypePolyOpeningAtZ{2})%W256 /\
  _99{1} = (of_int proofLookupSPolyOpeningAtZOmega{2})%W256 /\
  _101{1} = (of_int proofLookupGrandProductOpeningAtZOmega{2})%W256 /\
  _103{1} = (of_int proofLookupTPolyOpeningAtZOmega{2})%W256 /\
  _105{1} = (of_int proofLinearisationPolyOpeningAtZ{2})%W256 /\
  _107{1} = (of_int stateV{2})%W256 /\
  _110{1} = (of_int proofOpeningProofAtZX{2})%W256 /\
  _112{1} = (of_int proofOpeningProofAtZY{2})%W256 /\
  s0_41 = state0_41{2} /\
  s1_41 = state1_41{2} /\
  (0 <= state0_42{2} && state0_42{2} < W256.modulus) /\
  (0 <= state1_42{2} && state1_42{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
  (0 <= stateZInDomain{2} && stateZInDomain{2} < Constants.R) /\
  (0 <= stateV{2} && stateV{2} < 2 ^ 253) /\
  sEta = _20{1} /\ sBeta = _27{1} /\ sGamma = _30{1} /\ sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\ sAlpha = _47{1} /\ sZ = z{1} /\ sZInDomainSize = _68{1} /\
  sV = _107{1} /\
  Primops.memory{1} = updateTranscript_memory_footprint m60 _112{1} (W256.of_int state0_42{2}) (W256.of_int state1_42{2})
).
call (updateTranscript_low_equiv_mid m60 s0_41 s1_41 proofOpeningProofAtZYG).
skip. progress.

exists* state0_42{2}, state1_42{2}; elim*=> s0_42 s1_42.
pose m61 := updateTranscript_memory_footprint m60 (W256.of_int proofOpeningProofAtZYG) (W256.of_int s0_42) (W256.of_int s1_42).
seq 1 0:(
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
  z{1} = (of_int stateZ{2})%W256 /\
  _68{1} = (of_int stateZInDomain{2})%W256 /\
  _71{1} = (of_int proofQuotientPolyOpeningAtZ{2})%W256 /\
  _73{1} = (of_int proofStatePolys0OpeningAtZ{2})%W256 /\
  _75{1} = (of_int proofStatePolys1OpeningAtZ{2})%W256 /\
  _77{1} = (of_int proofStatePolys2OpeningAtZ{2})%W256 /\
  _79{1} = (of_int proofStatePolys3OpeningAtZ{2})%W256 /\
  _81{1} = (of_int proofStatePolys3OpeningAtZOmega{2})%W256 /\
  _83{1} = (of_int proofGateSelectors0OpeningAtZ{2})%W256 /\
  _85{1} = (of_int proofCopyPermutationPolys0OpeningAtZ{2})%W256 /\
  _87{1} = (of_int proofCopyPermutationPolys1OpeningAtZ{2})%W256 /\
  _89{1} = (of_int proofCopyPermutationPolys2OpeningAtZ{2})%W256 /\
  _91{1} = (of_int proofCopyPermutationGrandProductOpeningAtZOmega{2})%W256 /\
  _93{1} = (of_int proofLookupTPolyOpeningAtZ{2})%W256 /\
  _95{1} = (of_int proofLookupSelectorPolyOpeningAtZ{2})%W256 /\
  _97{1} = (of_int proofLookupTableTypePolyOpeningAtZ{2})%W256 /\
  _99{1} = (of_int proofLookupSPolyOpeningAtZOmega{2})%W256 /\
  _101{1} = (of_int proofLookupGrandProductOpeningAtZOmega{2})%W256 /\
  _103{1} = (of_int proofLookupTPolyOpeningAtZOmega{2})%W256 /\
  _105{1} = (of_int proofLinearisationPolyOpeningAtZ{2})%W256 /\
  _107{1} = (of_int stateV{2})%W256 /\
  _110{1} = (of_int proofOpeningProofAtZX{2})%W256 /\
  _112{1} = (of_int proofOpeningProofAtZY{2})%W256 /\
  _114{1} = (of_int proofOpeningProofAtZOmegaX{2})%W256 /\
  s0_42 = state0_42{2} /\
  s1_42 = state1_42{2} /\
  (0 <= state0_42{2} && state0_42{2} < W256.modulus) /\
  (0 <= state1_42{2} && state1_42{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
  (0 <= stateZInDomain{2} && stateZInDomain{2} < Constants.R) /\
  (0 <= stateV{2} && stateV{2} < 2 ^ 253) /\
  sEta = _20{1} /\ sBeta = _27{1} /\ sGamma = _30{1} /\ sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\ sAlpha = _47{1} /\ sZ = z{1} /\ sZInDomainSize = _68{1} /\
  sV = _107{1} /\
  Primops.memory{1} = m61 /\
  W256.to_uint (mload m61 TRANSCRIPT_STATE_0_SLOT) = state0_42{2} /\
  W256.to_uint (mload m61 TRANSCRIPT_STATE_1_SLOT) = state1_42{2}
).
call{1} (ConcretePrimops.mload_pspec m61 PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT).
skip; progress;
rewrite /m61 /m60 /m59 /m58 /m57 /m56 /m55 /m54 /m53 /m52 /m51 /m50 /m49 /m48 /m47 /m46 /m45 /m44 /m43 /m42 /m41 /m40 /m39 /m38 /m37 /m36 /m35 /m34 /m33 /m32 /m31 /m30 /m29 /m28 /m27 /m26 /m25 /m24 /m23 /m22 /m21 /m20 /m19 /m18 /m17 /m16 /m15 /m14 /m13 /m12 /m11 /m10 /m9 /m8 /m7 /m6 /m5 /m4 /m3 /m2 /m1 /getTranscriptChallenge_memory_footprint /updateTranscript_memory_footprint /modexp_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT /PROOF_STATE_POLYS_1_X_SLOT
        /PROOF_STATE_POLYS_1_Y_SLOT /PROOF_STATE_POLYS_2_X_SLOT /PROOF_STATE_POLYS_2_Y_SLOT
        /PROOF_STATE_POLYS_3_X_SLOT /PROOF_STATE_POLYS_3_Y_SLOT /PROOF_LOOKUP_S_POLY_X_SLOT
        /PROOF_LOOKUP_S_POLY_Y_SLOT /STATE_ETA_SLOT /STATE_BETA_SLOT /PROOF_STATE_POLYS_0_X_SLOT
        /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT /STATE_GAMMA_SLOT
        /STATE_BETA_LOOKUP_SLOT /STATE_GAMMA_LOOKUP_SLOT /PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT
        /PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT /STATE_ALPHA_SLOT /PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT /STATE_Z_SLOT /STATE_Z_IN_DOMAIN_SIZE
        /PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT
        /PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT
        /PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT /PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT /PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT
        /PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT /PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT
        /PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT /PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT /PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT
        /PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT /PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT /PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT
        /PROOF_OPENING_PROOF_AT_Z_X_SLOT /STATE_V_SLOT /PROOF_OPENING_PROOF_AT_Z_Y_SLOT
        /PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 9! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.

seq 1 1:(
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
  z{1} = (of_int stateZ{2})%W256 /\
  _68{1} = (of_int stateZInDomain{2})%W256 /\
  _71{1} = (of_int proofQuotientPolyOpeningAtZ{2})%W256 /\
  _73{1} = (of_int proofStatePolys0OpeningAtZ{2})%W256 /\
  _75{1} = (of_int proofStatePolys1OpeningAtZ{2})%W256 /\
  _77{1} = (of_int proofStatePolys2OpeningAtZ{2})%W256 /\
  _79{1} = (of_int proofStatePolys3OpeningAtZ{2})%W256 /\
  _81{1} = (of_int proofStatePolys3OpeningAtZOmega{2})%W256 /\
  _83{1} = (of_int proofGateSelectors0OpeningAtZ{2})%W256 /\
  _85{1} = (of_int proofCopyPermutationPolys0OpeningAtZ{2})%W256 /\
  _87{1} = (of_int proofCopyPermutationPolys1OpeningAtZ{2})%W256 /\
  _89{1} = (of_int proofCopyPermutationPolys2OpeningAtZ{2})%W256 /\
  _91{1} = (of_int proofCopyPermutationGrandProductOpeningAtZOmega{2})%W256 /\
  _93{1} = (of_int proofLookupTPolyOpeningAtZ{2})%W256 /\
  _95{1} = (of_int proofLookupSelectorPolyOpeningAtZ{2})%W256 /\
  _97{1} = (of_int proofLookupTableTypePolyOpeningAtZ{2})%W256 /\
  _99{1} = (of_int proofLookupSPolyOpeningAtZOmega{2})%W256 /\
  _101{1} = (of_int proofLookupGrandProductOpeningAtZOmega{2})%W256 /\
  _103{1} = (of_int proofLookupTPolyOpeningAtZOmega{2})%W256 /\
  _105{1} = (of_int proofLinearisationPolyOpeningAtZ{2})%W256 /\
  _107{1} = (of_int stateV{2})%W256 /\
  _110{1} = (of_int proofOpeningProofAtZX{2})%W256 /\
  _112{1} = (of_int proofOpeningProofAtZY{2})%W256 /\
  _114{1} = (of_int proofOpeningProofAtZOmegaX{2})%W256 /\
  s0_42 = state0_42{2} /\
  s1_42 = state1_42{2} /\
  (0 <= state0_43{2} && state0_43{2} < W256.modulus) /\
  (0 <= state1_43{2} && state1_43{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
  (0 <= stateZInDomain{2} && stateZInDomain{2} < Constants.R) /\
  (0 <= stateV{2} && stateV{2} < 2 ^ 253) /\
  sEta = _20{1} /\ sBeta = _27{1} /\ sGamma = _30{1} /\ sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\ sAlpha = _47{1} /\ sZ = z{1} /\ sZInDomainSize = _68{1} /\
  sV = _107{1} /\
  Primops.memory{1} = updateTranscript_memory_footprint m61 _114{1} (W256.of_int state0_43{2}) (W256.of_int state1_43{2})
).
call (updateTranscript_low_equiv_mid m61 s0_42 s1_42 proofOpeningProofAtZOmegaXG).
skip. progress.

exists* state0_43{2}, state1_43{2}; elim*=> s0_43 s1_43.
pose m62 := updateTranscript_memory_footprint m61 (W256.of_int proofOpeningProofAtZOmegaXG) (W256.of_int s0_43) (W256.of_int s1_43).
seq 1 0:(
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
  z{1} = (of_int stateZ{2})%W256 /\
  _68{1} = (of_int stateZInDomain{2})%W256 /\
  _71{1} = (of_int proofQuotientPolyOpeningAtZ{2})%W256 /\
  _73{1} = (of_int proofStatePolys0OpeningAtZ{2})%W256 /\
  _75{1} = (of_int proofStatePolys1OpeningAtZ{2})%W256 /\
  _77{1} = (of_int proofStatePolys2OpeningAtZ{2})%W256 /\
  _79{1} = (of_int proofStatePolys3OpeningAtZ{2})%W256 /\
  _81{1} = (of_int proofStatePolys3OpeningAtZOmega{2})%W256 /\
  _83{1} = (of_int proofGateSelectors0OpeningAtZ{2})%W256 /\
  _85{1} = (of_int proofCopyPermutationPolys0OpeningAtZ{2})%W256 /\
  _87{1} = (of_int proofCopyPermutationPolys1OpeningAtZ{2})%W256 /\
  _89{1} = (of_int proofCopyPermutationPolys2OpeningAtZ{2})%W256 /\
  _91{1} = (of_int proofCopyPermutationGrandProductOpeningAtZOmega{2})%W256 /\
  _93{1} = (of_int proofLookupTPolyOpeningAtZ{2})%W256 /\
  _95{1} = (of_int proofLookupSelectorPolyOpeningAtZ{2})%W256 /\
  _97{1} = (of_int proofLookupTableTypePolyOpeningAtZ{2})%W256 /\
  _99{1} = (of_int proofLookupSPolyOpeningAtZOmega{2})%W256 /\
  _101{1} = (of_int proofLookupGrandProductOpeningAtZOmega{2})%W256 /\
  _103{1} = (of_int proofLookupTPolyOpeningAtZOmega{2})%W256 /\
  _105{1} = (of_int proofLinearisationPolyOpeningAtZ{2})%W256 /\
  _107{1} = (of_int stateV{2})%W256 /\
  _110{1} = (of_int proofOpeningProofAtZX{2})%W256 /\
  _112{1} = (of_int proofOpeningProofAtZY{2})%W256 /\
  _114{1} = (of_int proofOpeningProofAtZOmegaX{2})%W256 /\
  _116{1} = (of_int proofOpeningProofAtZOmegaY{2})%W256 /\
  s0_43 = state0_43{2} /\
  s1_43 = state1_43{2} /\
  (0 <= state0_43{2} && state0_43{2} < W256.modulus) /\
  (0 <= state1_43{2} && state1_43{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
  (0 <= stateZInDomain{2} && stateZInDomain{2} < Constants.R) /\
  (0 <= stateV{2} && stateV{2} < 2 ^ 253) /\
  sEta = _20{1} /\ sBeta = _27{1} /\ sGamma = _30{1} /\ sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\ sAlpha = _47{1} /\ sZ = z{1} /\ sZInDomainSize = _68{1} /\
  sV = _107{1} /\
  Primops.memory{1} = m62 /\
  W256.to_uint (mload m62 TRANSCRIPT_STATE_0_SLOT) = state0_43{2} /\
  W256.to_uint (mload m62 TRANSCRIPT_STATE_1_SLOT) = state1_43{2}
).
call{1} (ConcretePrimops.mload_pspec m62 PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT).
skip; progress;
rewrite /m62 /m61 /m60 /m59 /m58 /m57 /m56 /m55 /m54 /m53 /m52 /m51 /m50 /m49 /m48 /m47 /m46 /m45 /m44 /m43 /m42 /m41 /m40 /m39 /m38 /m37 /m36 /m35 /m34 /m33 /m32 /m31 /m30 /m29 /m28 /m27 /m26 /m25 /m24 /m23 /m22 /m21 /m20 /m19 /m18 /m17 /m16 /m15 /m14 /m13 /m12 /m11 /m10 /m9 /m8 /m7 /m6 /m5 /m4 /m3 /m2 /m1 /getTranscriptChallenge_memory_footprint /updateTranscript_memory_footprint /modexp_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT /PROOF_STATE_POLYS_1_X_SLOT
        /PROOF_STATE_POLYS_1_Y_SLOT /PROOF_STATE_POLYS_2_X_SLOT /PROOF_STATE_POLYS_2_Y_SLOT
        /PROOF_STATE_POLYS_3_X_SLOT /PROOF_STATE_POLYS_3_Y_SLOT /PROOF_LOOKUP_S_POLY_X_SLOT
        /PROOF_LOOKUP_S_POLY_Y_SLOT /STATE_ETA_SLOT /STATE_BETA_SLOT /PROOF_STATE_POLYS_0_X_SLOT
        /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT /STATE_GAMMA_SLOT
        /STATE_BETA_LOOKUP_SLOT /STATE_GAMMA_LOOKUP_SLOT /PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT
        /PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT /STATE_ALPHA_SLOT /PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT /STATE_Z_SLOT /STATE_Z_IN_DOMAIN_SIZE
        /PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT
        /PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT
        /PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT /PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT /PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT
        /PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT /PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT
        /PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT /PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT /PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT
        /PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT /PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT /PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT
        /PROOF_OPENING_PROOF_AT_Z_X_SLOT /STATE_V_SLOT /PROOF_OPENING_PROOF_AT_Z_Y_SLOT
        /PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT /PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 9! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
do 2! (rewrite load_store_diff; try by simplify).
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store8_diff_32; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.

seq 1 1:(
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
  z{1} = (of_int stateZ{2})%W256 /\
  _68{1} = (of_int stateZInDomain{2})%W256 /\
  _71{1} = (of_int proofQuotientPolyOpeningAtZ{2})%W256 /\
  _73{1} = (of_int proofStatePolys0OpeningAtZ{2})%W256 /\
  _75{1} = (of_int proofStatePolys1OpeningAtZ{2})%W256 /\
  _77{1} = (of_int proofStatePolys2OpeningAtZ{2})%W256 /\
  _79{1} = (of_int proofStatePolys3OpeningAtZ{2})%W256 /\
  _81{1} = (of_int proofStatePolys3OpeningAtZOmega{2})%W256 /\
  _83{1} = (of_int proofGateSelectors0OpeningAtZ{2})%W256 /\
  _85{1} = (of_int proofCopyPermutationPolys0OpeningAtZ{2})%W256 /\
  _87{1} = (of_int proofCopyPermutationPolys1OpeningAtZ{2})%W256 /\
  _89{1} = (of_int proofCopyPermutationPolys2OpeningAtZ{2})%W256 /\
  _91{1} = (of_int proofCopyPermutationGrandProductOpeningAtZOmega{2})%W256 /\
  _93{1} = (of_int proofLookupTPolyOpeningAtZ{2})%W256 /\
  _95{1} = (of_int proofLookupSelectorPolyOpeningAtZ{2})%W256 /\
  _97{1} = (of_int proofLookupTableTypePolyOpeningAtZ{2})%W256 /\
  _99{1} = (of_int proofLookupSPolyOpeningAtZOmega{2})%W256 /\
  _101{1} = (of_int proofLookupGrandProductOpeningAtZOmega{2})%W256 /\
  _103{1} = (of_int proofLookupTPolyOpeningAtZOmega{2})%W256 /\
  _105{1} = (of_int proofLinearisationPolyOpeningAtZ{2})%W256 /\
  _107{1} = (of_int stateV{2})%W256 /\
  _110{1} = (of_int proofOpeningProofAtZX{2})%W256 /\
  _112{1} = (of_int proofOpeningProofAtZY{2})%W256 /\
  _114{1} = (of_int proofOpeningProofAtZOmegaX{2})%W256 /\
  _116{1} = (of_int proofOpeningProofAtZOmegaY{2})%W256 /\
  s0_43 = state0_43{2} /\
  s1_43 = state1_43{2} /\
  (0 <= state0_44{2} && state0_44{2} < W256.modulus) /\
  (0 <= state1_44{2} && state1_44{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
  (0 <= stateZInDomain{2} && stateZInDomain{2} < Constants.R) /\
  (0 <= stateV{2} && stateV{2} < 2 ^ 253) /\
  sEta = _20{1} /\ sBeta = _27{1} /\ sGamma = _30{1} /\ sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\ sAlpha = _47{1} /\ sZ = z{1} /\ sZInDomainSize = _68{1} /\
  sV = _107{1} /\
  Primops.memory{1} = updateTranscript_memory_footprint m62 _116{1} (W256.of_int state0_44{2}) (W256.of_int state1_44{2})
).
call (updateTranscript_low_equiv_mid m62 s0_43 s1_43 proofOpeningProofAtZOmegaYG).
skip. progress.

exists* state0_44{2}, state1_44{2}; elim*=> s0_44 s1_44.
pose m63 := updateTranscript_memory_footprint m62 (W256.of_int proofOpeningProofAtZOmegaYG) (W256.of_int s0_44) (W256.of_int s1_44).
seq 0 0:(
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
  z{1} = (of_int stateZ{2})%W256 /\
  _68{1} = (of_int stateZInDomain{2})%W256 /\
  _71{1} = (of_int proofQuotientPolyOpeningAtZ{2})%W256 /\
  _73{1} = (of_int proofStatePolys0OpeningAtZ{2})%W256 /\
  _75{1} = (of_int proofStatePolys1OpeningAtZ{2})%W256 /\
  _77{1} = (of_int proofStatePolys2OpeningAtZ{2})%W256 /\
  _79{1} = (of_int proofStatePolys3OpeningAtZ{2})%W256 /\
  _81{1} = (of_int proofStatePolys3OpeningAtZOmega{2})%W256 /\
  _83{1} = (of_int proofGateSelectors0OpeningAtZ{2})%W256 /\
  _85{1} = (of_int proofCopyPermutationPolys0OpeningAtZ{2})%W256 /\
  _87{1} = (of_int proofCopyPermutationPolys1OpeningAtZ{2})%W256 /\
  _89{1} = (of_int proofCopyPermutationPolys2OpeningAtZ{2})%W256 /\
  _91{1} = (of_int proofCopyPermutationGrandProductOpeningAtZOmega{2})%W256 /\
  _93{1} = (of_int proofLookupTPolyOpeningAtZ{2})%W256 /\
  _95{1} = (of_int proofLookupSelectorPolyOpeningAtZ{2})%W256 /\
  _97{1} = (of_int proofLookupTableTypePolyOpeningAtZ{2})%W256 /\
  _99{1} = (of_int proofLookupSPolyOpeningAtZOmega{2})%W256 /\
  _101{1} = (of_int proofLookupGrandProductOpeningAtZOmega{2})%W256 /\
  _103{1} = (of_int proofLookupTPolyOpeningAtZOmega{2})%W256 /\
  _105{1} = (of_int proofLinearisationPolyOpeningAtZ{2})%W256 /\
  _107{1} = (of_int stateV{2})%W256 /\
  _110{1} = (of_int proofOpeningProofAtZX{2})%W256 /\
  _112{1} = (of_int proofOpeningProofAtZY{2})%W256 /\
  _114{1} = (of_int proofOpeningProofAtZOmegaX{2})%W256 /\
  _116{1} = (of_int proofOpeningProofAtZOmegaY{2})%W256 /\
  s0_44 = state0_44{2} /\
  s1_44 = state1_44{2} /\
  (0 <= state0_44{2} && state0_44{2} < W256.modulus) /\
  (0 <= state1_44{2} && state1_44{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
  (0 <= stateZInDomain{2} && stateZInDomain{2} < Constants.R) /\
  (0 <= stateV{2} && stateV{2} < 2 ^ 253) /\
  sEta = _20{1} /\
  sBeta = _27{1} /\
  sGamma = _30{1} /\
  sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\
  sAlpha = _47{1} /\
  sZ = z{1} /\
  sZInDomainSize = _68{1} /\
  sV = _107{1} /\
  Primops.memory{1} = m63 /\
  W256.to_uint (mload m63 TRANSCRIPT_STATE_0_SLOT) = state0_44{2} /\
  W256.to_uint (mload m63 TRANSCRIPT_STATE_1_SLOT) = state1_44{2}
).
skip; progress;
rewrite /m63 /m62 /m61 /m60 /m59 /m58 /m57 /m56 /m55 /m54 /m53 /m52 /m51 /m50 /m49 /m48 /m47 /m46 /m45 /m44 /m43 /m42 /m41 /m40 /m39 /m38 /m37 /m36 /m35 /m34 /m33 /m32 /m31 /m30 /m29 /m28 /m27 /m26 /m25 /m24 /m23 /m22 /m21 /m20 /m19 /m18 /m17 /m16 /m15 /m14 /m13 /m12 /m11 /m10 /m9 /m8 /m7 /m6 /m5 /m4 /m3 /m2 /m1 /getTranscriptChallenge_memory_footprint /updateTranscript_memory_footprint /modexp_memory_footprint; progress;
rewrite /TRANSCRIPT_STATE_1_SLOT /PROOF_STATE_POLYS_0_Y_SLOT /TRANSCRIPT_STATE_0_SLOT
        /TRANSCRIPT_DST_BYTE_SLOT /TRANSCRIPT_CHALLENGE_SLOT /PROOF_STATE_POLYS_1_X_SLOT
        /PROOF_STATE_POLYS_1_Y_SLOT /PROOF_STATE_POLYS_2_X_SLOT /PROOF_STATE_POLYS_2_Y_SLOT
        /PROOF_STATE_POLYS_3_X_SLOT /PROOF_STATE_POLYS_3_Y_SLOT /PROOF_LOOKUP_S_POLY_X_SLOT
        /PROOF_LOOKUP_S_POLY_Y_SLOT /STATE_ETA_SLOT /STATE_BETA_SLOT /PROOF_STATE_POLYS_0_X_SLOT
        /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT /STATE_GAMMA_SLOT
        /STATE_BETA_LOOKUP_SLOT /STATE_GAMMA_LOOKUP_SLOT /PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT
        /PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT /STATE_ALPHA_SLOT /PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT /PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT /PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT
        /PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT /STATE_Z_SLOT /STATE_Z_IN_DOMAIN_SIZE
        /PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT
        /PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT /PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT
        /PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT /PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT /PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT
        /PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT /PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT /PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT
        /PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT /PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT /PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT
        /PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT /PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT /PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT
        /PROOF_OPENING_PROOF_AT_Z_X_SLOT /STATE_V_SLOT /PROOF_OPENING_PROOF_AT_Z_Y_SLOT
        /PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT /PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.
rewrite load_store_diff; try by simplify.
rewrite load_store_same of_uintK; apply mod_eq_self; try by simplify.

seq 1 1:(
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
  z{1} = (of_int stateZ{2})%W256 /\
  _68{1} = (of_int stateZInDomain{2})%W256 /\
  _71{1} = (of_int proofQuotientPolyOpeningAtZ{2})%W256 /\
  _73{1} = (of_int proofStatePolys0OpeningAtZ{2})%W256 /\
  _75{1} = (of_int proofStatePolys1OpeningAtZ{2})%W256 /\
  _77{1} = (of_int proofStatePolys2OpeningAtZ{2})%W256 /\
  _79{1} = (of_int proofStatePolys3OpeningAtZ{2})%W256 /\
  _81{1} = (of_int proofStatePolys3OpeningAtZOmega{2})%W256 /\
  _83{1} = (of_int proofGateSelectors0OpeningAtZ{2})%W256 /\
  _85{1} = (of_int proofCopyPermutationPolys0OpeningAtZ{2})%W256 /\
  _87{1} = (of_int proofCopyPermutationPolys1OpeningAtZ{2})%W256 /\
  _89{1} = (of_int proofCopyPermutationPolys2OpeningAtZ{2})%W256 /\
  _91{1} = (of_int proofCopyPermutationGrandProductOpeningAtZOmega{2})%W256 /\
  _93{1} = (of_int proofLookupTPolyOpeningAtZ{2})%W256 /\
  _95{1} = (of_int proofLookupSelectorPolyOpeningAtZ{2})%W256 /\
  _97{1} = (of_int proofLookupTableTypePolyOpeningAtZ{2})%W256 /\
  _99{1} = (of_int proofLookupSPolyOpeningAtZOmega{2})%W256 /\
  _101{1} = (of_int proofLookupGrandProductOpeningAtZOmega{2})%W256 /\
  _103{1} = (of_int proofLookupTPolyOpeningAtZOmega{2})%W256 /\
  _105{1} = (of_int proofLinearisationPolyOpeningAtZ{2})%W256 /\
  _107{1} = (of_int stateV{2})%W256 /\
  _110{1} = (of_int proofOpeningProofAtZX{2})%W256 /\
  _112{1} = (of_int proofOpeningProofAtZY{2})%W256 /\
  _114{1} = (of_int proofOpeningProofAtZOmegaX{2})%W256 /\
  _116{1} = (of_int proofOpeningProofAtZOmegaY{2})%W256 /\
  _118{1} = (of_int stateU{2})%W256 /\
  s0_44 = state0_44{2} /\
  s1_44 = state1_44{2} /\
  (0 <= state0_44{2} && state0_44{2} < W256.modulus) /\
  (0 <= state1_44{2} && state1_44{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
  (0 <= stateZInDomain{2} && stateZInDomain{2} < Constants.R) /\
  (0 <= stateV{2} && stateV{2} < 2 ^ 253) /\
  (0 <= stateU{2} && stateU{2} < 2 ^ 253) /\
  sEta = _20{1} /\
  sBeta = _27{1} /\
  sGamma = _30{1} /\
  sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\
  sAlpha = _47{1} /\
  sZ = z{1} /\
  sZInDomainSize = _68{1} /\
  sV = _107{1} /\
  Primops.memory{1} = getTranscriptChallenge_memory_footprint m63 8
).
call (getTranscriptChallenge_low_equiv_mid m63 s0_44 s1_44 8).
skip. progress.

exists* _118{1}; elim*=> sU.
pose m64 := getTranscriptChallenge_memory_footprint m63 8.
pose m65 := mstore m64 STATE_U_SLOT sU.
seq 1 0:(
  (initialS0{2} = initialS0G /\
   initialS1{2} = initialS1G /\
   publicInput{2} = publicInputG /\
   proofStatePolys0X{2} = proofStatePolys0XG /\
   proofStatePolys0Y{2} = proofStatePolys0YG /\
   proofStatePolys1X{2} = proofStatePolys1XG /\
   proofStatePolys1Y{2} = proofStatePolys1YG /\
   proofStatePolys2X{2} = proofStatePolys2XG /\
   proofStatePolys2Y{2} = proofStatePolys2YG /\
   proofStatePolys3X{2} = proofStatePolys3XG /\
   proofStatePolys3Y{2} = proofStatePolys3YG /\
   proofLookupSPolyX{2} = proofLookupSPolyXG /\
   proofLookupSPolyY{2} = proofLookupSPolyYG /\
   proofCopyPermutationGrandProductX{2} = proofCopyPermutationGrandProductXG /\
   proofCopyPermutationGrandProductY{2} = proofCopyPermutationGrandProductYG /\
   proofLookupGrandProductX{2} = proofLookupGrandProductXG /\
   proofLookupGrandProductY{2} = proofLookupGrandProductYG /\
   proofQuotientPolyParts0X{2} = proofQuotientPolyParts0XG /\
   proofQuotientPolyParts0Y{2} = proofQuotientPolyParts0YG /\
   proofQuotientPolyParts1X{2} = proofQuotientPolyParts1XG /\
   proofQuotientPolyParts1Y{2} = proofQuotientPolyParts1YG /\
   proofQuotientPolyParts2X{2} = proofQuotientPolyParts2XG /\
   proofQuotientPolyParts2Y{2} = proofQuotientPolyParts2YG /\
   proofQuotientPolyParts3X{2} = proofQuotientPolyParts3XG /\
   proofQuotientPolyParts3Y{2} = proofQuotientPolyParts3YG /\
   proofQuotientPolyOpeningAtZ{2} = proofQuotientPolyOpeningAtZG /\
   proofStatePolys0OpeningAtZ{2} = proofStatePolys0OpeningAtZG /\
   proofStatePolys1OpeningAtZ{2} = proofStatePolys1OpeningAtZG /\
   proofStatePolys2OpeningAtZ{2} = proofStatePolys2OpeningAtZG /\
   proofStatePolys3OpeningAtZ{2} = proofStatePolys3OpeningAtZG /\
   proofStatePolys3OpeningAtZOmega{2} = proofStatePolys3OpeningAtZOmegaG /\
   proofGateSelectors0OpeningAtZ{2} = proofGateSelectors0OpeningAtZG /\
   proofCopyPermutationPolys0OpeningAtZ{2} =
   proofCopyPermutationPolys0OpeningAtZG /\
   proofCopyPermutationPolys1OpeningAtZ{2} =
   proofCopyPermutationPolys1OpeningAtZG /\
   proofCopyPermutationPolys2OpeningAtZ{2} =
   proofCopyPermutationPolys2OpeningAtZG /\
   proofCopyPermutationGrandProductOpeningAtZOmega{2} =
   proofCopyPermutationGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZ{2} = proofLookupTPolyOpeningAtZG /\
   proofLookupSelectorPolyOpeningAtZ{2} = proofLookupSelectorPolyOpeningAtZG /\
   proofLookupTableTypePolyOpeningAtZ{2} =
   proofLookupTableTypePolyOpeningAtZG /\
   proofLookupSPolyOpeningAtZOmega{2} = proofLookupSPolyOpeningAtZOmegaG /\
   proofLookupGrandProductOpeningAtZOmega{2} =
   proofLookupGrandProductOpeningAtZOmegaG /\
   proofLookupTPolyOpeningAtZOmega{2} = proofLookupTPolyOpeningAtZOmegaG /\
   proofLinearisationPolyOpeningAtZ{2} = proofLinearisationPolyOpeningAtZG /\
   proofOpeningProofAtZX{2} = proofOpeningProofAtZXG /\
   proofOpeningProofAtZY{2} = proofOpeningProofAtZYG /\
   proofOpeningProofAtZOmegaX{2} = proofOpeningProofAtZOmegaXG /\
   proofOpeningProofAtZOmegaY{2} = proofOpeningProofAtZOmegaYG) /\
  to_uint (mload m TRANSCRIPT_STATE_0_SLOT) = initialS0{2} /\
  to_uint (mload m TRANSCRIPT_STATE_1_SLOT) = initialS1{2} /\
  to_uint (mload m PROOF_PUBLIC_INPUT) = publicInputG /\
  to_uint (mload m PROOF_STATE_POLYS_0_X_SLOT) = proofStatePolys0XG /\
  to_uint (mload m PROOF_STATE_POLYS_0_Y_SLOT) = proofStatePolys0YG /\
  to_uint (mload m PROOF_STATE_POLYS_1_X_SLOT) = proofStatePolys1XG /\
  to_uint (mload m PROOF_STATE_POLYS_1_Y_SLOT) = proofStatePolys1YG /\
  to_uint (mload m PROOF_STATE_POLYS_2_X_SLOT) = proofStatePolys2XG /\
  to_uint (mload m PROOF_STATE_POLYS_2_Y_SLOT) = proofStatePolys2YG /\
  to_uint (mload m PROOF_STATE_POLYS_3_X_SLOT) = proofStatePolys3XG /\
  to_uint (mload m PROOF_STATE_POLYS_3_Y_SLOT) = proofStatePolys3YG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_X_SLOT) = proofLookupSPolyXG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_Y_SLOT) = proofLookupSPolyYG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_X_SLOT) =
  proofCopyPermutationGrandProductXG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_Y_SLOT) =
  proofCopyPermutationGrandProductYG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_X_SLOT) =
  proofLookupGrandProductXG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_Y_SLOT) =
  proofLookupGrandProductYG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_X_SLOT) =
  proofQuotientPolyParts0XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_0_Y_SLOT) =
  proofQuotientPolyParts0YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_X_SLOT) =
  proofQuotientPolyParts1XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_1_Y_SLOT) =
  proofQuotientPolyParts1YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_X_SLOT) =
  proofQuotientPolyParts2XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_2_Y_SLOT) =
  proofQuotientPolyParts2YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_X_SLOT) =
  proofQuotientPolyParts3XG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_PARTS_3_Y_SLOT) =
  proofQuotientPolyParts3YG /\
  to_uint (mload m PROOF_QUOTIENT_POLY_OPENING_AT_Z_SLOT) =
  proofQuotientPolyOpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_0_OPENING_AT_Z_SLOT) =
  proofStatePolys0OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_1_OPENING_AT_Z_SLOT) =
  proofStatePolys1OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_2_OPENING_AT_Z_SLOT) =
  proofStatePolys2OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_SLOT) =
  proofStatePolys3OpeningAtZG /\
  to_uint (mload m PROOF_STATE_POLYS_3_OPENING_AT_Z_OMEGA_SLOT) =
  proofStatePolys3OpeningAtZOmegaG /\
  to_uint (mload m PROOF_GATE_SELECTORS_0_OPENING_AT_Z_SLOT) =
  proofGateSelectors0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_0_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys0OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_1_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys1OpeningAtZG /\
  to_uint (mload m PROOF_COPY_PERMUTATION_POLYS_2_OPENING_AT_Z_SLOT) =
  proofCopyPermutationPolys2OpeningAtZG /\
  to_uint
    (mload m PROOF_COPY_PERMUTATION_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofCopyPermutationGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_SELECTOR_POLY_OPENING_AT_Z_SLOT) =
  proofLookupSelectorPolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_TABLE_TYPE_POLY_OPENING_AT_Z_SLOT) =
  proofLookupTableTypePolyOpeningAtZG /\
  to_uint (mload m PROOF_LOOKUP_S_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupSPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_GRAND_PRODUCT_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupGrandProductOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LOOKUP_T_POLY_OPENING_AT_Z_OMEGA_SLOT) =
  proofLookupTPolyOpeningAtZOmegaG /\
  to_uint (mload m PROOF_LINEARISATION_POLY_OPENING_AT_Z_SLOT) =
  proofLinearisationPolyOpeningAtZG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_X_SLOT) = proofOpeningProofAtZXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_Y_SLOT) = proofOpeningProofAtZYG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_X_SLOT) =
  proofOpeningProofAtZOmegaXG /\
  to_uint (mload m PROOF_OPENING_PROOF_AT_Z_OMEGA_Y_SLOT) =
  proofOpeningProofAtZOmegaYG /\
  !Primops.reverted{1} /\
  _2{1} = (of_int publicInputG)%W256 /\
  _4{1} = (of_int proofStatePolys0XG)%W256 /\
  _6{1} = (of_int proofStatePolys0YG)%W256 /\
  _8{1} = (of_int proofStatePolys1XG)%W256 /\
  _10{1} = (of_int proofStatePolys1YG)%W256 /\
  _12{1} = (of_int proofStatePolys2XG)%W256 /\
  _14{1} = (of_int proofStatePolys2YG)%W256 /\
  _16{1} = (of_int proofStatePolys3XG)%W256 /\
  _18{1} = (of_int proofStatePolys3YG)%W256 /\
  _20{1} = (of_int stateEta{2})%W256 /\
  _23{1} = (of_int proofLookupSPolyX{2})%W256 /\
  _25{1} = (of_int proofLookupSPolyY{2})%W256 /\
  _27{1} = (of_int stateBeta{2})%W256 /\
  _30{1} = (of_int stateGamma{2})%W256 /\
  _33{1} = (of_int proofCopyPermutationGrandProductX{2})%W256 /\
  _35{1} = (of_int proofCopyPermutationGrandProductY{2})%W256 /\
  _37{1} = (of_int stateBetaLookup{2})%W256 /\
  _40{1} = (of_int stateGammaLookup{2})%W256 /\
  _43{1} = (of_int proofLookupGrandProductX{2})%W256 /\
  _45{1} = (of_int proofLookupGrandProductY{2})%W256 /\
  _47{1} = (of_int stateAlpha{2})%W256 /\
  _50{1} = (of_int proofQuotientPolyParts0X{2})%W256 /\
  _52{1} = (of_int proofQuotientPolyParts0Y{2})%W256 /\
  _54{1} = (of_int proofQuotientPolyParts1X{2})%W256 /\
  _56{1} = (of_int proofQuotientPolyParts1Y{2})%W256 /\
  _58{1} = (of_int proofQuotientPolyParts2X{2})%W256 /\
  _60{1} = (of_int proofQuotientPolyParts2Y{2})%W256 /\
  _62{1} = (of_int proofQuotientPolyParts3X{2})%W256 /\
  _64{1} = (of_int proofQuotientPolyParts3Y{2})%W256 /\
  z{1} = (of_int stateZ{2})%W256 /\
  _68{1} = (of_int stateZInDomain{2})%W256 /\
  _71{1} = (of_int proofQuotientPolyOpeningAtZ{2})%W256 /\
  _73{1} = (of_int proofStatePolys0OpeningAtZ{2})%W256 /\
  _75{1} = (of_int proofStatePolys1OpeningAtZ{2})%W256 /\
  _77{1} = (of_int proofStatePolys2OpeningAtZ{2})%W256 /\
  _79{1} = (of_int proofStatePolys3OpeningAtZ{2})%W256 /\
  _81{1} = (of_int proofStatePolys3OpeningAtZOmega{2})%W256 /\
  _83{1} = (of_int proofGateSelectors0OpeningAtZ{2})%W256 /\
  _85{1} = (of_int proofCopyPermutationPolys0OpeningAtZ{2})%W256 /\
  _87{1} = (of_int proofCopyPermutationPolys1OpeningAtZ{2})%W256 /\
  _89{1} = (of_int proofCopyPermutationPolys2OpeningAtZ{2})%W256 /\
  _91{1} = (of_int proofCopyPermutationGrandProductOpeningAtZOmega{2})%W256 /\
  _93{1} = (of_int proofLookupTPolyOpeningAtZ{2})%W256 /\
  _95{1} = (of_int proofLookupSelectorPolyOpeningAtZ{2})%W256 /\
  _97{1} = (of_int proofLookupTableTypePolyOpeningAtZ{2})%W256 /\
  _99{1} = (of_int proofLookupSPolyOpeningAtZOmega{2})%W256 /\
  _101{1} = (of_int proofLookupGrandProductOpeningAtZOmega{2})%W256 /\
  _103{1} = (of_int proofLookupTPolyOpeningAtZOmega{2})%W256 /\
  _105{1} = (of_int proofLinearisationPolyOpeningAtZ{2})%W256 /\
  _107{1} = (of_int stateV{2})%W256 /\
  _110{1} = (of_int proofOpeningProofAtZX{2})%W256 /\
  _112{1} = (of_int proofOpeningProofAtZY{2})%W256 /\
  _114{1} = (of_int proofOpeningProofAtZOmegaX{2})%W256 /\
  _116{1} = (of_int proofOpeningProofAtZOmegaY{2})%W256 /\
  _118{1} = (of_int stateU{2})%W256 /\
  s0_44 = state0_44{2} /\
  s1_44 = state1_44{2} /\
  (0 <= state0_44{2} && state0_44{2} < W256.modulus) /\
  (0 <= state1_44{2} && state1_44{2} < W256.modulus) /\
  (0 <= stateEta{2} && stateEta{2} < 2 ^ 253) /\
  (0 <= stateBeta{2} && stateBeta{2} < 2 ^ 253) /\
  (0 <= stateBetaLookup{2} && stateBetaLookup{2} < 2 ^ 253) /\
  (0 <= stateGamma{2} && stateGamma{2} < 2 ^ 253) /\
  (0 <= stateGammaLookup{2} && stateGammaLookup{2} < 2 ^ 253) /\
  (0 <= stateAlpha{2} && stateAlpha{2} < 2 ^ 253) /\
  (0 <= stateZ{2} && stateZ{2} < 2 ^ 253) /\
  (0 <= stateZInDomain{2} && stateZInDomain{2} < Constants.R) /\
  (0 <= stateV{2} && stateV{2} < 2 ^ 253) /\
  (0 <= stateU{2} && stateU{2} < 2 ^ 253) /\
  sEta = _20{1} /\
  sBeta = _27{1} /\
  sGamma = _30{1} /\
  sBetaLookup = _37{1} /\
  sGammaLookup = _40{1} /\
  sAlpha = _47{1} /\
  sZ = z{1} /\
  sZInDomainSize = _68{1} /\
  sV = _107{1} /\
  sU = _118{1} /\
  Primops.memory{1} = m65
).
call{1} (ConcretePrimops.mstore_pspec m64 STATE_U_SLOT sU).
skip; progress.

skip. progress.
rewrite /m65 /m64 /m63 /m62 /m61 /m60 /m59 /m58 /m57 /m56 /m55 /m54 /m53 /m52 /m51 /m50 /m49 /m48 /m47 /m46 /m45 /m44 /m43 /m42 /m41 /m40 /m39 /m38 /m37 /m36 /m35 /m34 /m33 /m32 /m31 /m30 /m29 /m28 /m27 /m26 /m25 /m24 /m23 /m22 /m21 /m20 /m19 /m18 /m17 /m16 /m15 /m14 /m13 /m12 /m11 /m10 /m9 /m8 /m7 /m6 /m5 /m4 /m3 /m2 /m1 /initializeTranscript_memory_footprint.
do 38! rewrite updateTranscript_memory_footprint_same. progress.
smt().
qed.

lemma initializeTranscript_mid_equiv_high_encapsulated
:
equiv [InitializeTranscript.mid ~ InitializeTranscript.high_encapsulated :
arg{1} = (
initialS0{2}, 
initialS1{2},
FieldR.asint publicInput{2},
(F_to_int_point(aspoint_G1 proofStatePolys0{2})).`1,
(F_to_int_point(aspoint_G1 proofStatePolys0{2})).`2,
(F_to_int_point(aspoint_G1 proofStatePolys1{2})).`1,
(F_to_int_point(aspoint_G1 proofStatePolys1{2})).`2,
(F_to_int_point(aspoint_G1 proofStatePolys2{2})).`1, 
(F_to_int_point(aspoint_G1 proofStatePolys2{2})).`2,
(F_to_int_point(aspoint_G1 proofStatePolys3{2})).`1, 
(F_to_int_point(aspoint_G1 proofStatePolys3{2})).`2,
(F_to_int_point(aspoint_G1 proofLookupSPoly{2})).`1, 
(F_to_int_point(aspoint_G1 proofLookupSPoly{2})).`2,
(F_to_int_point(aspoint_G1 proofCopyPermutationGrandProduct{2})).`1, 
(F_to_int_point(aspoint_G1 proofCopyPermutationGrandProduct{2})).`2,
(F_to_int_point(aspoint_G1 proofLookupGrandProduct{2})).`1, 
(F_to_int_point(aspoint_G1 proofLookupGrandProduct{2})).`2,
(F_to_int_point(aspoint_G1 proofQuotientPolyParts0{2})).`1, 
(F_to_int_point(aspoint_G1 proofQuotientPolyParts0{2})).`2,
(F_to_int_point(aspoint_G1 proofQuotientPolyParts1{2})).`1, 
(F_to_int_point(aspoint_G1 proofQuotientPolyParts1{2})).`2,
(F_to_int_point(aspoint_G1 proofQuotientPolyParts2{2})).`1, 
(F_to_int_point(aspoint_G1 proofQuotientPolyParts2{2})).`2,
(F_to_int_point(aspoint_G1 proofQuotientPolyParts3{2})).`1, 
(F_to_int_point(aspoint_G1 proofQuotientPolyParts3{2})).`2,
FieldR.asint proofQuotientPolyOpeningAtZ{2},
FieldR.asint proofStatePolys0OpeningAtZ{2}, 
FieldR.asint proofStatePolys1OpeningAtZ{2},
FieldR.asint proofStatePolys2OpeningAtZ{2}, 
FieldR.asint proofStatePolys3OpeningAtZ{2},
FieldR.asint proofStatePolys3OpeningAtZOmega{2},
FieldR.asint proofGateSelectors0OpeningAtZ{2},
FieldR.asint proofCopyPermutationPolys0OpeningAtZ{2}, 
FieldR.asint proofCopyPermutationPolys1OpeningAtZ{2}, 
FieldR.asint proofCopyPermutationPolys2OpeningAtZ{2},
FieldR.asint proofCopyPermutationGrandProductOpeningAtZOmega{2},
FieldR.asint proofLookupTPolyOpeningAtZ{2},
FieldR.asint proofLookupSelectorPolyOpeningAtZ{2},
FieldR.asint proofLookupTableTypePolyOpeningAtZ{2},
FieldR.asint proofLookupSPolyOpeningAtZOmega{2},
FieldR.asint proofLookupGrandProductOpeningAtZOmega{2},
FieldR.asint proofLookupTPolyOpeningAtZOmega{2},
FieldR.asint proofLinearisationPolyOpeningAtZ{2},
(F_to_int_point(aspoint_G1 proofOpeningProofAtZ{2})).`1, 
(F_to_int_point(aspoint_G1 proofOpeningProofAtZ{2})).`2,
(F_to_int_point(aspoint_G1 proofOpeningProofAtZOmega{2})).`1,
(F_to_int_point(aspoint_G1 proofOpeningProofAtZOmega{2})).`2) 
==>
res{1}.`1  = FieldR.asint res{2}.`1 /\ 
res{1}.`2  = FieldR.asint res{2}.`2 /\
res{1}.`3  = FieldR.asint res{2}.`3 /\
res{1}.`4  = FieldR.asint res{2}.`4 /\
res{1}.`5  = FieldR.asint res{2}.`5 /\
res{1}.`6  = FieldR.asint res{2}.`6 /\
res{1}.`7  = FieldR.asint res{2}.`7 /\
res{1}.`8  = FieldR.asint res{2}.`8 /\
res{1}.`9  = FieldR.asint res{2}.`9 /\
res{1}.`10 = FieldR.asint res{2}.`10
].
proof. proc.
have I: forall a b c, 0 <= keccakC 2 a b c %% 2^253. by smt().
have II: forall a b c, (keccakC 2 a b c %% 2^253) < 2^253. by smt().

seq 9 9: (#pre /\ 
  ={state0_0, state1_0, state0_1, state1_1, state0_2, state1_2, state0_3, state1_3, state0_4,
    state1_4, state0_5, state1_5, state0_6, state1_6, state0_7, state1_7, state0_8, state1_8}). 
inline *; wp; skip; by progress.
seq 1 1: (#pre /\ stateEta{1} = FieldR.asint stateEta{2} /\ 0 <= stateEta{1} < 2^253). 
inline*. wp. skip. progress.
  rewrite FieldR.inFK -Constants.r_eq_fieldr_p /Constants.R. smt ().
  exact I. exact II.

seq 2 2: (#pre /\ ={state0_9, state1_9, state0_10, state1_10}).
inline *; wp; skip; by progress.
seq 1 1: (#pre /\ stateBeta{1} = FieldR.asint stateBeta{2} /\ 0 <= stateBeta{1} < 2^253). 
inline*; wp; skip; progress.
  rewrite FieldR.inFK -Constants.r_eq_fieldr_p /Constants.R. smt ().
  exact I. exact II.
seq 1 1: (#pre /\ stateGamma{1} = FieldR.asint stateGamma{2} /\ 0 <= stateGamma{1} < 2^253). 
inline*; wp; skip; progress.
  rewrite FieldR.inFK -Constants.r_eq_fieldr_p /Constants.R. smt ().
  exact I. exact II.

seq 2 2: (#pre /\ ={state0_11, state1_11, state0_12, state1_12}).
inline *; wp; skip; by progress.
seq 1 1: (#pre /\ stateBetaLookup{1} = FieldR.asint stateBetaLookup{2} /\ 0 <= stateBetaLookup{1} < 2^253). 
inline*; wp; skip; progress.
  rewrite FieldR.inFK -Constants.r_eq_fieldr_p /Constants.R. smt ().
  exact I. exact II.
seq 1 1: (#pre /\ stateGammaLookup{1} = FieldR.asint stateGammaLookup{2} /\ 0 <= stateGammaLookup{1} < 2^253).
inline*; wp; skip; progress.
  rewrite FieldR.inFK -Constants.r_eq_fieldr_p /Constants.R. smt ().
  exact I. exact II.

seq 2 2: (#pre /\ ={state0_13, state1_13, state0_14, state1_14}).
inline *; wp; skip; by progress.
seq 1 1: (#pre /\ stateAlpha{1} = FieldR.asint stateAlpha{2} /\ 0 <= stateAlpha{1} < 2^253). 
inline*; wp; skip; progress.
  rewrite FieldR.inFK -Constants.r_eq_fieldr_p /Constants.R. smt ().
  exact I. exact II.

seq 8 8: (#pre /\ 
  ={state0_15, state1_15, state0_16, state1_16, state0_17, state1_17, state0_18, state1_18,
    state0_19, state1_19, state0_20, state1_20, state0_21, state1_21, state0_22, state1_22}).
inline *; wp; skip; by progress.

seq 2 2: (#pre /\ 
    stateZ{1} = FieldR.asint stateZ{2} /\ 0 <= stateZ{1} < 2^253 /\ 
    stateZInDomain{1} = FieldR.asint stateZInDomain{2}).
inline*; wp; skip; progress.
  rewrite FieldR.inFK -Constants.r_eq_fieldr_p /Constants.R. smt ().
  exact I. exact II.
  rewrite RexpE.
  rewrite FieldR.exp_inF.
  rewrite /Constants.DOMAIN_SIZE.
  have ->: 0 <= 67108864 by trivial.
  have ->: forall (a b: FieldR.F), (if true then a else b) = a by trivial.
  rewrite FieldR.inFK.
  rewrite Constants.r_eq_fieldr_p.
  reflexivity.

seq 8 8: (#pre /\
  ={state0_23, state1_23, state0_24, state1_24, state0_25, state1_25, state0_26, state1_26, 
    state0_27, state1_27, state0_28, state1_28, state0_29, state1_29, state0_30, state1_30}).
inline *; wp; skip; by progress.
seq 10 10: (#pre /\
  ={state0_31, state1_31, state0_32, state1_32, state0_33, state1_33, state0_34, state1_34, 
    state0_35, state1_35, state0_36, state1_36, state0_37, state1_37, state0_38, state1_38, 
    state0_39, state1_39, state0_40, state1_40}).
inline *; wp; skip; by progress.
seq 1 1: (#pre /\ stateV{1} = FieldR.asint stateV{2} /\ 0 <= stateV{1} < 2^253). 
inline*; wp; skip; progress.
  rewrite FieldR.inFK -Constants.r_eq_fieldr_p /Constants.R. smt ().
  exact I. exact II.

seq 4 4: (#pre /\
  ={state0_41, state1_41, state0_42, state1_42, state0_43, state1_43, state0_44, state1_44}).
inline *; wp; skip; by progress.
seq 1 1: (#pre /\ stateU{1} = FieldR.asint stateU{2} /\ 0 <= stateU{1} < 2^253). 
inline*; wp; skip; progress.
  rewrite FieldR.inFK -Constants.r_eq_fieldr_p /Constants.R. smt ().
  exact I. exact II.

skip. progress.
qed.

lemma initializeTranscript_mid_equiv_high :
equiv [InitializeTranscript.mid ~ InitializeTranscript.high :
      arg{1} = (
    initialS0{2}, 
    initialS1{2},
    FieldR.asint publicInput{2},
        (F_to_int_point(aspoint_G1 proofStatePolys0{2})).`1,
        (F_to_int_point(aspoint_G1 proofStatePolys0{2})).`2,
        (F_to_int_point(aspoint_G1 proofStatePolys1{2})).`1,
        (F_to_int_point(aspoint_G1 proofStatePolys1{2})).`2,
        (F_to_int_point(aspoint_G1 proofStatePolys2{2})).`1, 
        (F_to_int_point(aspoint_G1 proofStatePolys2{2})).`2,
        (F_to_int_point(aspoint_G1 proofStatePolys3{2})).`1, 
        (F_to_int_point(aspoint_G1 proofStatePolys3{2})).`2,
        (F_to_int_point(aspoint_G1 proofLookupSPoly{2})).`1, 
        (F_to_int_point(aspoint_G1 proofLookupSPoly{2})).`2,
        (F_to_int_point(aspoint_G1 proofCopyPermutationGrandProduct{2})).`1, 
        (F_to_int_point(aspoint_G1 proofCopyPermutationGrandProduct{2})).`2,
        (F_to_int_point(aspoint_G1 proofLookupGrandProduct{2})).`1, 
        (F_to_int_point(aspoint_G1 proofLookupGrandProduct{2})).`2,
        (F_to_int_point(aspoint_G1 proofQuotientPolyParts0{2})).`1, 
        (F_to_int_point(aspoint_G1 proofQuotientPolyParts0{2})).`2,
        (F_to_int_point(aspoint_G1 proofQuotientPolyParts1{2})).`1, 
        (F_to_int_point(aspoint_G1 proofQuotientPolyParts1{2})).`2,
        (F_to_int_point(aspoint_G1 proofQuotientPolyParts2{2})).`1, 
        (F_to_int_point(aspoint_G1 proofQuotientPolyParts2{2})).`2,
        (F_to_int_point(aspoint_G1 proofQuotientPolyParts3{2})).`1, 
        (F_to_int_point(aspoint_G1 proofQuotientPolyParts3{2})).`2,
          FieldR.asint proofQuotientPolyOpeningAtZ{2},
          FieldR.asint proofStatePolys0OpeningAtZ{2}, 
          FieldR.asint proofStatePolys1OpeningAtZ{2},
          FieldR.asint proofStatePolys2OpeningAtZ{2}, 
          FieldR.asint proofStatePolys3OpeningAtZ{2},
          FieldR.asint proofStatePolys3OpeningAtZOmega{2},
          FieldR.asint proofGateSelectors0OpeningAtZ{2},
          FieldR.asint proofCopyPermutationPolys0OpeningAtZ{2}, 
          FieldR.asint proofCopyPermutationPolys1OpeningAtZ{2}, 
          FieldR.asint proofCopyPermutationPolys2OpeningAtZ{2},
          FieldR.asint proofCopyPermutationGrandProductOpeningAtZOmega{2},
          FieldR.asint proofLookupTPolyOpeningAtZ{2},
          FieldR.asint proofLookupSelectorPolyOpeningAtZ{2},
          FieldR.asint proofLookupTableTypePolyOpeningAtZ{2},
          FieldR.asint proofLookupSPolyOpeningAtZOmega{2},
          FieldR.asint proofLookupGrandProductOpeningAtZOmega{2},
          FieldR.asint proofLookupTPolyOpeningAtZOmega{2},
          FieldR.asint proofLinearisationPolyOpeningAtZ{2},
        (F_to_int_point(aspoint_G1 proofOpeningProofAtZ{2})).`1, 
        (F_to_int_point(aspoint_G1 proofOpeningProofAtZ{2})).`2,
        (F_to_int_point(aspoint_G1 proofOpeningProofAtZOmega{2})).`1,
        (F_to_int_point(aspoint_G1 proofOpeningProofAtZOmega{2})).`2)
      ==>
        res{1}.`1  = FieldR.asint res{2}.`1 /\
        res{1}.`2  = FieldR.asint res{2}.`2 /\
        res{1}.`3  = FieldR.asint res{2}.`3 /\
        res{1}.`4  = FieldR.asint res{2}.`4 /\
        res{1}.`5  = FieldR.asint res{2}.`5 /\
        res{1}.`6  = FieldR.asint res{2}.`6 /\
        res{1}.`7  = FieldR.asint res{2}.`7 /\
        res{1}.`8  = FieldR.asint res{2}.`8 /\
        res{1}.`9  = FieldR.asint res{2}.`9 /\
        res{1}.`10 = FieldR.asint res{2}.`10
    ].
    proof.
      transitivity InitializeTranscript.high_encapsulated
    (
      arg{1} = (
    initialS0{2}, 
    initialS1{2},
    FieldR.asint publicInput{2},
        (F_to_int_point(aspoint_G1 proofStatePolys0{2})).`1,
        (F_to_int_point(aspoint_G1 proofStatePolys0{2})).`2,
        (F_to_int_point(aspoint_G1 proofStatePolys1{2})).`1,
        (F_to_int_point(aspoint_G1 proofStatePolys1{2})).`2,
        (F_to_int_point(aspoint_G1 proofStatePolys2{2})).`1, 
        (F_to_int_point(aspoint_G1 proofStatePolys2{2})).`2,
        (F_to_int_point(aspoint_G1 proofStatePolys3{2})).`1, 
        (F_to_int_point(aspoint_G1 proofStatePolys3{2})).`2,
        (F_to_int_point(aspoint_G1 proofLookupSPoly{2})).`1, 
        (F_to_int_point(aspoint_G1 proofLookupSPoly{2})).`2,
        (F_to_int_point(aspoint_G1 proofCopyPermutationGrandProduct{2})).`1, 
        (F_to_int_point(aspoint_G1 proofCopyPermutationGrandProduct{2})).`2,
        (F_to_int_point(aspoint_G1 proofLookupGrandProduct{2})).`1, 
        (F_to_int_point(aspoint_G1 proofLookupGrandProduct{2})).`2,
        (F_to_int_point(aspoint_G1 proofQuotientPolyParts0{2})).`1, 
        (F_to_int_point(aspoint_G1 proofQuotientPolyParts0{2})).`2,
        (F_to_int_point(aspoint_G1 proofQuotientPolyParts1{2})).`1, 
        (F_to_int_point(aspoint_G1 proofQuotientPolyParts1{2})).`2,
        (F_to_int_point(aspoint_G1 proofQuotientPolyParts2{2})).`1, 
        (F_to_int_point(aspoint_G1 proofQuotientPolyParts2{2})).`2,
        (F_to_int_point(aspoint_G1 proofQuotientPolyParts3{2})).`1, 
        (F_to_int_point(aspoint_G1 proofQuotientPolyParts3{2})).`2,
          FieldR.asint proofQuotientPolyOpeningAtZ{2},
          FieldR.asint proofStatePolys0OpeningAtZ{2}, 
          FieldR.asint proofStatePolys1OpeningAtZ{2},
          FieldR.asint proofStatePolys2OpeningAtZ{2}, 
          FieldR.asint proofStatePolys3OpeningAtZ{2},
          FieldR.asint proofStatePolys3OpeningAtZOmega{2},
          FieldR.asint proofGateSelectors0OpeningAtZ{2},
          FieldR.asint proofCopyPermutationPolys0OpeningAtZ{2}, 
          FieldR.asint proofCopyPermutationPolys1OpeningAtZ{2}, 
          FieldR.asint proofCopyPermutationPolys2OpeningAtZ{2},
          FieldR.asint proofCopyPermutationGrandProductOpeningAtZOmega{2},
          FieldR.asint proofLookupTPolyOpeningAtZ{2},
          FieldR.asint proofLookupSelectorPolyOpeningAtZ{2},
          FieldR.asint proofLookupTableTypePolyOpeningAtZ{2},
          FieldR.asint proofLookupSPolyOpeningAtZOmega{2},
          FieldR.asint proofLookupGrandProductOpeningAtZOmega{2},
          FieldR.asint proofLookupTPolyOpeningAtZOmega{2},
          FieldR.asint proofLinearisationPolyOpeningAtZ{2},
        (F_to_int_point(aspoint_G1 proofOpeningProofAtZ{2})).`1, 
        (F_to_int_point(aspoint_G1 proofOpeningProofAtZ{2})).`2,
        (F_to_int_point(aspoint_G1 proofOpeningProofAtZOmega{2})).`1,
        (F_to_int_point(aspoint_G1 proofOpeningProofAtZOmega{2})).`2)
      ==>
        res{1}.`1  = FieldR.asint res{2}.`1 /\
        res{1}.`2  = FieldR.asint res{2}.`2 /\
        res{1}.`3  = FieldR.asint res{2}.`3 /\
        res{1}.`4  = FieldR.asint res{2}.`4 /\
        res{1}.`5  = FieldR.asint res{2}.`5 /\
        res{1}.`6  = FieldR.asint res{2}.`6 /\
        res{1}.`7  = FieldR.asint res{2}.`7 /\
        res{1}.`8  = FieldR.asint res{2}.`8 /\
        res{1}.`9  = FieldR.asint res{2}.`9 /\
        res{1}.`10 = FieldR.asint res{2}.`10
    ) (={arg} ==> ={res}).
        progress.
        exists arg{2}. by progress.
        by progress.
        exact initializeTranscript_mid_equiv_high_encapsulated.
        proc.
        seq 1 2 : (#pre /\ state0_0{1} = state0_0{2} /\ state1_0{1} = state1_0{2}).
        inline UpdateTranscript.mid. wp. skip. progress.
        seq 1 2 : (#pre /\ state0_1{1} = state0_1{2} /\ state1_1{1} = state1_1{2}).
        inline UpdateTranscript.mid. wp. skip. progress.
        seq 1 2 : (#pre /\ state0_2{1} = state0_2{2} /\ state1_2{1} = state1_2{2}).
        inline UpdateTranscript.mid. wp. skip. progress.
        seq 1 2 : (#pre /\ state0_3{1} = state0_3{2} /\ state1_3{1} = state1_3{2}).
        inline UpdateTranscript.mid. wp. skip. progress.
        seq 1 2 : (#pre /\ state0_4{1} = state0_4{2} /\ state1_4{1} = state1_4{2}).
        inline UpdateTranscript.mid. wp. skip. progress.
        seq 1 2 : (#pre /\ state0_5{1} = state0_5{2} /\ state1_5{1} = state1_5{2}).
        inline UpdateTranscript.mid. wp. skip. progress.
        seq 1 2 : (#pre /\ state0_6{1} = state0_6{2} /\ state1_6{1} = state1_6{2}).
        inline UpdateTranscript.mid. wp. skip. progress.
        seq 1 2 : (#pre /\ state0_7{1} = state0_7{2} /\ state1_7{1} = state1_7{2}).
        inline UpdateTranscript.mid. wp. skip. progress.
        seq 1 2 : (#pre /\ state0_8{1} = state0_8{2} /\ state1_8{1} = state1_8{2}).
        inline UpdateTranscript.mid. wp. skip. progress.
        seq 1 1 : (#pre /\ stateEta{1} = stateEta{2}). wp. skip. progress.
        seq 1 2 : (#pre /\ state0_9{1} = state0_9{2} /\ state1_9{1} = state1_9{2}).
        inline UpdateTranscript.mid. wp. skip. progress.
        seq 1 2 : (#pre /\ state0_10{1} = state0_10{2} /\ state1_10{1} = state1_10{2}).
        inline UpdateTranscript.mid. wp. skip. progress.
        seq 2 2 : (#pre /\ stateBeta{1} = stateBeta{2} /\ stateGamma{1} = stateGamma{2}). wp. skip. progress.
        seq 1 2 : (#pre /\ state0_11{1} = state0_11{2} /\ state1_11{1} = state1_11{2}).
        inline UpdateTranscript.mid. wp. skip. progress.
        seq 1 2 : (#pre /\ state0_12{1} = state0_12{2} /\ state1_12{1} = state1_12{2}).
        inline UpdateTranscript.mid. wp. skip. progress.
        seq 2 2 : (#pre /\ stateBetaLookup{1} = stateBetaLookup{2} /\ stateGammaLookup{1} = stateGammaLookup{2}). wp. skip. progress.
        seq 1 2 : (#pre /\ state0_13{1} = state0_13{2} /\ state1_13{1} = state1_13{2}).
        inline UpdateTranscript.mid. wp. skip. progress.
        seq 1 2 : (#pre /\ state0_14{1} = state0_14{2} /\ state1_14{1} = state1_14{2}).
        inline UpdateTranscript.mid. wp. skip. progress.
        seq 1 1 : (#pre /\ stateAlpha{1} = stateAlpha{2}). wp. skip. progress.
        seq 1 2 : (#pre /\ state0_15{1} = state0_15{2} /\ state1_15{1} = state1_15{2}).
        inline UpdateTranscript.mid. wp. skip. progress.
        seq 1 2 : (#pre /\ state0_16{1} = state0_16{2} /\ state1_16{1} = state1_16{2}).
        inline UpdateTranscript.mid. wp. skip. progress.
        seq 1 2 : (#pre /\ state0_17{1} = state0_17{2} /\ state1_17{1} = state1_17{2}).
        inline UpdateTranscript.mid. wp. skip. progress.
        seq 1 2 : (#pre /\ state0_18{1} = state0_18{2} /\ state1_18{1} = state1_18{2}).
        inline UpdateTranscript.mid. wp. skip. progress.
        seq 1 2 : (#pre /\ state0_19{1} = state0_19{2} /\ state1_19{1} = state1_19{2}).
        inline UpdateTranscript.mid. wp. skip. progress.
        seq 1 2 : (#pre /\ state0_20{1} = state0_20{2} /\ state1_20{1} = state1_20{2}).
        inline UpdateTranscript.mid. wp. skip. progress.
        seq 1 2 : (#pre /\ state0_21{1} = state0_21{2} /\ state1_21{1} = state1_21{2}).
        inline UpdateTranscript.mid. wp. skip. progress.
        seq 1 2 : (#pre /\ state0_22{1} = state0_22{2} /\ state1_22{1} = state1_22{2}).
        inline UpdateTranscript.mid. wp. skip. progress.
        seq 2 2 : (#pre /\ stateZ{1} = stateZ{2} /\ stateZInDomain{1} = stateZInDomain{2}). wp. skip. progress.
        seq 1 2 : (#pre /\ state0_23{1} = state0_23{2} /\ state1_23{1} = state1_23{2}).
        inline UpdateTranscript.mid. wp. skip. progress.
        seq 1 2 : (#pre /\ state0_24{1} = state0_24{2} /\ state1_24{1} = state1_24{2}).
        inline UpdateTranscript.mid. wp. skip. progress.
        seq 1 2 : (#pre /\ state0_25{1} = state0_25{2} /\ state1_25{1} = state1_25{2}).
        inline UpdateTranscript.mid. wp. skip. progress.
        seq 1 2 : (#pre /\ state0_26{1} = state0_26{2} /\ state1_26{1} = state1_26{2}).
        inline UpdateTranscript.mid. wp. skip. progress.
        seq 1 2 : (#pre /\ state0_27{1} = state0_27{2} /\ state1_27{1} = state1_27{2}).
        inline UpdateTranscript.mid. wp. skip. progress.
        seq 1 2 : (#pre /\ state0_28{1} = state0_28{2} /\ state1_28{1} = state1_28{2}).
        inline UpdateTranscript.mid. wp. skip. progress.
        seq 1 2 : (#pre /\ state0_29{1} = state0_29{2} /\ state1_29{1} = state1_29{2}).
        inline UpdateTranscript.mid. wp. skip. progress.
        seq 1 2 : (#pre /\ state0_30{1} = state0_30{2} /\ state1_30{1} = state1_30{2}).
        inline UpdateTranscript.mid. wp. skip. progress.
        seq 1 2 : (#pre /\ state0_31{1} = state0_31{2} /\ state1_31{1} = state1_31{2}).
        inline UpdateTranscript.mid. wp. skip. progress.
        seq 1 2 : (#pre /\ state0_32{1} = state0_32{2} /\ state1_32{1} = state1_32{2}).
        inline UpdateTranscript.mid. wp. skip. progress.
        seq 1 2 : (#pre /\ state0_33{1} = state0_33{2} /\ state1_33{1} = state1_33{2}).
        inline UpdateTranscript.mid. wp. skip. progress.
        seq 1 2 : (#pre /\ state0_34{1} = state0_34{2} /\ state1_34{1} = state1_34{2}).
        inline UpdateTranscript.mid. wp. skip. progress.
        seq 1 2 : (#pre /\ state0_35{1} = state0_35{2} /\ state1_35{1} = state1_35{2}).
        inline UpdateTranscript.mid. wp. skip. progress.
        seq 1 2 : (#pre /\ state0_36{1} = state0_36{2} /\ state1_36{1} = state1_36{2}).
        inline UpdateTranscript.mid. wp. skip. progress.
        seq 1 2 : (#pre /\ state0_37{1} = state0_37{2} /\ state1_37{1} = state1_37{2}).
        inline UpdateTranscript.mid. wp. skip. progress.
        seq 1 2 : (#pre /\ state0_38{1} = state0_38{2} /\ state1_38{1} = state1_38{2}).
        inline UpdateTranscript.mid. wp. skip. progress.
        seq 1 2 : (#pre /\ state0_39{1} = state0_39{2} /\ state1_39{1} = state1_39{2}).
        inline UpdateTranscript.mid. wp. skip. progress.
        seq 1 2 : (#pre /\ state0_40{1} = state0_40{2} /\ state1_40{1} = state1_40{2}).
        inline UpdateTranscript.mid. wp. skip. progress.
        seq 1 1 : (#pre /\ stateV{1} = stateV{2}). wp. skip. progress.
        seq 1 2 : (#pre /\ state0_41{1} = state0_41{2} /\ state1_41{1} = state1_41{2}).
        inline UpdateTranscript.mid. wp. skip. progress.
        seq 1 2 : (#pre /\ state0_42{1} = state0_42{2} /\ state1_42{1} = state1_42{2}).
        inline UpdateTranscript.mid. wp. skip. progress.
        seq 1 2 : (#pre /\ state0_43{1} = state0_43{2} /\ state1_43{1} = state1_43{2}).
        inline UpdateTranscript.mid. wp. skip. progress.
        seq 1 2 : (#pre /\ state0_44{1} = state0_44{2} /\ state1_44{1} = state1_44{2}).
        inline UpdateTranscript.mid. wp. skip. progress.
        wp. skip. progress.
  qed.
